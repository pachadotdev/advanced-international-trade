---
title: "Chapter 2. The Heckscher-Ohlin Model"
format: gfm
editor:
  markdown:
    wrap: 80
---

# Exercise 0

## Feenstra's code

```stata
* This is to read the data into Stata *

set mem 30m
insheet using c:\Empirical_Exercise\Chapter_2\trefler.csv
rename v1 country
rename v2 factor
rename v3 AT
rename v4 V
rename v5 Y
rename v6 B
rename v7 YPC
rename v8 POP

* create country index *
quietly summarize YPC
local maxYPC=_result(6)
gen ratio=YPC/`maxYPC'
replace ratio=ratio+0.0001 if country=="Italy"

sort ratio
egen indexc=group(ratio)

* create factor index *
sort factor
egen indexf=group(factor)

* include delta *

gen delta=1
replace delta=0.03 if country=="Bangladesh"
replace delta=0.09 if country=="Pakistan"
replace delta=0.10 if country=="Indonesia"
replace delta=0.09 if country=="Sri Lanka"
replace delta=0.17 if country=="Thailand"
replace delta=0.16 if country=="Colombia"
replace delta=0.28 if country=="Panama"
replace delta=0.29 if country=="Yugoslavia"
replace delta=0.14 if country=="Portugal"
replace delta=0.11 if country=="Uruguay"
replace delta=0.45 if country=="Greece"
replace delta=0.55 if country=="Ireland"
replace delta=0.42 if country=="Spain"
replace delta=0.49 if country=="Israel"
replace delta=0.40 if country=="Hong Kong"
replace delta=0.38 if country=="New Zealand"
replace delta=0.60 if country=="Austria"
replace delta=0.48 if country=="Singapore"
replace delta=0.60 if country=="Italy"
replace delta=0.58 if country=="UK"
replace delta=0.70 if country=="Japan"
replace delta=0.65 if country=="Belgium"
replace delta=0.47 if country=="Trinidad"
replace delta=0.72 if country=="Netherlands"
replace delta=0.65 if country=="Finland"
replace delta=0.73 if country=="Denmark"
replace delta=0.78 if country=="West Germany"
replace delta=0.74 if country=="France"
replace delta=0.57 if country=="Sweden"
replace delta=0.69 if country=="Norway"
replace delta=0.79 if country=="Switzerland"
replace delta=0.55 if country=="Canada"
replace delta=1 if country=="USA"

compress

label var country "Name of the country"
label var factor "Name of the factor"
label var AT "Factor content of trade F=A*T"
label var V "Endowment"
label var Y "GDP, World Bank, y=p*Q"
label var B "Trade balance, World Bank b=p*T"
label var YPC "GDP per capita, PWT"
label var indexc "Country indentifier"
label var indexf "Factor Indentifier"

save c:\Empirical_Exercise\Chapter_2\trefler,replace

exit
```

## My code

```{r}
# Packages ----

library(archive)
library(readr)
library(dplyr)
library(tidyr)
library(purrr)

# Extract ----

fzip <- "first-edition/Chapter-2.zip"
dout <- gsub("\\.zip$", "", fzip)

if (!dir.exists(dout)) {
  archive_extract("first-edition/Chapter-2.zip",
    dir = "first-edition/Chapter-2"
  )
}

# Read ----

fout <- paste0(dout, "/trefler.rds")

if (!file.exists(fout)) {
  trefler <- read_csv("first-edition/Chapter-2/trefler.csv", col_names = F) %>%
    rename(
      country = X1,
      factor = X2,
      at = X3,
      v = X4,
      y = X5,
      b = X6,
      ypc = X7,
      pop = X8
    )

  # Transform ----

  # see https://www.stata.com/manuals/rsummarize.pdf
  # https://www.stata.com/manuals/degen.pdf
  # https://www.stata.com/manuals/degen.pdf

  trefler <- trefler %>%

    mutate(ypc_max = max(ypc)) %>%
    mutate(
      ratio = case_when(
        country != "Italy" ~ ypc / ypc_max,
        country == "Italy" ~ (ypc / ypc_max) + 0.0001
      )
    ) %>%
    
    select(-ypc_max) %>%
    arrange(ratio) %>%
    
    group_by(ratio) %>%
    mutate(indexc = cur_group_id()) %>%

    group_by(factor) %>%
    mutate(indexf = cur_group_id()) %>%
    ungroup() %>%

    mutate(
      delta = case_when(
        country == "Bangladesh" ~ 0.03,
        country == "Pakistan" ~ 0.09,
        country == "Indonesia" ~ 0.10,
        country == "Sri Lanka" ~ 0.09,
        country == "Thailand" ~ 0.17,
        country == "Colombia" ~ 0.16,
        country == "Panama" ~ 0.28,
        country == "Yugoslavia" ~ 0.29,
        country == "Portugal" ~ 0.14,
        country == "Uruguay" ~ 0.11,
        country == "Greece" ~ 0.45,
        country == "Ireland" ~ 0.55,
        country == "Spain" ~ 0.42,
        country == "Israel" ~ 0.49,
        country == "Hong Kong" ~ 0.40,
        country == "New Zealand" ~ 0.38,
        country == "Austria" ~ 0.60,
        country == "Singapore" ~ 0.48,
        country == "Italy" ~ 0.60,
        country == "UK" ~ 0.58,
        country == "Japan" ~ 0.70,
        country == "Belgium" ~ 0.65,
        country == "Trinidad" ~ 0.47,
        country == "Netherlands" ~ 0.72,
        country == "Finland" ~ 0.65,
        country == "Denmark" ~ 0.73,
        country == "West Germany" ~ 0.78,
        country == "France" ~ 0.74,
        country == "Sweden" ~ 0.57,
        country == "Norway" ~ 0.69,
        country == "Switzerland" ~ 0.79,
        country == "Canada" ~ 0.55,
        country == "USA" ~ 1,
        TRUE ~ 1
      )
    )

  # Labels ----

  # Add stata-like labels to the columns

  # maybe this is not the best way to do it, but it works
  attr(trefler$country, "label") <- "Name of the country"
  attr(trefler$factor, "label") <- "Name of the factor"
  attr(trefler$at, "label") <- "Factor content of trade F=A*T"
  attr(trefler$v, "label") <- "Endowment"
  attr(trefler$y, "label") <- "GDP, World Bank, y=p*Q"
  attr(trefler$b, "label") <- "Trade balance, World Bank b=p*T"
  attr(trefler$ypc, "label") <- "GDP per capita, PWT"
  attr(trefler$indexc, "label") <- "Country indentifier"
  attr(trefler$indexf, "label") <- "Factor Indentifier"

  # Save ----

  saveRDS(trefler, fout)
} else {
  trefler <- readRDS(fout)
}
```

# Exercise 1

## Feenstra's code

```stata
* This program is to conduct sign test, Rank test and Missing trade test *

capture log close
log using c:\Empirical_Exercise\Chapter_2\sign_rank_1.log, replace

set mem 30m

use C:\Empirical_Exercise\Chapter_2\trefler, clear

* number of country in the dataset *
egen C=max(indexc)
egen F=max(indexf)

* Calculate the world level of Yw, Bw and Vw *
egen Yww=sum(Y)
gen Yw=Yww/F
egen Bww=sum(B)
gen Bw=Bww/F
egen Vfw=sum(V), by(indexf)

* Calculate country share Sc *
gen Sc=(Y-B)/(Yw-Bw)

* Calculate epsilon(fc) and sigma^2(f) according to eq.2 in Trefler (1995)*
gen Efc=AT-(V-Sc*Vfw)

* Construct the average epsilon for a given factor *
egen total=sum(Efc),by(indexf)
gen ave=total/C

* Construct sigma^2 and the weight *

egen tot=sum((Efc-ave)^2), by(indexf)
gen sigma2f=tot/(C-1)

codebook sigma2f
gen sigmaf=sqrt(sigma2f)
gen weight=sigmaf*sqrt(Sc)

* Using the weight, convert all the data *

gen trAT=AT/(sigmaf*sqrt(Sc))
gen trV=V/(sigmaf*sqrt(Sc))
gen trY=Y/sqrt(Sc)
gen trB=B/sqrt(Sc)
gen trVfw=Vfw/sigmaf

gen AThat=trV-Sc*trVfw
gen AThat2=(V-Sc*Vfw)/weight

* Correlation, should be .28 *

corr trAT AThat2

*************
* Sign Test *
*************

sort indexc
by indexc: count if trAT*AThat2>0

count if trAT*AThat2>0
display _result(1)/_N

*****************
* Missing Trade *
*****************

* Checking for the missing trade, should be .032 *

quietly summarize trAT
local varAT=_result(4)
quietly summarize AThat
local varHat=_result(4)
quietly summarize AThat2
local varHat2=_result(4)
display `varAT'/`varHat'
display `varAT'/`varHat2'

**************
* Rank Tests *
**************

keep country indexc indexf trAT AThat2

sort indexc indexf
reshape wide trAT AThat2, i(indexc) j(indexf)

local i=1
while `i'<9{
	local j=`i'+1
	while `j'<=9{
		gen rank`i'`j'=((trAT`i'-trAT`j')*(AThat2`i'-AThat2`j')>0)
		local j=`j'+1
	}
	local i=`i'+1
}

keep country indexc rank*
reshape long rank, i(indexc) j(factor)
egen r1=sum(rank), by(indexc)
gen r2=r1/36
collapse r2,by(indexc country)
sum r2
list

log close
exit
```

## My code

```{r}
# Transform ----

trefler <- trefler %>%
  
  # Number of country in the dataset
  mutate(
    c = max(indexc),
    f = max(indexf)
  ) %>%

  # Calculate the world level of Yw, Bw and Vw
  mutate(
    yww = sum(y),
    yw = yww / f,
    bww = sum(b),
    bw = bww / f 
  ) %>%

  group_by(indexf) %>%
  mutate(
    vfw = sum(v)
  ) %>%
  ungroup() %>%

  # Calculate country share Sc
  mutate(
    sc = (y - b) / (yw - bw)
  ) %>%

  # Calculate epsilon(fc) and sigma^2(f) according to eq.2 in Trefler (1995)
  mutate(
    efc = at - (v - sc * vfw)
  ) %>%

  # Construct the average epsilon for a given factor
  group_by(indexf) %>%
  mutate(ave = sum(efc) / c) %>%

  # Construct sigma^2 and the weight
  mutate(
    sigma2f = sum((efc - ave) ^ 2) / (c - 1),
    sigmaf = sqrt(sigma2f),
    weight = sigmaf * sqrt(sc)
  ) %>%
  ungroup() %>%

  # Using the weight, convert all the data
  mutate(
    trat = at / (sigmaf * sqrt(sc)),
    trv = v / (sigmaf * sqrt(sc)),
    try = y / sqrt(sc),
    trb = b / sqrt(sc),
    trvfw = vfw / sigmaf,
    athat = trv - sc * trvfw,
    athat2 = (v - (sc * vfw)) / weight
  ) %>%

  arrange(country)

# Correlation, should be .28
cor(trefler$trat, trefler$athat2)

# Sign Test ----

trefler %>%
  group_by(indexc) %>%
  summarize(
    p = sum(trat * athat2 > 0)
  )

trefler %>%
  summarize(
    p = sum(trat * athat2 > 0) / nrow(trefler)
  )

# Missing Trade ----

# Checking for the missing trade, should be .032

trefler %>%
  summarize(
    varat = var(trat),
    varhat = var(athat),
    varhat2 = var(athat2)
  ) %>%
  mutate(
    varat_varhat = varat / varhat,
    varat_varhat2 = varat / varhat2
  )

# Rank Tests ----

trefler_wide <- trefler %>%
  select(country, indexc, indexf, trat, athat2) %>%
  arrange(indexc, indexf) %>%
  pivot_wider(
    names_from = indexf,
    values_from = c(trat, athat2)
  )

# this would be too long
# trefler_wide <- trefler_wide %>%
#   mutate(
#     r12 = (trat_1 - trat_2) * (athat2_1 - athat2_2) > 0,
#     r13 = (trat_1 - trat_3) * (athat2_1 - athat2_3) > 0,
#     ...
#     r89 = (trat_8 - trat_9) * (athat2_8 - athat2_9) > 0,
#   )

# create all possible trat_1 - trat_2, trat_1 - trat_3, etc.

ranks <- expand_grid(
  one = 1:8,
  two = 1:9
) %>%
  filter(one < two)

trefler_rank <- map2(
  ranks$one,
  ranks$two,
  function(x,y) {
    trefler_wide %>%
      mutate(
        !!paste0("rank", x, y) := (!!sym(paste0("trat_", x)) -
          !!sym(paste0("trat_", y))) *
          (!!sym(paste0("athat2_", x)) -
            !!sym(paste0("athat2_", y))) > 0
    ) %>%
    select(country, indexc, starts_with("rank"))
  }
) %>%

  reduce(left_join, by = c("country", "indexc")) %>%

  pivot_longer(
    cols = starts_with("rank"),
    names_to = "rank",
    values_to = "value"
  ) %>%

  group_by(country, indexc) %>%
  summarise(r1 = sum(value)) %>%

  mutate(r2 = r1 / 36)

summary(trefler_rank$r2)

trefler_rank
```