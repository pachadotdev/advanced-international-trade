{
  "hash": "a8b121e585ab241f3074a1843972d32c",
  "result": {
    "markdown": "\n# Chapter 7. Import Tariffs and Dumping\n\n## Data Description for Feenstra (1989)\n\nThere are five data sets in excel format: `cars.csv`, `trucks.csv`, `cycon.csv`, `cypool.csv`, `cyship.csv`.  All of the variables in the data sets are fitted values from instrumental variables regression.\n\n| Variable | Description                                      |\n|----------|--------------------------------------------------|\n| iprice   | Import price                                     |\n| usprice  | US price                                         |\n| gprice   | German price                                     |\n| tariff   | Tariff rate                                      |\n| income   | Expenditure on product class                     |\n| lag0     | First order polynomial lag on betas              |\n| lag1     | Second order polynomial lag on betas             |\n| lag2     | Third order polynomial lag on betas              |\n| y        | Import price transformed, y = iprice – income    |\n| x1       | US price transformed, usprice – income           |\n| x2       | German price transformed, gprice – income        |\n| z0       | First order polynomial lag transformed           |\n| z1       | Second order polynomial lag transformed          |\n| z2       | Third order polynomial lag transformed           |\n\nNote: all the transformations are done to reflect their restrictions.  So some are restricted to homogeneity, where others are restricted to symmetry and homogeneity.\n\n### Explanation of lag0, lag1 and lag2\n\nWith a second-order polynomial, $\\alpha_i = a + bi + ci^2$ it follows that\n\n\\begin{align}\n\\sum_{i=0}^4 \\log(c_t^* s_{t-i}) \\alpha_i &= \\sum_{i=0}^4 \\log(c_t^* s_{t-i}) (a + bi + ci^2) \\\\\n&= a \\sum_{i=0}^4 \\log(c_t^* s_{t-i}) + b \\sum_{i=0}^4 \\log(c_t^* s_{t-i}) i + c \\sum_{i=0}^4 \\log(c_t^* s_{t-i}) i^2.\n\\end{align}\n\nLetting $\\log(c_t^* s_{t-i}) = x_i$, we can define the three lags appeating in this formula as\n\n\\begin{align}\n\\text{lag}0 = x_0 + x_1 + x_2 + x_3 + x_4 \\\\\n\\text{lag}1 = 0 + x_1 + 2x_2 + 3x_3 + 4x_4 \\\\\n\\text{lag}2 = 0 + x_1 + 4x_2 + 9x_3 + 16x_4.\n\\end{align}\n\nThen to compute the total pass-through of the exchange rate, it follow that,\n\n\\begin{align}\n\\sum_{i=0}^4 \\alpha_i &= \\sum_{i=0}^4 (a + bi + ci^2) \\\\\n&= 5a + b(1 + 2 + 3 + 4) + c(1^2 + 2^2 + 3^2 + 4^2) \\\\\n&= 5a + 10b + 30c.\n\\end{align}\n\nWhen estimating the equation using lag0, lag1, and lag2, the coefficient estimates that you obtain are a, b, and c, respectively.  Using this, you can recover the coefficient estimate and standard error for each individual exchange rate term reported in the Table 7.2. You can always do this by hand, but STATA does offer a command to calculate the linear combination of the estimated coefficients.  The syntax for this is,\n\n```stata\nlincom lag0 + lag1 + lag2\n```\n\nThis will calculate the coefficient estimates for the $\\log(c_t^* s_{t-1})$. This is much in a same way as the syntax for test. Lag0 in above command does not refer to the data, but the coefficient estimate associated with lag0. \n\n## Empirical exercise\n\nIn this exercise, you are asked to reproduce some of the empirical results from Feenstra (1989).\n\nTo complete the exercise, the files \"cars.csv, trucks.csv, cycon.csv, cyship.csv, cypool.csv\" should be stored in the directory: `c:\\Empirical_Exercise\\Chapter_7\\`.  Each of these can be used in STATA programs \"cars.do, trucks.do, cycon.do, cyship.do, cypool.do\" to create a dataset with the variables described in \"Documentation_Chp7.doc.\"\n\n## Exercise 1\n\nReplicate Table 7.2, i.e., run the specifications of (7.34) without imposing the tests of symmetry or homogeneity.  Duplicate all of the coefficients that are reported in this table, except the Durbin-Watson statistics.\n\n### Feenstra's code\n\nCars:\n\n```stata\nclear\ncapture log close\n\nlog using c:\\Empirical_Exercise\\Chapter_7\\cars.log, replace\n\ninsheet using c:\\Empirical_Exercise\\Chapter_7\\cars.csv\n* drop if time<=12\nregress iprice time timesq lag0 lag1 lag2 usprice gprice income\n\n*i=0\nlincom lag0\n\n*i=1\nlincom lag0+lag1+lag2\n\n*i=2\nlincom lag0+2*lag1+4*lag2\n\n*i=3\nlincom lag0+3*lag1+9*lag2\n\n*i=4\nlincom lag0+4*lag1+16*lag2\n\n*summation of betai's\nlincom 5*lag0+10*lag1+30*lag2\n\n*Impose the homogeneity constraint\nregress y time timesq z0 z1 z2 x1 x2\n\n*summation of betai's\nlincom 5*z0+10*z1+30*z2\n\nlog close\nexit\n```\n\nCycon:\n\n```stata\nclear\ncapture log close\n\nlog using c:\\Empirical_Exercise\\Chapter_7\\cycon.log,replace\n\ninsheet using c:\\Empirical_Exercise\\Chapter_7\\cycon.csv\ndrop if time<=16\ndrop if time>=45\nregress iprice dummy1 dummy2 dummy3 time timesq lag0 lag1 lag2 /*\n     */ tariff usprice gprice income\n\n*i=0\nlincom lag0\n\n*i=1\nlincom lag0+lag1+lag2\n\n*i=2\nlincom lag0+2*lag1+4*lag2\n\n*i=3\nlincom lag0+3*lag1+9*lag2\n\n*i=4\nlincom lag0+4*lag1+16*lag2\n\n*summation of betai's\nlincom 5*lag0+10*lag1+30*lag2\n\n*Impose the homogeneity and symmetry constraints\nregress y dummy1 dummy2 dummy3 time timesq z0 z1 z2 x1 x2\n\n*summation of betai's\nlincom 5*z0+10*z1+30*z2\n\nlog close\nexit\n```\n\nCypool:\n\n```stata\nclear\ncapture log close\nlog using c:\\Empirical_Exercise\\Chapter_7\\cypool.log,replace\n\ninsheet using c:\\Empirical_Exercise\\Chapter_7\\cypool.csv\n\nregress iprice dummy1 dummy2 dummy3 time timesq lag0 lag1 lag2 /*\n        */ tariff usprice gprice income\n\n*i=0\nlincom lag0\n\n*i=1\nlincom lag0+lag1+lag2\n\n*i=2\nlincom lag0+2*lag1+4*lag2\n\n*i=3\nlincom lag0+3*lag1+9*lag2\n\n*i=4\nlincom lag0+4*lag1+16*lag2\n\n*summation of betai's\nlincom 5*lag0+10*lag1+30*lag2\n\n*Impose the homogeneity and symmetry constraints\nregress y dummy1 dummy2 dummy3 time timesq z0 z1 z2 x1 x2\n\n*summation of betai's\nlincom 5*z0+10*z1+30*z2\n\nlog close\nexit\n```\n\nCyship:\n\n```stata\nclear\ncapture log close\n\nlog using c:\\Empirical_Exercise\\Chapter_7\\cyship.log,replace\n\ninsheet using c:\\Empirical_Exercise\\Chapter_7\\cyship.csv\ndrop if time<=16\nregress iprice dummy1 dummy2 dummy3 time timesq lag0 lag1 lag2 /*\n     */ tariff usprice gprice income\n\n*i=0\nlincom lag0\n\n*i=1\nlincom lag0+lag1+lag2\n\n*i=2\nlincom lag0+2*lag1+4*lag2\n\n*i=3\nlincom lag0+3*lag1+9*lag2\n\n*i=4\nlincom lag0+4*lag1+16*lag2\n\n*summation of betai's\nlincom 5*lag0+10*lag1+30*lag2\n\n*Impose the homogeneity and symmetry constraints\nregress y dummy1 dummy2 dummy3 time timesq z0 z1 z2 x1 x2\n\n*summation of betai's\nlincom 5*z0+10*z1+30*z2\n\nlog close\nexit\n```\n\nTrucks:\n\n```stata\nclear\ncapture log close\n\nlog using c:\\Empirical_Exercise\\Chapter_7\\trucks.log, replace\n\ninsheet using c:\\Empirical_Exercise\\Chapter_7\\trucks.csv\ndrop if time<=12\nregress iprice time timesq lag0 lag1 lag2 tariff usprice income\n\n*i=0\nlincom lag0\n\n*i=1\nlincom lag0+lag1+lag2\n\n*i=2\nlincom lag0+2*lag1+4*lag2\n\n*i=3\nlincom lag0+3*lag1+9*lag2\n\n*i=4\nlincom lag0+4*lag1+16*lag2\n\n*summation of betai's\nlincom 5*lag0+10*lag1+30*lag2\n\n*Impose the homogeneity and symmetry constraints\nregress y time timesq z0 z1 z2 x1\n\n*summation of betai's\nlincom 5*z0+10*z1+30*z2\n\nlog close\nexit\n```\n\n### My code\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Packages ----\n\nlibrary(archive)\nlibrary(readr)\nlibrary(dplyr)\nlibrary(broom)\n\n# Extract ----\n\nfzip <- \"first-edition/Chapter-7.zip\"\ndout <- gsub(\"\\\\.zip$\", \"\", fzip)\n\nif (!dir.exists(dout)) {\n  archive_extract(fzip, dir = dout)\n}\n\n# Read and transform ----\n\nfout <- paste0(dout, \"/feenstra_93.rds\")\n\nif (!file.exists(fout)) {\n  feenstra_93 <- list(\n    cars = read_csv(paste0(dout, \"/cars.csv\")),\n    cycon = read_csv(paste0(dout, \"/cycon.csv\")) %>%\n      filter(time > 16 & time < 45),\n    cypool = read_csv(paste0(dout, \"/cypool.csv\")),\n    cyship = read_csv(paste0(dout, \"/cyship.csv\")) %>%\n      filter(time > 16),\n    trucks = read_csv(paste0(dout, \"/trucks.csv\")) %>%\n      filter(time > 12)\n  )\n\n  saveRDS(feenstra_93, fout)\n} else {\n  feenstra_93 <- readRDS(fout)\n}\n\n# Models ----\n\n## Cars ----\n\nmod1 <- lm(\n  iprice ~ time + timesq + lag0 + lag1 + lag2 + usprice + gprice + income,\n  data = feenstra_93$cars\n)\n\nmod1_tidy <- tidy(mod1)\n\n# i = 0\n\nmod1_tidy %>%\n  filter(term == \"lag0\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 5\n  term  estimate std.error statistic  p.value\n  <chr>    <dbl>     <dbl>     <dbl>    <dbl>\n1 lag0     0.444     0.101      4.39 0.000286\n```\n:::\n\n```{.r .cell-code}\n# i = 1\n# use the delta method to calculate the standard errors\n# define auxiliary variables and functions\n\nmod1_vcov <- vcov(mod1)\n\nmod1_summ <- summary(mod1)\n\nw <- c(1, 1, 1)\n\nstd_error <- function(w, X, vars) {\n  as.numeric(sqrt(w %*% X[vars, vars] %*% w))\n}\n\np_value <- function(statistic, summary) {\n  as.numeric(2 * pt(-abs(statistic), df = summary$df[2]))\n}\n\nmod1_tidy %>%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %>%\n  mutate(w = w) %>%\n  summarise(\n    estimate = sum(estimate * w),\n    std.error = std_error(w, mod1_vcov, c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, mod1_summ)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n  estimate std.error statistic     p.value\n     <dbl>     <dbl>     <dbl>       <dbl>\n1    0.316    0.0417      7.59 0.000000261\n```\n:::\n\n```{.r .cell-code}\n# i = 2\n\nw <- c(1, 2, 4)\n\nmod1_tidy %>%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %>%\n  mutate(weight = c(1, 2, 4)) %>%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, mod1_vcov, c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, mod1_summ)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     <dbl>     <dbl>     <dbl>   <dbl>\n1    0.166    0.0783      2.12  0.0470\n```\n:::\n\n```{.r .cell-code}\n# i = 3\n\nw <- c(1, 3, 9)\n\nmod1_tidy %>%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %>%\n  mutate(weight = c(1, 3, 9)) %>%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, mod1_vcov, c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, mod1_summ)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     <dbl>     <dbl>     <dbl>   <dbl>\n1 -0.00794    0.0516    -0.154   0.879\n```\n:::\n\n```{.r .cell-code}\n# i = 4\n\nw <- c(1, 4, 16)\n\nmod1_tidy %>%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %>%\n  mutate(weight = c(1, 4, 16)) %>%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, mod1_vcov, c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, mod1_summ)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     <dbl>     <dbl>     <dbl>   <dbl>\n1   -0.205    0.0993     -2.06  0.0523\n```\n:::\n\n```{.r .cell-code}\n# summation of betai's\n\nw <- c(5, 10, 30)\n\nmod1_tidy %>%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %>%\n  mutate(weight = w) %>%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, mod1_vcov, c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, mod1_summ)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n  estimate std.error statistic     p.value\n     <dbl>     <dbl>     <dbl>       <dbl>\n1    0.713    0.0974      7.32 0.000000450\n```\n:::\n\n```{.r .cell-code}\n## Cycon ----\n\nmod2 <- lm(\n  iprice ~ dummy1 + dummy2 + dummy3 + time + timesq + lag0 + lag1 + lag2 +\n    tariff + usprice + gprice + income,\n  data = feenstra_93$cycon\n)\n\nmod2_tidy <- tidy(mod2)\n\n# i = 0\n\nmod2_tidy %>%\n  filter(term == \"lag0\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 5\n  term  estimate std.error statistic p.value\n  <chr>    <dbl>     <dbl>     <dbl>   <dbl>\n1 lag0     0.288     0.255      1.13   0.276\n```\n:::\n\n```{.r .cell-code}\n# i = 1\n\nw <- c(1, 1, 1)\n\nmod2_tidy %>%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %>%\n  mutate(w = w) %>%\n  summarise(\n    estimate = sum(estimate * w),\n    std.error = std_error(w, vcov(mod2), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod2))\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     <dbl>     <dbl>     <dbl>   <dbl>\n1    0.172    0.0947      1.82  0.0894\n```\n:::\n\n```{.r .cell-code}\n# i = 2\n\nw <- c(1, 2, 4)\n\nmod2_tidy %>%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %>%\n  mutate(weight = c(1, 2, 4)) %>%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod2), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod2))\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     <dbl>     <dbl>     <dbl>   <dbl>\n1    0.117     0.145     0.810   0.431\n```\n:::\n\n```{.r .cell-code}\n# i = 3\n\nw <- c(1, 3, 9)\n\nmod2_tidy %>%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %>%\n  mutate(weight = c(1, 3, 9)) %>%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod2), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod2))\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     <dbl>     <dbl>     <dbl>   <dbl>\n1    0.124    0.0837      1.48   0.159\n```\n:::\n\n```{.r .cell-code}\n# i = 4\n\nw <- c(1, 4, 16)\n\nmod2_tidy %>%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %>%\n  mutate(weight = c(1, 4, 16)) %>%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod2), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod2))\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     <dbl>     <dbl>     <dbl>   <dbl>\n1    0.192     0.230     0.833   0.418\n```\n:::\n\n```{.r .cell-code}\n# summation of betai's\n\nw <- c(5, 10, 30)\n\nmod2_tidy %>%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %>%\n  mutate(weight = w) %>%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod2), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod2))\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     <dbl>     <dbl>     <dbl>   <dbl>\n1    0.893     0.359      2.49  0.0252\n```\n:::\n\n```{.r .cell-code}\n## Cypool ----\n\nmod3 <- lm(\n  iprice ~ dummy1 + dummy2 + dummy3 + time + timesq + lag0 + lag1 + lag2 +\n    tariff + usprice + gprice + income,\n  data = feenstra_93$cypool\n)\n\nmod3_tidy <- tidy(mod3)\n\n# i = 0\n\nmod3_tidy %>%\n  filter(term == \"lag0\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 5\n  term  estimate std.error statistic p.value\n  <chr>    <dbl>     <dbl>     <dbl>   <dbl>\n1 lag0     0.447     0.209      2.14  0.0373\n```\n:::\n\n```{.r .cell-code}\n# i = 1\n\nw <- c(1, 1, 1)\n\nmod3_tidy %>%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %>%\n  mutate(w = w) %>%\n  summarise(\n    estimate = sum(estimate * w),\n    std.error = std_error(w, vcov(mod3), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod3))\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     <dbl>     <dbl>     <dbl>   <dbl>\n1    0.104    0.0912      1.14   0.261\n```\n:::\n\n```{.r .cell-code}\n# i = 2\n\nw <- c(1, 2, 4)\n\nmod3_tidy %>%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %>%\n  mutate(weight = c(1, 2, 4)) %>%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod3), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod3))\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     <dbl>     <dbl>     <dbl>   <dbl>\n1  -0.0313     0.153    -0.204   0.839\n```\n:::\n\n```{.r .cell-code}\n# i = 3\n\nw <- c(1, 3, 9)\n\nmod3_tidy %>%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %>%\n  mutate(weight = c(1, 3, 9)) %>%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod3), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod3))\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     <dbl>     <dbl>     <dbl>   <dbl>\n1   0.0422    0.0852     0.496   0.622\n```\n:::\n\n```{.r .cell-code}\n# i = 4\n\nw <- c(1, 4, 16)\n\nmod3_tidy %>%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %>%\n  mutate(weight = c(1, 4, 16)) %>%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod3), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod3))\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     <dbl>     <dbl>     <dbl>   <dbl>\n1    0.324     0.221      1.47   0.148\n```\n:::\n\n```{.r .cell-code}\n# summation of betai's\n\nw <- c(5, 10, 30)\n\nmod3_tidy %>%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %>%\n  mutate(weight = w) %>%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod3), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod3))\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n  estimate std.error statistic  p.value\n     <dbl>     <dbl>     <dbl>    <dbl>\n1    0.886     0.213      4.16 0.000119\n```\n:::\n\n```{.r .cell-code}\n## Cyship ----\n\nmod4 <- lm(\n  iprice ~ dummy1 + dummy2 + dummy3 + time + timesq + lag0 + lag1 + lag2 +\n    tariff + usprice + gprice + income,\n  data = feenstra_93$cyship\n)\n\nmod4_tidy <- tidy(mod4)\n\n# i = 0\n\nmod4_tidy %>%\n  filter(term == \"lag0\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 5\n  term  estimate std.error statistic p.value\n  <chr>    <dbl>     <dbl>     <dbl>   <dbl>\n1 lag0     0.798     0.665      1.20   0.242\n```\n:::\n\n```{.r .cell-code}\n# i = 1\n\nw <- c(1, 1, 1)\n\nmod4_tidy %>%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %>%\n  mutate(w = w) %>%\n  summarise(\n    estimate = sum(estimate * w),\n    std.error = std_error(w, vcov(mod4), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod4))\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     <dbl>     <dbl>     <dbl>   <dbl>\n1  -0.0417     0.260    -0.160   0.874\n```\n:::\n\n```{.r .cell-code}\n# i = 2\n\nw <- c(1, 2, 4)\n\nmod4_tidy %>%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %>%\n  mutate(weight = c(1, 2, 4)) %>%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod4), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod4))\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     <dbl>     <dbl>     <dbl>   <dbl>\n1   -0.335     0.523    -0.640   0.528\n```\n:::\n\n```{.r .cell-code}\n# i = 3\n\nw <- c(1, 3, 9)\n\nmod4_tidy %>%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %>%\n  mutate(weight = c(1, 3, 9)) %>%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod4), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod4))\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     <dbl>     <dbl>     <dbl>   <dbl>\n1  -0.0829     0.216    -0.384   0.704\n```\n:::\n\n```{.r .cell-code}\n# i = 4\n\nw <- c(1, 4, 16)\n\nmod4_tidy %>%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %>%\n  mutate(weight = c(1, 4, 16)) %>%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod4), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod4))\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     <dbl>     <dbl>     <dbl>   <dbl>\n1    0.715     0.758     0.943   0.355\n```\n:::\n\n```{.r .cell-code}\n# summation of betai's\n\nw <- c(5, 10, 30)\n\nmod4_tidy %>%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %>%\n  mutate(weight = w) %>%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod4), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod4))\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     <dbl>     <dbl>     <dbl>   <dbl>\n1     1.05     0.522      2.02  0.0549\n```\n:::\n\n```{.r .cell-code}\n## Trucks ----\n\nmod5 <- lm(\n  iprice ~ time + timesq + lag0 + lag1 + lag2 + tariff + usprice + income,\n  data = feenstra_93$trucks\n)\n\nmod5_tidy <- tidy(mod5)\n\n# i = 0\n\nmod5_tidy %>%\n  filter(term == \"lag0\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 5\n  term  estimate std.error statistic   p.value\n  <chr>    <dbl>     <dbl>     <dbl>     <dbl>\n1 lag0     0.282    0.0563      5.00 0.0000197\n```\n:::\n\n```{.r .cell-code}\n# i = 1\n\nw <- c(1, 1, 1)\n\nmod5_tidy %>%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %>%\n  mutate(w = w) %>%\n  summarise(\n    estimate = sum(estimate * w),\n    std.error = std_error(w, vcov(mod5), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod5))\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n  estimate std.error statistic   p.value\n     <dbl>     <dbl>     <dbl>     <dbl>\n1    0.139    0.0300      4.63 0.0000586\n```\n:::\n\n```{.r .cell-code}\n# i = 2\n\nw <- c(1, 2, 4)\n\nmod5_tidy %>%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %>%\n  mutate(weight = c(1, 2, 4)) %>%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod5), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod5))\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     <dbl>     <dbl>     <dbl>   <dbl>\n1   0.0608    0.0495      1.23   0.229\n```\n:::\n\n```{.r .cell-code}\n# i = 3\n\nw <- c(1, 3, 9)\n\nmod5_tidy %>%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %>%\n  mutate(weight = c(1, 3, 9)) %>%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod5), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod5))\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     <dbl>     <dbl>     <dbl>   <dbl>\n1   0.0472    0.0279      1.69   0.101\n```\n:::\n\n```{.r .cell-code}\n# i = 4\n\nw <- c(1, 4, 16)\n\nmod5_tidy %>%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %>%\n  mutate(weight = c(1, 4, 16)) %>%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod5), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod5))\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     <dbl>     <dbl>     <dbl>   <dbl>\n1   0.0981    0.0788      1.25   0.222\n```\n:::\n\n```{.r .cell-code}\n# summation of betai's\n\nw <- c(5, 10, 30)\n\nmod5_tidy %>%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %>%\n  mutate(weight = w) %>%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod5), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod5))\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n  estimate std.error statistic       p.value\n     <dbl>     <dbl>     <dbl>         <dbl>\n1    0.627    0.0806      7.78 0.00000000713\n```\n:::\n:::\n\n\n## Exercise 2\n\nThen replicate Feenstra’s Table 2 by imposing the tests of homogeneity and symmetry, shown in (7.35a) and (7.35b).  Instead of conducting the Wald test, as done in Feenstra (1989), instead conduct the analogous F-test. Do you accept or reject the hypotheses of symmetry and homogeneity?\n\n### Feenstra's code\n\nIncluded in exercise 1.\n\n### My code\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Cars ----\n\n# impose the homogeneity and symmetry constraints\n\nmod1h <- lm(\n  y ~ time + timesq + z0 + z1 + z2 + x1 + x2,\n  data = feenstra_93$cars\n)\n\nmod1h_tidy <- tidy(mod1h)\n\n# summation of betai's\n\nw <- c(5, 10, 30)\n\nmod1h_tidy %>%\n  filter(term %in% c(\"z0\", \"z1\", \"z2\")) %>%\n  mutate(weight = w) %>%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod1h), c(\"z0\", \"z1\", \"z2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod1h))\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n  estimate std.error statistic     p.value\n     <dbl>     <dbl>     <dbl>       <dbl>\n1    0.725    0.0956      7.58 0.000000194\n```\n:::\n\n```{.r .cell-code}\n## Cycon ----\n\n# impose the homogeneity and symmetry constraints\n\nmod2h <- lm(\n  y ~ dummy1 + dummy2 + dummy3 + time + timesq + z0 + z1 + z2 + x1 + x2,\n  data = feenstra_93$cycon\n)\n\nmod2h_tidy <- tidy(mod2h)\n\n# summation of betai's\n\nw <- c(5, 10, 30)\n\nmod2h_tidy %>%\n  filter(term %in% c(\"z0\", \"z1\", \"z2\")) %>%\n  mutate(weight = w) %>%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod2h), c(\"z0\", \"z1\", \"z2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod2h))\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n  estimate std.error statistic    p.value\n     <dbl>     <dbl>     <dbl>      <dbl>\n1    0.971     0.145      6.72 0.00000362\n```\n:::\n\n```{.r .cell-code}\n## Cypool ----\n\n# impose the homogeneity and symmetry constraints\n\nmod3h <- lm(\n  y ~ dummy1 + dummy2 + dummy3 + time + timesq + z0 + z1 + z2 + x1 + x2,\n  data = feenstra_93$cypool\n)\n\nmod3h_tidy <- tidy(mod3h)\n\n# summation of betai's\n\nw <- c(5, 10, 30)\n\nmod3h_tidy %>%\n  filter(term %in% c(\"z0\", \"z1\", \"z2\")) %>%\n  mutate(weight = w) %>%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod3h), c(\"z0\", \"z1\", \"z2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod3h))\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n  estimate std.error statistic       p.value\n     <dbl>     <dbl>     <dbl>         <dbl>\n1     1.08     0.153      7.03 0.00000000362\n```\n:::\n\n```{.r .cell-code}\n## Cyship ----\n\n# impose the homogeneity and symmetry constraints\n\nmod4h <- lm(\n  y ~ dummy1 + dummy2 + dummy3 + time + timesq + z0 + z1 + z2 + x1 + x2,\n  data = feenstra_93$cyship\n)\n\nmod4h_tidy <- tidy(mod4h)\n\n# summation of betai's\n\nw <- c(5, 10, 30)\n\nmod4h_tidy %>%\n  filter(term %in% c(\"z0\", \"z1\", \"z2\")) %>%\n  mutate(weight = w) %>%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod4h), c(\"z0\", \"z1\", \"z2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod4h))\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n  estimate std.error statistic   p.value\n     <dbl>     <dbl>     <dbl>     <dbl>\n1     1.27     0.270      4.70 0.0000734\n```\n:::\n\n```{.r .cell-code}\n## Trucks ----\n\n# impose the homogeneity and symmetry constraints\n\nmod5h <- lm(\n  y ~ time + timesq + z0 + z1 + z2 + x1,\n  data = feenstra_93$trucks\n)\n\nmod5h_tidy <- tidy(mod5h)\n\n# summation of betai's\n\nw <- c(5, 10, 30)\n\nmod5h_tidy %>%\n  filter(term %in% c(\"z0\", \"z1\", \"z2\")) %>%\n  mutate(weight = w) %>%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod5h), c(\"z0\", \"z1\", \"z2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod5h))\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n  estimate std.error statistic  p.value\n     <dbl>     <dbl>     <dbl>    <dbl>\n1    0.582    0.0619      9.42 5.33e-11\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}