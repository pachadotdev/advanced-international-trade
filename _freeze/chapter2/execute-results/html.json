{
  "hash": "f3e67456a82e1f5afd47c7dd8e61dde6",
  "result": {
    "markdown": "\n# Chapter 2. The Heckscher-Ohlin Model\"\n\n## Exercise 0\n\n### Feenstra's code\n\n```stata\n* This is to read the data into Stata *\n\nset mem 30m\ninsheet using c:\\Empirical_Exercise\\Chapter_2\\trefler.csv\nrename v1 country\nrename v2 factor\nrename v3 AT\nrename v4 V\nrename v5 Y\nrename v6 B\nrename v7 YPC\nrename v8 POP\n\n* create country index *\nquietly summarize YPC\nlocal maxYPC=_result(6)\ngen ratio=YPC/`maxYPC'\nreplace ratio=ratio+0.0001 if country==\"Italy\"\n\nsort ratio\negen indexc=group(ratio)\n\n* create factor index *\nsort factor\negen indexf=group(factor)\n\n* include delta *\n\ngen delta=1\nreplace delta=0.03 if country==\"Bangladesh\"\nreplace delta=0.09 if country==\"Pakistan\"\nreplace delta=0.10 if country==\"Indonesia\"\nreplace delta=0.09 if country==\"Sri Lanka\"\nreplace delta=0.17 if country==\"Thailand\"\nreplace delta=0.16 if country==\"Colombia\"\nreplace delta=0.28 if country==\"Panama\"\nreplace delta=0.29 if country==\"Yugoslavia\"\nreplace delta=0.14 if country==\"Portugal\"\nreplace delta=0.11 if country==\"Uruguay\"\nreplace delta=0.45 if country==\"Greece\"\nreplace delta=0.55 if country==\"Ireland\"\nreplace delta=0.42 if country==\"Spain\"\nreplace delta=0.49 if country==\"Israel\"\nreplace delta=0.40 if country==\"Hong Kong\"\nreplace delta=0.38 if country==\"New Zealand\"\nreplace delta=0.60 if country==\"Austria\"\nreplace delta=0.48 if country==\"Singapore\"\nreplace delta=0.60 if country==\"Italy\"\nreplace delta=0.58 if country==\"UK\"\nreplace delta=0.70 if country==\"Japan\"\nreplace delta=0.65 if country==\"Belgium\"\nreplace delta=0.47 if country==\"Trinidad\"\nreplace delta=0.72 if country==\"Netherlands\"\nreplace delta=0.65 if country==\"Finland\"\nreplace delta=0.73 if country==\"Denmark\"\nreplace delta=0.78 if country==\"West Germany\"\nreplace delta=0.74 if country==\"France\"\nreplace delta=0.57 if country==\"Sweden\"\nreplace delta=0.69 if country==\"Norway\"\nreplace delta=0.79 if country==\"Switzerland\"\nreplace delta=0.55 if country==\"Canada\"\nreplace delta=1 if country==\"USA\"\n\ncompress\n\nlabel var country \"Name of the country\"\nlabel var factor \"Name of the factor\"\nlabel var AT \"Factor content of trade F=A*T\"\nlabel var V \"Endowment\"\nlabel var Y \"GDP, World Bank, y=p*Q\"\nlabel var B \"Trade balance, World Bank b=p*T\"\nlabel var YPC \"GDP per capita, PWT\"\nlabel var indexc \"Country indentifier\"\nlabel var indexf \"Factor Indentifier\"\n\nsave c:\\Empirical_Exercise\\Chapter_2\\trefler,replace\n\nexit\n```\n\n### My code\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Packages ----\n\nlibrary(archive)\nlibrary(readr)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(knitr)\n\n# Extract ----\n\nfzip <- \"first-edition/Chapter-2.zip\"\ndout <- gsub(\"\\\\.zip$\", \"\", fzip)\n\nif (!dir.exists(dout)) {\n  archive_extract(\"first-edition/Chapter-2.zip\",\n    dir = \"first-edition/Chapter-2\"\n  )\n}\n\n# Read ----\n\nfout <- paste0(dout, \"/trefler.rds\")\n\nif (!file.exists(fout)) {\n  trefler <- read_csv(\"first-edition/Chapter-2/trefler.csv\", col_names = F) %>%\n    rename(\n      country = X1,\n      factor = X2,\n      at = X3,\n      v = X4,\n      y = X5,\n      b = X6,\n      ypc = X7,\n      pop = X8\n    )\n\n  # Transform ----\n\n  # see https://www.stata.com/manuals/rsummarize.pdf\n  # https://www.stata.com/manuals/degen.pdf\n  # https://www.stata.com/manuals/degen.pdf\n\n  trefler <- trefler %>%\n    mutate(ypc_max = max(ypc)) %>%\n    mutate(\n      ratio = case_when(\n        country != \"Italy\" ~ ypc / ypc_max,\n        country == \"Italy\" ~ (ypc / ypc_max) + 0.0001\n      )\n    ) %>%\n    select(-ypc_max) %>%\n    arrange(ratio) %>%\n    group_by(ratio) %>%\n    mutate(indexc = cur_group_id()) %>%\n    group_by(factor) %>%\n    mutate(indexf = cur_group_id()) %>%\n    ungroup() %>%\n    mutate(\n      delta = case_when(\n        country == \"Bangladesh\" ~ 0.03,\n        country == \"Pakistan\" ~ 0.09,\n        country == \"Indonesia\" ~ 0.10,\n        country == \"Sri Lanka\" ~ 0.09,\n        country == \"Thailand\" ~ 0.17,\n        country == \"Colombia\" ~ 0.16,\n        country == \"Panama\" ~ 0.28,\n        country == \"Yugoslavia\" ~ 0.29,\n        country == \"Portugal\" ~ 0.14,\n        country == \"Uruguay\" ~ 0.11,\n        country == \"Greece\" ~ 0.45,\n        country == \"Ireland\" ~ 0.55,\n        country == \"Spain\" ~ 0.42,\n        country == \"Israel\" ~ 0.49,\n        country == \"Hong Kong\" ~ 0.40,\n        country == \"New Zealand\" ~ 0.38,\n        country == \"Austria\" ~ 0.60,\n        country == \"Singapore\" ~ 0.48,\n        country == \"Italy\" ~ 0.60,\n        country == \"UK\" ~ 0.58,\n        country == \"Japan\" ~ 0.70,\n        country == \"Belgium\" ~ 0.65,\n        country == \"Trinidad\" ~ 0.47,\n        country == \"Netherlands\" ~ 0.72,\n        country == \"Finland\" ~ 0.65,\n        country == \"Denmark\" ~ 0.73,\n        country == \"West Germany\" ~ 0.78,\n        country == \"France\" ~ 0.74,\n        country == \"Sweden\" ~ 0.57,\n        country == \"Norway\" ~ 0.69,\n        country == \"Switzerland\" ~ 0.79,\n        country == \"Canada\" ~ 0.55,\n        country == \"USA\" ~ 1,\n        TRUE ~ 1\n      )\n    )\n\n  # Labels ----\n\n  # Add stata-like labels to the columns\n\n  # maybe this is not the best way to do it, but it works\n  attr(trefler$country, \"label\") <- \"Name of the country\"\n  attr(trefler$factor, \"label\") <- \"Name of the factor\"\n  attr(trefler$at, \"label\") <- \"Factor content of trade F=A*T\"\n  attr(trefler$v, \"label\") <- \"Endowment\"\n  attr(trefler$y, \"label\") <- \"GDP, World Bank, y=p*Q\"\n  attr(trefler$b, \"label\") <- \"Trade balance, World Bank b=p*T\"\n  attr(trefler$ypc, \"label\") <- \"GDP per capita, PWT\"\n  attr(trefler$indexc, \"label\") <- \"Country indentifier\"\n  attr(trefler$indexf, \"label\") <- \"Factor Indentifier\"\n\n  # Save ----\n\n  saveRDS(trefler, fout)\n} else {\n  trefler <- readRDS(fout)\n}\n```\n:::\n\n\n## Exercise 1\n\n### Feenstra's code\n\n```stata\n* This program is to conduct sign test, Rank test and Missing trade test *\n\ncapture log close\nlog using c:\\Empirical_Exercise\\Chapter_2\\sign_rank_1.log, replace\n\nset mem 30m\n\nuse C:\\Empirical_Exercise\\Chapter_2\\trefler, clear\n\n* number of country in the dataset *\negen C=max(indexc)\negen F=max(indexf)\n\n* Calculate the world level of Yw, Bw and Vw *\negen Yww=sum(Y)\ngen Yw=Yww/F\negen Bww=sum(B)\ngen Bw=Bww/F\negen Vfw=sum(V), by(indexf)\n\n* Calculate country share Sc *\ngen Sc=(Y-B)/(Yw-Bw)\n\n* Calculate epsilon(fc) and sigma^2(f) according to eq.2 in Trefler (1995)*\ngen Efc=AT-(V-Sc*Vfw)\n\n* Construct the average epsilon for a given factor *\negen total=sum(Efc),by(indexf)\ngen ave=total/C\n\n* Construct sigma^2 and the weight *\n\negen tot=sum((Efc-ave)^2), by(indexf)\ngen sigma2f=tot/(C-1)\n\ncodebook sigma2f\ngen sigmaf=sqrt(sigma2f)\ngen weight=sigmaf*sqrt(Sc)\n\n* Using the weight, convert all the data *\n\ngen trAT=AT/(sigmaf*sqrt(Sc))\ngen trV=V/(sigmaf*sqrt(Sc))\ngen trY=Y/sqrt(Sc)\ngen trB=B/sqrt(Sc)\ngen trVfw=Vfw/sigmaf\n\ngen AThat=trV-Sc*trVfw\ngen AThat2=(V-Sc*Vfw)/weight\n\n* Correlation, should be .28 *\n\ncorr trAT AThat2\n\n*************\n* Sign Test *\n*************\n\nsort indexc\nby indexc: count if trAT*AThat2>0\n\ncount if trAT*AThat2>0\ndisplay _result(1)/_N\n\n*****************\n* Missing Trade *\n*****************\n\n* Checking for the missing trade, should be .032 *\n\nquietly summarize trAT\nlocal varAT=_result(4)\nquietly summarize AThat\nlocal varHat=_result(4)\nquietly summarize AThat2\nlocal varHat2=_result(4)\ndisplay `varAT'/`varHat'\ndisplay `varAT'/`varHat2'\n\n**************\n* Rank Tests *\n**************\n\nkeep country indexc indexf trAT AThat2\n\nsort indexc indexf\nreshape wide trAT AThat2, i(indexc) j(indexf)\n\nlocal i=1\nwhile `i'<9{\n\tlocal j=`i'+1\n\twhile `j'<=9{\n\t\tgen rank`i'`j'=((trAT`i'-trAT`j')*(AThat2`i'-AThat2`j')>0)\n\t\tlocal j=`j'+1\n\t}\n\tlocal i=`i'+1\n}\n\nkeep country indexc rank*\nreshape long rank, i(indexc) j(factor)\negen r1=sum(rank), by(indexc)\ngen r2=r1/36\ncollapse r2,by(indexc country)\nsum r2\nlist\n\nlog close\nexit\n```\n\n### My code\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Transform ----\n\ntrefler <- trefler %>%\n  # Number of country in the dataset\n  mutate(\n    c = max(indexc),\n    f = max(indexf)\n  ) %>%\n  # Calculate the world level of Yw, Bw and Vw\n  mutate(\n    yww = sum(y),\n    yw = yww / f,\n    bww = sum(b),\n    bw = bww / f\n  ) %>%\n  group_by(indexf) %>%\n  mutate(\n    vfw = sum(v)\n  ) %>%\n  ungroup() %>%\n  # Calculate country share Sc\n  mutate(\n    sc = (y - b) / (yw - bw)\n  ) %>%\n  # Calculate epsilon(fc) and sigma^2(f) according to eq.2 in Trefler (1995)\n  mutate(\n    efc = at - (v - sc * vfw)\n  ) %>%\n  # Construct the average epsilon for a given factor\n  group_by(indexf) %>%\n  mutate(ave = sum(efc) / c) %>%\n  # Construct sigma^2 and the weight\n  mutate(\n    sigma2f = sum((efc - ave)^2) / (c - 1),\n    sigmaf = sqrt(sigma2f),\n    weight = sigmaf * sqrt(sc)\n  ) %>%\n  ungroup() %>%\n  # Using the weight, convert all the data\n  mutate(\n    trat = at / (sigmaf * sqrt(sc)),\n    trv = v / (sigmaf * sqrt(sc)),\n    try = y / sqrt(sc),\n    trb = b / sqrt(sc),\n    trvfw = vfw / sigmaf,\n    athat = trv - sc * trvfw,\n    athat2 = (v - (sc * vfw)) / weight\n  ) %>%\n  arrange(country)\n\n# Correlation, should be .28\ncor(trefler$trat, trefler$athat2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.2822883\n```\n:::\n\n```{.r .cell-code}\n# Sign Test ----\n\ntrefler %>%\n  group_by(country, indexc) %>%\n  summarize(\n    p = sum(trat * athat2 > 0) / n()\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 33 Ã— 3\n# Groups:   country [33]\n   country    indexc     p\n   <chr>       <int> <dbl>\n 1 Austria        17 0.556\n 2 Bangladesh      1 0.333\n 3 Belgium        22 0.667\n 4 Canada         32 0.556\n 5 Colombia        6 0.333\n 6 Denmark        26 0.444\n 7 Finland        25 0.333\n 8 France         28 0.333\n 9 Greece         11 0.111\n10 Hong Kong      15 0.667\n# â„¹ 23 more rows\n```\n:::\n\n```{.r .cell-code}\ntrefler %>%\n  summarize(\n    p = sum(trat * athat2 > 0) / n()\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 Ã— 1\n      p\n  <dbl>\n1 0.498\n```\n:::\n\n```{.r .cell-code}\n# Missing Trade ----\n\n# Checking for the missing trade, should be .032\n\ntrefler %>%\n  summarize(\n    varat = var(trat),\n    varhat = var(athat),\n    varhat2 = var(athat2)\n  ) %>%\n  mutate(\n    varat_varhat = varat / varhat,\n    varat_varhat2 = varat / varhat2\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 Ã— 5\n  varat varhat varhat2 varat_varhat varat_varhat2\n  <dbl>  <dbl>   <dbl>        <dbl>         <dbl>\n1  1.61   47.7    50.3       0.0338        0.0320\n```\n:::\n\n```{.r .cell-code}\n# Rank Tests ----\n\ntrefler_wide <- trefler %>%\n  select(country, indexc, indexf, trat, athat2) %>%\n  arrange(indexc, indexf) %>%\n  pivot_wider(\n    names_from = indexf,\n    values_from = c(trat, athat2)\n  )\n\n# this would be too long\n# trefler_wide <- trefler_wide %>%\n#   mutate(\n#     rank12 = (trat_1 - trat_2) * (athat2_1 - athat2_2) > 0,\n#     rank13 = (trat_1 - trat_3) * (athat2_1 - athat2_3) > 0,\n#     ...\n#     rank89 = (trat_8 - trat_9) * (athat2_8 - athat2_9) > 0,\n#   )\n\n# create all relevant trat_1 - trat_2, trat_1 - trat_3, etc.\n\nranks <- expand_grid(\n  one = 1:8,\n  two = 1:9\n) %>%\n  filter(one < two)\n\ntrefler_rank <- map2(\n  ranks$one,\n  ranks$two,\n  function(x, y) {\n    trefler_wide %>%\n      mutate(\n        !!paste0(\"rank\", x, y) :=\n          (!!sym(paste0(\"trat_\", x)) - !!sym(paste0(\"trat_\", y))) *\n            (!!sym(paste0(\"athat2_\", x)) - !!sym(paste0(\"athat2_\", y))) > 0\n      ) %>%\n      select(country, indexc, starts_with(\"rank\"))\n  }\n) %>%\n  reduce(left_join, by = c(\"country\", \"indexc\")) %>%\n  pivot_longer(\n    cols = starts_with(\"rank\"),\n    names_to = \"rank\",\n    values_to = \"value\"\n  ) %>%\n  group_by(country, indexc) %>%\n  summarise(r1 = sum(value)) %>%\n  mutate(r2 = r1 / 36)\n\ntrefler_rank\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 33 Ã— 4\n# Groups:   country [33]\n   country    indexc    r1     r2\n   <chr>       <int> <int>  <dbl>\n 1 Austria        17    19 0.528 \n 2 Bangladesh      1    27 0.75  \n 3 Belgium        22    22 0.611 \n 4 Canada         32    32 0.889 \n 5 Colombia        6    29 0.806 \n 6 Denmark        26    19 0.528 \n 7 Finland        25    17 0.472 \n 8 France         28     3 0.0833\n 9 Greece         11    17 0.472 \n10 Hong Kong      15    30 0.833 \n# â„¹ 23 more rows\n```\n:::\n\n```{.r .cell-code}\nmean(trefler_rank$r2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.6026936\n```\n:::\n:::\n\n\nNow format this as a table:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrefler %>%\n  group_by(country, indexc) %>%\n  summarize(\n    p = sum(trat * athat2 > 0) / n()\n  ) %>%\n  arrange(indexc) %>% #same order as in the book\n  select(country, sign_hov = p) %>%\n  left_join(\n    trefler_rank %>%\n      select(country, rank_hov = r2)\n  ) %>%\n  bind_rows(\n    trefler %>%\n      summarize(\n        p = sum(trat * athat2 > 0) / n()\n      ) %>%\n      mutate(\n        country = \"All countries\",\n        rank_hov = mean(trefler_rank$r2)\n      ) %>%\n      select(country, sign_hov = p, rank_hov)\n  ) %>%\n  mutate_if(is.numeric, round, 2) %>% # same no of decimals as in the book\n  kable()\n```\n\n::: {.cell-output-display}\n|country       | sign_hov| rank_hov|\n|:-------------|--------:|--------:|\n|Bangladesh    |     0.33|     0.75|\n|Pakistan      |     0.33|     0.72|\n|Indonesia     |     0.22|     0.67|\n|Sri Lanka     |     0.22|     0.42|\n|Thailand      |     0.22|     0.69|\n|Colombia      |     0.33|     0.81|\n|Panama        |     0.33|     0.56|\n|Yugoslavia    |     0.56|     0.44|\n|Portugal      |     0.22|     0.53|\n|Uruguay       |     1.00|     0.72|\n|Greece        |     0.11|     0.47|\n|Ireland       |     0.67|     0.53|\n|Spain         |     0.22|     0.39|\n|Israel        |     0.67|     0.39|\n|Hong Kong     |     0.67|     0.83|\n|New Zealand   |     0.44|     0.53|\n|Austria       |     0.56|     0.53|\n|Singapore     |     0.56|     0.61|\n|Italy         |     0.67|     0.78|\n|UK            |     0.67|     0.58|\n|Japan         |     0.78|     0.78|\n|Belgium       |     0.67|     0.61|\n|Trinidad      |     0.67|     0.50|\n|Netherlands   |     0.44|     0.53|\n|Finland       |     0.33|     0.47|\n|Denmark       |     0.44|     0.53|\n|West Germany  |     0.56|     0.81|\n|France        |     0.33|     0.08|\n|Sweden        |     0.44|     0.67|\n|Norway        |     0.44|     0.61|\n|Switzerland   |     0.89|     0.56|\n|Canada        |     0.56|     0.89|\n|USA           |     0.89|     0.92|\n|All countries |     0.50|     0.60|\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}