{
  "hash": "2e6019f98dae0a5940ac9c68f0fade42",
  "result": {
    "markdown": "\n# Chapter 3. The Heckscher-Ohlin Model\"\n\nIn these exercises, you will reproduce some of the empirical results from Trefler (1993, 1995).  To complete the exercise, the Excel file `hov_pub.csv` should be stored in the directory:\n`c:\\Empirical_Exercise\\Chapter_2\\hov_pub.csv`.  After this, run the STATA program `hov_pub.do`, which will create a new STATA data file `trefler.dta`.\n\n## Read and transform the data\n\n### Feenstra's code\n\n```stata\n* This is to read the data into Stata *\n\nset mem 30m\n* insheet using c:\\Empirical_Exercise\\Chapter_2\\trefler.csv *\ninsheet using \"Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\hov_pub.csv\"\nrename v1 country\nrename v2 factor\nrename v3 AT\nrename v4 V\nrename v5 Y\nrename v6 B\nrename v7 YPC\nrename v8 POP\n\n* create country index *\nquietly summarize YPC\nlocal maxYPC=_result(6)\ngen ratio=YPC/`maxYPC'\nreplace ratio=ratio+0.0001 if country==\"Italy\"\n\nsort ratio\negen indexc=group(ratio)\n\n* create factor index *\nsort factor\negen indexf=group(factor)\n\n* include delta *\n\ngen delta=1\nreplace delta=0.03 if country==\"Bangladesh\"\nreplace delta=0.09 if country==\"Pakistan\"\nreplace delta=0.10 if country==\"Indonesia\"\nreplace delta=0.09 if country==\"Sri Lanka\"\nreplace delta=0.17 if country==\"Thailand\"\nreplace delta=0.16 if country==\"Colombia\"\nreplace delta=0.28 if country==\"Panama\"\nreplace delta=0.29 if country==\"Yugoslavia\"\nreplace delta=0.14 if country==\"Portugal\"\nreplace delta=0.11 if country==\"Uruguay\"\nreplace delta=0.45 if country==\"Greece\"\nreplace delta=0.55 if country==\"Ireland\"\nreplace delta=0.42 if country==\"Spain\"\nreplace delta=0.49 if country==\"Israel\"\nreplace delta=0.40 if country==\"Hong Kong\"\nreplace delta=0.38 if country==\"New Zealand\"\nreplace delta=0.60 if country==\"Austria\"\nreplace delta=0.48 if country==\"Singapore\"\nreplace delta=0.60 if country==\"Italy\"\nreplace delta=0.58 if country==\"UK\"\nreplace delta=0.70 if country==\"Japan\"\nreplace delta=0.65 if country==\"Belgium\"\nreplace delta=0.47 if country==\"Trinidad\"\nreplace delta=0.72 if country==\"Netherlands\"\nreplace delta=0.65 if country==\"Finland\"\nreplace delta=0.73 if country==\"Denmark\"\nreplace delta=0.78 if country==\"West Germany\"\nreplace delta=0.74 if country==\"France\"\nreplace delta=0.57 if country==\"Sweden\"\nreplace delta=0.69 if country==\"Norway\"\nreplace delta=0.79 if country==\"Switzerland\"\nreplace delta=0.55 if country==\"Canada\"\nreplace delta=1 if country==\"USA\"\n\ncompress\n\nlabel var country \"Name of the country\"\nlabel var factor \"Name of the factor\"\nlabel var AT \"Factor content of trade F=A*T\"\nlabel var V \"Endowment\"\nlabel var Y \"GDP, World Bank, y=p*Q\"\nlabel var B \"Trade balance, World Bank b=p*T\"\nlabel var YPC \"GDP per capita, PWT\"\nlabel var indexc \"Country indentifier\"\nlabel var indexf \"Factor Indentifier\"\n\n* save c:\\Empirical_Exercise\\Chapter_2\\trefler,replace *\nsave \"Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\trefler\", replace\n\nexit\n```\n\n### My code\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Packages ----\n\nlibrary(archive)\nlibrary(readr)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(knitr)\n\n# Extract ----\n\nfzip <- \"first-edition/Chapter-2.zip\"\ndout <- gsub(\"\\\\.zip$\", \"\", fzip)\n\nif (!dir.exists(dout)) {\n  archive_extract(\"first-edition/Chapter-2.zip\",\n    dir = \"first-edition/Chapter-2\"\n  )\n}\n\n# Read ----\n\nfout <- paste0(dout, \"/trefler.rds\")\n\nif (!file.exists(fout)) {\n  trefler <- read_csv(\"first-edition/Chapter-2/hov_pub.csv\", col_names = F) %>%\n    rename(\n      country = X1,\n      factor = X2,\n      at = X3,\n      v = X4,\n      y = X5,\n      b = X6,\n      ypc = X7,\n      pop = X8\n    )\n\n  # Transform ----\n\n  # see https://www.stata.com/manuals/rsummarize.pdf\n  # https://www.stata.com/manuals/degen.pdf\n  # https://www.stata.com/manuals/degen.pdf\n\n  trefler <- trefler %>%\n    mutate(ypc_max = max(ypc)) %>%\n    mutate(\n      ratio = case_when(\n        country != \"Italy\" ~ ypc / ypc_max,\n        country == \"Italy\" ~ (ypc / ypc_max) + 0.0001\n      )\n    ) %>%\n    select(-ypc_max) %>%\n    arrange(ratio) %>%\n    group_by(ratio) %>%\n    mutate(indexc = cur_group_id()) %>%\n    group_by(factor) %>%\n    mutate(indexf = cur_group_id()) %>%\n    ungroup() %>%\n    mutate(\n      delta = case_when(\n        country == \"Bangladesh\" ~ 0.03,\n        country == \"Pakistan\" ~ 0.09,\n        country == \"Indonesia\" ~ 0.10,\n        country == \"Sri Lanka\" ~ 0.09,\n        country == \"Thailand\" ~ 0.17,\n        country == \"Colombia\" ~ 0.16,\n        country == \"Panama\" ~ 0.28,\n        country == \"Yugoslavia\" ~ 0.29,\n        country == \"Portugal\" ~ 0.14,\n        country == \"Uruguay\" ~ 0.11,\n        country == \"Greece\" ~ 0.45,\n        country == \"Ireland\" ~ 0.55,\n        country == \"Spain\" ~ 0.42,\n        country == \"Israel\" ~ 0.49,\n        country == \"Hong Kong\" ~ 0.40,\n        country == \"New Zealand\" ~ 0.38,\n        country == \"Austria\" ~ 0.60,\n        country == \"Singapore\" ~ 0.48,\n        country == \"Italy\" ~ 0.60,\n        country == \"UK\" ~ 0.58,\n        country == \"Japan\" ~ 0.70,\n        country == \"Belgium\" ~ 0.65,\n        country == \"Trinidad\" ~ 0.47,\n        country == \"Netherlands\" ~ 0.72,\n        country == \"Finland\" ~ 0.65,\n        country == \"Denmark\" ~ 0.73,\n        country == \"West Germany\" ~ 0.78,\n        country == \"France\" ~ 0.74,\n        country == \"Sweden\" ~ 0.57,\n        country == \"Norway\" ~ 0.69,\n        country == \"Switzerland\" ~ 0.79,\n        country == \"Canada\" ~ 0.55,\n        country == \"USA\" ~ 1,\n        TRUE ~ 1\n      )\n    )\n\n  # Labels ----\n\n  # Add stata-like labels to the columns\n\n  # Maybe this is not the best way to do it, but it works\n  attr(trefler$country, \"label\") <- \"Name of the country\"\n  attr(trefler$factor, \"label\") <- \"Name of the factor\"\n  attr(trefler$at, \"label\") <- \"Factor content of trade F=A*T\"\n  attr(trefler$v, \"label\") <- \"Endowment\"\n  attr(trefler$y, \"label\") <- \"GDP, World Bank, y=p*Q\"\n  attr(trefler$b, \"label\") <- \"Trade balance, World Bank b=p*T\"\n  attr(trefler$ypc, \"label\") <- \"GDP per capita, PWT\"\n  attr(trefler$indexc, \"label\") <- \"Country indentifier\"\n  attr(trefler$indexf, \"label\") <- \"Factor Indentifier\"\n\n  # Save ----\n\n  saveRDS(trefler, fout)\n} else {\n  trefler <- readRDS(fout)\n}\n```\n:::\n\n\n## Exercise 1  \n\nGiven identical technologies across countries, run the program `sign_rank_1.do` to conduct the sign test, rank test, and test for missing trade. Use the results in `sign_rank_1.log` to replicate columns (2) and (4) in Table 2.5.\n\n### Feenstra's code\n\n```stata\n* This program is to conduct sign test, Rank test and Missing trade test *\n\ncapture log close\n* log using c:\\Empirical_Exercise\\Chapter_2\\sign_rank_1.log, replace *\nlog using \"Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\sign_rank_1.log\", replace\n\nset mem 30m\n\n* use C:\\Empirical_Exercise\\Chapter_2\\trefler, clear *\nuse \"Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\trefler\", clear\n\n* number of country in the dataset *\negen C=max(indexc)\negen F=max(indexf)\n\n* Calculate the world level of Yw, Bw and Vw *\negen Yww=sum(Y)\ngen Yw=Yww/F\negen Bww=sum(B)\ngen Bw=Bww/F\negen Vfw=sum(V), by(indexf)\n\n* Calculate country share Sc *\ngen Sc=(Y-B)/(Yw-Bw)\n\n* Calculate epsilon(fc) and sigma^2(f) according to eq.2 in Trefler (1995)*\ngen Efc=AT-(V-Sc*Vfw)\n\n* Construct the average epsilon for a given factor *\negen total=sum(Efc),by(indexf)\ngen ave=total/C\n\n* Construct sigma^2 and the weight *\n\negen tot=sum((Efc-ave)^2), by(indexf)\ngen sigma2f=tot/(C-1)\n\ncodebook sigma2f\ngen sigmaf=sqrt(sigma2f)\ngen weight=sigmaf*sqrt(Sc)\n\n* Using the weight, convert all the data *\n\ngen trAT=AT/(sigmaf*sqrt(Sc))\ngen trV=V/(sigmaf*sqrt(Sc))\ngen trY=Y/sqrt(Sc)\ngen trB=B/sqrt(Sc)\ngen trVfw=Vfw/sigmaf\n\ngen AThat=trV-Sc*trVfw\ngen AThat2=(V-Sc*Vfw)/weight\n\n* Correlation, should be .28 *\n\ncorr trAT AThat2\n\n*************\n* Sign Test *\n*************\n\nsort indexc\nby indexc: count if trAT*AThat2>0\n\ncount if trAT*AThat2>0\ndisplay _result(1)/_N\n\n*****************\n* Missing Trade *\n*****************\n\n* Checking for the missing trade, should be .032 *\n\nquietly summarize trAT\nlocal varAT=_result(4)\nquietly summarize AThat\nlocal varHat=_result(4)\nquietly summarize AThat2\nlocal varHat2=_result(4)\ndisplay `varAT'/`varHat'\ndisplay `varAT'/`varHat2'\n\n**************\n* Rank Tests *\n**************\n\nkeep country indexc indexf trAT AThat2\n\nsort indexc indexf\nreshape wide trAT AThat2, i(indexc) j(indexf)\n\nlocal i=1\nwhile `i'<9{\n\tlocal j=`i'+1\n\twhile `j'<=9{\n\t\tgen rank`i'`j'=((trAT`i'-trAT`j')*(AThat2`i'-AThat2`j')>0)\n\t\tlocal j=`j'+1\n\t}\n\tlocal i=`i'+1\n}\n\nkeep country indexc rank*\nreshape long rank, i(indexc) j(factor)\negen r1=sum(rank), by(indexc)\ngen r2=r1/36\ncollapse r2,by(indexc country)\nsum r2\nlist\n\nlog close\nexit\n```\n\n### My code\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Transform ----\n\ntrefler <- readRDS(fout) %>%\n  # Number of country in the dataset\n  mutate(\n    c = max(indexc),\n    f = max(indexf)\n  ) %>%\n  # Calculate the world level of Yw, Bw and Vw\n  mutate(\n    yww = sum(y),\n    yw = yww / f,\n    bww = sum(b),\n    bw = bww / f\n  ) %>%\n  group_by(indexf) %>%\n  mutate(\n    vfw = sum(v)\n  ) %>%\n  ungroup() %>%\n  # Calculate country share Sc\n  mutate(\n    sc = (y - b) / (yw - bw)\n  ) %>%\n  # Calculate epsilon(fc) and sigma^2(f) according to eq.2 in Trefler (1995)\n  mutate(\n    efc = at - (v - sc * vfw)\n  ) %>%\n  # Construct the average epsilon for a given factor\n  group_by(indexf) %>%\n  mutate(ave = sum(efc) / c) %>%\n  # Construct sigma^2 and the weight\n  mutate(\n    sigma2f = sum((efc - ave)^2) / (c - 1),\n    sigmaf = sqrt(sigma2f),\n    weight = sigmaf * sqrt(sc)\n  ) %>%\n  ungroup() %>%\n  # Using the weight, convert all the data\n  mutate(\n    trat = at / (sigmaf * sqrt(sc)),\n    athat2 = (v - (sc * vfw)) / weight\n  ) %>%\n  arrange(country)\n\n# Correlation, should be .28\ntrefler %>%\n  select(trat, athat2) %>%\n  cor()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            trat    athat2\ntrat   1.0000000 0.2822883\nathat2 0.2822883 1.0000000\n```\n:::\n\n```{.r .cell-code}\n# Sign Test ----\n\ntrefler %>%\n  group_by(country, indexc) %>%\n  summarize(\n    p = sum(trat * athat2 > 0) / n()\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 33 × 3\n# Groups:   country [33]\n   country    indexc     p\n   <chr>       <int> <dbl>\n 1 Austria        17 0.556\n 2 Bangladesh      1 0.333\n 3 Belgium        22 0.667\n 4 Canada         32 0.556\n 5 Colombia        6 0.333\n 6 Denmark        26 0.444\n 7 Finland        25 0.333\n 8 France         28 0.333\n 9 Greece         11 0.111\n10 Hong Kong      15 0.667\n# ℹ 23 more rows\n```\n:::\n\n```{.r .cell-code}\ntrefler %>%\n  summarize(\n    p = sum(trat * athat2 > 0) / n()\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n      p\n  <dbl>\n1 0.498\n```\n:::\n\n```{.r .cell-code}\n# Missing Trade ----\n\n# Checking for the missing trade, should be .032\n\ntrefler %>%\n  summarize(\n    varat = var(trat),\n    varhat2 = var(athat2)\n  ) %>%\n  mutate(\n    varat_varhat2 = varat / varhat2\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 3\n  varat varhat2 varat_varhat2\n  <dbl>   <dbl>         <dbl>\n1  1.61    50.3        0.0320\n```\n:::\n\n```{.r .cell-code}\n# Rank Tests ----\n\ntrefler_wide <- trefler %>%\n  select(country, indexc, indexf, trat, athat2) %>%\n  arrange(indexc, indexf) %>%\n  pivot_wider(\n    names_from = indexf,\n    values_from = c(trat, athat2)\n  )\n\n# This would be too long\n# trefler_wide <- trefler_wide %>%\n#   mutate(\n#     rank12 = (trat_1 - trat_2) * (athat2_1 - athat2_2) > 0,\n#     rank13 = (trat_1 - trat_3) * (athat2_1 - athat2_3) > 0,\n#     ...\n#     rank89 = (trat_8 - trat_9) * (athat2_8 - athat2_9) > 0,\n#   )\n\n# create all relevant trat_1 - trat_2, trat_1 - trat_3, etc.\n\nranks <- expand_grid(\n  x = 1:8,\n  y = 1:9\n) %>%\n  filter(x < y)\n\n# The syntax here is based on internal R developer functions, but these\n# allow to create columns with minimal lines of code and avoids more complicated\n# bracket syntax\ntrefler_rank <- map2_df(\n  pull(ranks, x),\n  pull(ranks, y),\n  function(x, y) {\n    trefler_wide %>%\n      mutate(\n        name = paste0(\"rank\", x, y),\n        value = (!!sym(paste0(\"trat_\", x)) - !!sym(paste0(\"trat_\", y))) *\n          (!!sym(paste0(\"athat2_\", x)) - !!sym(paste0(\"athat2_\", y))) > 0\n      ) %>%\n      select(country, indexc, name, value)\n  }\n) %>%\n  group_by(country, indexc) %>%\n  summarise(r1 = sum(value)) %>%\n  mutate(r2 = r1 / 36)\n\ntrefler_rank\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 33 × 4\n# Groups:   country [33]\n   country    indexc    r1     r2\n   <chr>       <int> <int>  <dbl>\n 1 Austria        17    19 0.528 \n 2 Bangladesh      1    27 0.75  \n 3 Belgium        22    22 0.611 \n 4 Canada         32    32 0.889 \n 5 Colombia        6    29 0.806 \n 6 Denmark        26    19 0.528 \n 7 Finland        25    17 0.472 \n 8 France         28     3 0.0833\n 9 Greece         11    17 0.472 \n10 Hong Kong      15    30 0.833 \n# ℹ 23 more rows\n```\n:::\n\n```{.r .cell-code}\ntrefler_rank %>%\n  pull(r2) %>%\n  mean()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.6026936\n```\n:::\n:::\n\n\n### Extra step: formatting the table\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrefler %>%\n  group_by(country, indexc) %>%\n  summarize(\n    p = sum(trat * athat2 > 0) / n()\n  ) %>%\n  arrange(indexc) %>% # same order as in the book\n  select(country, sign_hov = p) %>%\n  left_join(\n    trefler_rank %>%\n      select(country, rank_hov = r2)\n  ) %>%\n  bind_rows(\n    trefler %>%\n      summarize(\n        p = sum(trat * athat2 > 0) / n()\n      ) %>%\n      mutate(\n        country = \"All countries\",\n        rank_hov = mean(pull(trefler_rank, r2))\n      ) %>%\n      select(country, sign_hov = p, rank_hov)\n  ) %>%\n  mutate_if(is.numeric, round, 2) %>% # same no of decimals as in the book\n  kable()\n```\n\n::: {.cell-output-display}\n|country       | sign_hov| rank_hov|\n|:-------------|--------:|--------:|\n|Bangladesh    |     0.33|     0.75|\n|Pakistan      |     0.33|     0.72|\n|Indonesia     |     0.22|     0.67|\n|Sri Lanka     |     0.22|     0.42|\n|Thailand      |     0.22|     0.69|\n|Colombia      |     0.33|     0.81|\n|Panama        |     0.33|     0.56|\n|Yugoslavia    |     0.56|     0.44|\n|Portugal      |     0.22|     0.53|\n|Uruguay       |     1.00|     0.72|\n|Greece        |     0.11|     0.47|\n|Ireland       |     0.67|     0.53|\n|Spain         |     0.22|     0.39|\n|Israel        |     0.67|     0.39|\n|Hong Kong     |     0.67|     0.83|\n|New Zealand   |     0.44|     0.53|\n|Austria       |     0.56|     0.53|\n|Singapore     |     0.56|     0.61|\n|Italy         |     0.67|     0.78|\n|UK            |     0.67|     0.58|\n|Japan         |     0.78|     0.78|\n|Belgium       |     0.67|     0.61|\n|Trinidad      |     0.67|     0.50|\n|Netherlands   |     0.44|     0.53|\n|Finland       |     0.33|     0.47|\n|Denmark       |     0.44|     0.53|\n|West Germany  |     0.56|     0.81|\n|France        |     0.33|     0.08|\n|Sweden        |     0.44|     0.67|\n|Norway        |     0.44|     0.61|\n|Switzerland   |     0.89|     0.56|\n|Canada        |     0.56|     0.89|\n|USA           |     0.89|     0.92|\n|All countries |     0.50|     0.60|\n:::\n:::\n\n\n## Exercise 2\n\nGiven uniform technological differences across countries, run the program `sign_rank_2.do` to redo the sign test, rank test, and missing trade.  Use the results in `sign_rank_2.log` to replicate column (3) and (5), given column (6) in Table 2.5.\n\n### Feenstra's code\n\n```stata\n* This program is to conduct sign test, Rank test and Missing trade test *\n* using delta *\n\ncapture log close\n* log using c:\\Empirical_Exercise\\Chapter_2\\sign_rank_2.log, replace *\nlog using \"Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\sign_rank_2.log\", replace\n\nset mem 30m\n\n* use c:\\Empirical_Exercise\\Chapter_2\\trefler, clear *\nuse \"Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\trefler\", clear\n\n* number of country in the dataset *\negen C=max(indexc)\negen F=max(indexf)\n\n* Calculate the world level of Yw, Bw and Vw *\negen Yww=sum(Y)\ngen Yw=Yww/F\negen Bww=sum(B)\ngen Bw=Bww/F\negen Vfw=sum(V), by(indexf)\negen Vw=sum(delta*V), by(indexf)\n\n* Calculate country share Sc *\ngen Sc=(Y-B)/(Yw-Bw)\n\n* Calculate epsilon(fc) and sigma^2(f) according to eq.2 in Trefler (1995)\n\ngen Efc=delta*AT-(delta*V-Sc*Vw)\n\n* Construct the average epsilon for a given factor *\negen total=sum(Efc),by(indexf)\ngen ave=total/C\n\n* Construct sigma^2 and the weight *\n\negen tot=sum((Efc-ave)^2), by(indexf)\ngen sigma2f=tot/(C-1)\n\ncodebook sigma2f\ngen sigmaf=sqrt(sigma2f)\ngen weight=sigmaf*sqrt(Sc)\n\n* Using the weight, convert all the data *\n\ngen trAT=delta*AT/weight\ngen AThat2=(delta*V-Sc*Vw)/weight\n\n* Correlation *\n\ncorr trAT AThat2\n\n*************\n* Sign Test *\n*************\n\nsort indexc\nby indexc: count if trAT*AThat2>0\n\ncount if trAT*AThat2>0\ndisplay _result(1)/_N\n\n*****************\n* Missing Trade *\n*****************\n\nquietly summarize trAT\nlocal varAT=_result(4)\nquietly summarize AThat\nlocal varHat=_result(4)\nquietly summarize AThat2\nlocal varHat2=_result(4)\ndisplay `varAT'/`varHat'\ndisplay `varAT'/`varHat2'\n\n*************\n* Rank Test *\n*************\n\nkeep country indexc indexf trAT AThat2\n\nsort indexc indexf\nreshape wide trAT AThat2, i(indexc) j(indexf)\n\nlocal i=1\nwhile `i'<9{\n\tlocal j=`i'+1\n\twhile `j'<=9{\n\t\tgen rank`i'`j'=((trAT`i'-trAT`j')*(AThat2`i'-AThat2`j')>0)\n\t\tlocal j=`j'+1\n\t}\n\tlocal i=`i'+1\n}\n\nkeep country indexc rank*\nreshape long rank, i(indexc) j(factor)\negen r1=sum(rank), by(indexc)\ngen r2=r1/36\ncollapse r2,by(indexc country)\nsum r2\nlist\n\nlog close\nexit\n```\n\n### My code\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Transform ----\n\ntrefler <- readRDS(fout) %>%\n  # Number of country in the dataset\n  mutate(\n    c = max(indexc),\n    f = max(indexf)\n  ) %>%\n  # Calculate the world level of Yw, Bw and Vw\n  mutate(\n    yww = sum(y),\n    yw = yww / f,\n    bww = sum(b),\n    bw = bww / f\n  ) %>%\n  group_by(indexf) %>%\n  mutate(\n    vfw = sum(v),\n    vw = sum(delta * v)\n  ) %>%\n  ungroup() %>%\n  # Calculate country share Sc\n  mutate(\n    sc = (y - b) / (yw - bw)\n  ) %>%\n  # Calculate epsilon(fc) and sigma^2(f) according to eq.2 in Trefler (1995)\n  mutate(\n    efc = delta * at - (delta * v - sc * vw)\n  ) %>%\n  # Construct the average epsilon for a given factor\n  group_by(indexf) %>%\n  mutate(ave = sum(efc) / c) %>%\n  # Construct sigma^2 and the weight\n  mutate(\n    sigma2f = sum((efc - ave)^2) / (c - 1),\n    sigmaf = sqrt(sigma2f),\n    weight = sigmaf * sqrt(sc)\n  ) %>%\n  ungroup() %>%\n  # Using the weight, convert all the data\n  mutate(\n    trat = delta * at / weight,\n    athat2 = (delta * v - (sc * vw)) / weight\n  )\n\n# Correlation should be .41\ntrefler %>%\n  select(trat, athat2) %>%\n  cor()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            trat    athat2\ntrat   1.0000000 0.4099617\nathat2 0.4099617 1.0000000\n```\n:::\n\n```{.r .cell-code}\n# Sign Test ----\n\ntrefler %>%\n  group_by(country, indexc) %>%\n  summarize(\n    p = sum(trat * athat2 > 0) / n()\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 33 × 3\n# Groups:   country [33]\n   country    indexc     p\n   <chr>       <int> <dbl>\n 1 Austria        17 0.667\n 2 Bangladesh      1 0.778\n 3 Belgium        22 0.778\n 4 Canada         32 0.222\n 5 Colombia        6 0.889\n 6 Denmark        26 0.444\n 7 Finland        25 0.444\n 8 France         28 0.333\n 9 Greece         11 0.556\n10 Hong Kong      15 0.889\n# ℹ 23 more rows\n```\n:::\n\n```{.r .cell-code}\ntrefler %>%\n  summarize(\n    p = sum(trat * athat2 > 0) / n()\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n      p\n  <dbl>\n1 0.620\n```\n:::\n\n```{.r .cell-code}\n# Missing Trade ----\n\n# Checking for the missing trade, should be .07\n\ntrefler %>%\n  summarize(\n    varat = var(trat),\n    varhat2 = var(athat2)\n  ) %>%\n  mutate(\n    varat_varhat2 = varat / varhat2\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 3\n  varat varhat2 varat_varhat2\n  <dbl>   <dbl>         <dbl>\n1  1.34    19.0        0.0706\n```\n:::\n\n```{.r .cell-code}\n# Rank Tests ----\n\ntrefler_wide <- trefler %>%\n  select(country, indexc, indexf, trat, athat2) %>%\n  arrange(indexc, indexf) %>%\n  pivot_wider(\n    names_from = indexf,\n    values_from = c(trat, athat2)\n  )\n\nranks <- expand_grid(\n  x = 1:8,\n  y = 1:9\n) %>%\n  filter(x < y)\n\ntrefler_rank <- map2_df(\n  pull(ranks, x),\n  pull(ranks, y),\n  function(x, y) {\n    trefler_wide %>%\n      mutate(\n        name = paste0(\"rank\", x, y),\n        value = (!!sym(paste0(\"trat_\", x)) - !!sym(paste0(\"trat_\", y))) *\n          (!!sym(paste0(\"athat2_\", x)) - !!sym(paste0(\"athat2_\", y))) > 0\n      ) %>%\n      select(country, indexc, name, value)\n  }\n) %>%\n  group_by(country, indexc) %>%\n  summarise(r1 = sum(value)) %>%\n  mutate(r2 = r1 / 36)\n\ntrefler_rank\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 33 × 4\n# Groups:   country [33]\n   country    indexc    r1    r2\n   <chr>       <int> <int> <dbl>\n 1 Austria        17    16 0.444\n 2 Bangladesh      1    28 0.778\n 3 Belgium        22    19 0.528\n 4 Canada         32    20 0.556\n 5 Colombia        6    31 0.861\n 6 Denmark        26    15 0.417\n 7 Finland        25    18 0.5  \n 8 France         28     7 0.194\n 9 Greece         11    27 0.75 \n10 Hong Kong      15    26 0.722\n# ℹ 23 more rows\n```\n:::\n\n```{.r .cell-code}\ntrefler_rank %>%\n  pull(r2) %>%\n  mean()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.6153199\n```\n:::\n:::\n\n\n### Extra step: formatting the table\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrefler %>%\n  group_by(country, indexc) %>%\n  summarize(\n    p = sum(trat * athat2 > 0) / n()\n  ) %>%\n  arrange(indexc) %>% # same order as in the book\n  select(country, sign_hov = p) %>%\n  left_join(\n    trefler_rank %>%\n      select(country, rank_hov = r2)\n  ) %>%\n  bind_rows(\n    trefler %>%\n      summarize(\n        p = sum(trat * athat2 > 0) / n()\n      ) %>%\n      mutate(\n        country = \"All countries\",\n        rank_hov = mean(pull(trefler_rank, r2))\n      ) %>%\n      select(country, sign_hov = p, rank_hov)\n  ) %>%\n  mutate_if(is.numeric, round, 2) %>% # same no of decimals as in the book\n  kable()\n```\n\n::: {.cell-output-display}\n|country       | sign_hov| rank_hov|\n|:-------------|--------:|--------:|\n|Bangladesh    |     0.78|     0.78|\n|Pakistan      |     0.67|     0.78|\n|Indonesia     |     0.67|     0.67|\n|Sri Lanka     |     0.56|     0.67|\n|Thailand      |     0.67|     0.72|\n|Colombia      |     0.89|     0.86|\n|Panama        |     0.78|     0.78|\n|Yugoslavia    |     0.67|     0.61|\n|Portugal      |     0.78|     0.58|\n|Uruguay       |     0.11|     0.53|\n|Greece        |     0.56|     0.75|\n|Ireland       |     0.44|     0.39|\n|Spain         |     0.78|     0.69|\n|Israel        |     0.89|     0.69|\n|Hong Kong     |     0.89|     0.72|\n|New Zealand   |     0.22|     0.61|\n|Austria       |     0.67|     0.44|\n|Singapore     |     1.00|     0.61|\n|Italy         |     0.33|     0.67|\n|UK            |     0.78|     0.64|\n|Japan         |     0.67|     0.78|\n|Belgium       |     0.78|     0.53|\n|Trinidad      |     1.00|     0.53|\n|Netherlands   |     0.44|     0.47|\n|Finland       |     0.44|     0.50|\n|Denmark       |     0.44|     0.42|\n|West Germany  |     0.67|     0.78|\n|France        |     0.33|     0.19|\n|Sweden        |     0.44|     0.36|\n|Norway        |     0.44|     0.78|\n|Switzerland   |     0.89|     0.50|\n|Canada        |     0.22|     0.56|\n|USA           |     0.56|     0.72|\n|All countries |     0.62|     0.62|\n:::\n:::\n\n\n### Notes\n\nThe Stata code that I run returns the same values as R. However:\n\n* Austria should have values 0.67 and 0.47. I got 0.67 and 0.44.\n* France should have values 0.33 and 0.22. I got 0.33 and 0.19.\n* Switzerland should have values 0.89 and 0.47. I got 0.89 and 0.50.\n\n## Exercise 3\n\nAllowing all factors in each country to have different productivities, now run the program `compute_pi.do` to compute factor productivities $\\pi_k^i$ as Trefler (1993).  Note that there are 9 factors in the original data set, but these are now aggregated to just 4 factors, which are labor (endowment 1), capital (endowment 2), cropland (endowment 3) and pasture (endowment 4).  Using the results in `pi_.log` or alternatively in the data files `pi_1.dta, pi_2.dta, pi_3.dta, pi_4.dta` to answer the following:\n\n(a)  Which factor has the most negative productivities estimated?\n(b)  What is the correlation between the estimated labor productivity and the productivities of other factors?  What is the correlation between each factor productivity and GDP per-capita (which you can find in the file `trefler.dta`)?\n\n### Feenstra's code\n\n```stata\n* This program is to compute pai, the factor productivity *\n\ncapture log close\n* log using c:\\Empirical_Exercise\\Chapter_2\\pi.log,replace *\nlog using \"Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\pi.log\", replace\n\nset mem 30m\n\n* use c:\\Empirical_Exercise\\Chapter_2\\trefler, clear *\nuse \"Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\trefler\", clear\n\n* number of country in the dataset *\negen C=max(indexc)\negen F=max(indexf)\n\n* Calculate the world level of Yw, Bw and Vw *\negen Yww=sum(Y)\ngen Yw=Yww/F\negen Bww=sum(B)\ngen Bw=Bww/F\negen Vfw=sum(V), by(indexf)\n\n* Calculate country share Sc *\ngen Sc=(Y-B)/(Yw-Bw)\n\n* Calculate epsilon(fc) and sigma^2(f) according to eq.2 in Trefler (1995)\ngen Efc=AT-(V-Sc*Vfw)\n\n* Construct the average epsilon for a given factor *\negen total=sum(Efc),by(indexf)\ngen ave=total/C\n\n* Construct sigma^2 and the weight *\n\negen tot=sum((Efc-ave)^2), by(indexf)\ngen sigma2f=tot/(C-1)\n\ncodebook sigma2f\ngen sigmaf=sqrt(sigma2f)\ngen weight=sigmaf*sqrt(Sc)\n\n* Using the weight, convert all the data *\n\ngen trAT=AT/(sigmaf*sqrt(Sc))\ngen trV=V/(sigmaf*sqrt(Sc))\ngen trY=Y/sqrt(Sc)\ngen trB=B/sqrt(Sc)\ngen trVfw=Vfw/sigmaf\n\ngen AThat=trV-Sc*trVfw\ngen AThat2=(V-Sc*Vfw)/weight\n\n* Construct Aggregate Labor Endowment *\n\npreserve\nkeep if indexf==7 |indexf==8 | indexf==9\ngen en=2\nreplace en=3 if indexf==8\nreplace en=4 if indexf==9\nkeep country factor AT V en indexc Sc\n\n* save c:\\Empirical_Exercise\\Chapter_2\\indexf_189,replace *\nsave \"Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\indexf_189\", replace\n\nrestore\n\npreserve\ndrop if indexf==7 |indexf==8 | indexf==9\n\negen v_l=sum(V), by(country)\negen AT_l=sum(AT), by(country)\n\ndrop V AT factor\nrename v_l V\nrename AT_l AT\ngen en=1\ncollapse (mean)AT V en indexc Sc, by(country)\ngen str5 factor=\"Labor\"\n* save c:\\Empirical_Exercise\\Chapter_2\\indexf_L,replace *\nsave \"Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\indexf_L\", replace\n\nrestore\n\n* use c:\\Empirical_Exercise\\Chapter_2\\indexf_189,clear *\nuse \"Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\indexf_189\", clear\n\n* append using c:\\Empirical_Exercise\\Chapter_2\\indexf_L *\nappend using \"Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\indexf_L\"\nsort indexc en\n* save c:\\Empirical_Exercise\\Chapter_2\\pi,replace *\nsave \"Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\pi\", replace\n\n************************************\n* Compute Pi: factor productivity *\n************************************\n\n* use c:\\Empirical_Exercise\\Chapter_2\\pi, clear *\nuse \"Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\pi\", clear\n\ngen p_0=1\ngen p_1=1\n\nlocal i=1\nwhile `i'<=4{\n\tpreserve\n\tkeep if en==`i'\n\tlocal j=1\n\twhile `j'<51{\n\t\treplace p_0=p_1\n\t\tgen Vp=p_0*V\n\t\tegen Vpw=sum(Vp)\n\t\treplace p_1=(AT+Sc*Vpw)/V\n\t\treplace p_1=1 if country==\"USA\"\n\t\tdrop Vp Vpw\n\t\tlocal j=`j'+1\n\t}\n\tkeep en country indexc p_1\n\t* save c:\\Empirical_Exercise\\Chapter_2\\pi_`i',replace *\n  save \"Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\pi_`i'\", replace\n\trestore\n\tlocal i=`i'+1\n}\n\nlocal i=1\nwhile `i'<=4{\n\t* use c:\\Empirical_Exercise\\Chapter_2\\pi_`i',clear *\n  use \"Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\pi_`i'\", clear\n\tsort en indexc\n\tby en: list en indexc country p_1\n\tlocal i=`i'+1\n}\n\nlog close\n\nexit\n```\n\n### My code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrefler <- readRDS(fout) %>%\n  # Number of country in the dataset\n  mutate(\n    c = max(indexc),\n    f = max(indexf)\n  ) %>%\n  # Calculate the world level of Yw, Bw and Vw\n  mutate(\n    yww = sum(y),\n    yw = yww / f,\n    bww = sum(b),\n    bw = bww / f\n  ) %>%\n  group_by(indexf) %>%\n  mutate(\n    vfw = sum(v),\n    vw = sum(delta * v)\n  ) %>%\n  ungroup() %>%\n  # Calculate country share Sc\n  mutate(\n    sc = (y - b) / (yw - bw)\n  ) %>%\n  # Calculate epsilon(fc) and sigma^2(f) according to eq.2 in Trefler (1995)\n  mutate(\n    efc = delta * at - (delta * v - sc * vw)\n  ) %>%\n  # Construct the average epsilon for a given factor\n  group_by(indexf) %>%\n  mutate(ave = sum(efc) / c) %>%\n  # Construct sigma^2 and the weight\n  mutate(\n    sigma2f = sum((efc - ave)^2) / (c - 1),\n    sigmaf = sqrt(sigma2f),\n    weight = sigmaf * sqrt(sc)\n  ) %>%\n  ungroup() %>%\n  # Using the weight, convert all the data\n  mutate(\n    trat = delta * at / weight,\n    athat2 = (delta * v - (sc * vw)) / weight\n  )\n\n# No need to save changes and restore\ntrefler2 <- trefler %>%\n  # Construct Aggregate Labor Endowment\n  filter(indexf %in% 7:9) %>%\n  mutate(\n    en = case_when(\n      indexf == 7 ~ 2,\n      indexf == 8 ~ 3,\n      indexf == 9 ~ 4\n    )\n  ) %>%\n  select(country, factor, indexf, at, v, en, indexc, sc)\n\ntrefler3 <- trefler %>%\n  filter(!(indexf %in% 7:9)) %>%\n  group_by(country) %>%\n  # No need to create v_l and at_l to then rename and then collapse\n  summarise(\n    v = sum(v),\n    at = sum(at),\n    sc = mean(sc),\n    indexc = mean(indexc)\n  ) %>%\n  mutate(\n    en = 1,\n    factor = \"Labor\"\n  )\n\ntrefler3 <- trefler2 %>%\n  select(-indexf) %>%\n  bind_rows(trefler3) %>%\n  arrange(indexc, en)\n\n# Compute Pi: factor productivity\n# No need to save intermediate outputs, we proceed with iteration\ntrefler4 <- map_df(\n  trefler3 %>%\n    distinct(en) %>%\n    pull(),\n  function(x) {\n    d <- trefler3 %>%\n      filter(en == x) %>%\n      mutate(p0 = 1, p1 = 1)\n\n    iter <- 50\n\n    for (i in seq_len(iter)) {\n      d <- d %>%\n        mutate(\n          p0 = p1,\n          vp = p0 * v,\n          vpw = sum(vp),\n          p1 = ifelse(country == \"USA\", 1, (at + sc * vpw) / v)\n        ) %>%\n        select(-vp, -vpw)\n    }\n\n    # Tidy alternative to the for loop\n    # d <- accumulate(seq_len(iter), .init = d, ~ .x %>%\n    #   mutate(\n    #     p0 = p1,\n    #     p1 = ifelse(country == \"USA\", 1, (at + sc * sum(p1 * v)) / v)\n    #   )) %>%\n    #   .[[iter + 1]]\n\n    d %>%\n      select(country, indexc, en, p1)\n  }\n)\n```\n:::\n\n\n### Extra step: formatting the tables\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrefler4 %>%\n  arrange(country, en) %>%\n  kable()\n```\n\n::: {.cell-output-display}\n|country      | indexc| en|           p1|\n|:------------|------:|--:|------------:|\n|Austria      |     17|  1|    0.5694186|\n|Austria      |     17|  2|    0.5421980|\n|Austria      |     17|  3|    1.1596592|\n|Austria      |     17|  4|    1.9753040|\n|Bangladesh   |      1|  1|    0.0165219|\n|Bangladesh   |      1|  2|    0.9119021|\n|Bangladesh   |      1|  3|    0.0230836|\n|Bangladesh   |      1|  4|    1.2561775|\n|Belgium      |     22|  1|    0.7233988|\n|Belgium      |     22|  2|    0.6457500|\n|Belgium      |     22|  3|    0.4575561|\n|Belgium      |     22|  4|    6.8868596|\n|Canada       |     32|  1|    0.7799865|\n|Canada       |     32|  2|    0.7359194|\n|Canada       |     32|  3|    0.4738445|\n|Canada       |     32|  4|    0.9541137|\n|Colombia     |      6|  1|    0.1940833|\n|Colombia     |      6|  2|    0.4856291|\n|Colombia     |      6|  3|    0.5963939|\n|Colombia     |      6|  4|    0.1271541|\n|Denmark      |     26|  1|    0.7061784|\n|Denmark      |     26|  2|    0.7035640|\n|Denmark      |     26|  3|    1.7598990|\n|Denmark      |     26|  4|   28.7283398|\n|Finland      |     25|  1|    0.6969619|\n|Finland      |     25|  2|    0.6453199|\n|Finland      |     25|  3|    0.6789600|\n|Finland      |     25|  4|   22.2966445|\n|France       |     28|  1|    0.7356650|\n|France       |     28|  2|    0.6150762|\n|France       |     28|  3|    1.5589519|\n|France       |     28|  4|    3.1663974|\n|Greece       |     11|  1|    0.3140718|\n|Greece       |     11|  2|    0.4401574|\n|Greece       |     11|  3|    0.6072472|\n|Greece       |     11|  4|    0.5059134|\n|Hong Kong    |     15|  1|    0.3781684|\n|Hong Kong    |     15|  2|    0.5150965|\n|Hong Kong    |     15|  3| -229.0729738|\n|Hong Kong    |     15|  4| -879.5376414|\n|Indonesia    |      3|  1|    0.0432824|\n|Indonesia    |      3|  2|    0.2506530|\n|Indonesia    |      3|  3|    0.1641388|\n|Indonesia    |      3|  4|    0.4576649|\n|Ireland      |     12|  1|    0.4166084|\n|Ireland      |     12|  2|    0.4783923|\n|Ireland      |     12|  3|    1.4803708|\n|Ireland      |     12|  4|    0.6129137|\n|Israel       |     14|  1|    0.6131932|\n|Israel       |     14|  2|    0.5049116|\n|Israel       |     14|  3|    2.5171947|\n|Israel       |     14|  4|    2.1567210|\n|Italy        |     19|  1|    0.5907437|\n|Italy        |     19|  2|    0.5122213|\n|Italy        |     19|  3|    0.6419316|\n|Italy        |     19|  4|    3.1452732|\n|Japan        |     21|  1|    0.6049210|\n|Japan        |     21|  2|    0.6502130|\n|Japan        |     21|  3|    4.2923043|\n|Japan        |     21|  4|  100.5984017|\n|Netherlands  |     24|  1|    0.7933355|\n|Netherlands  |     24|  2|    0.7513015|\n|Netherlands  |     24|  3|    9.0914542|\n|Netherlands  |     24|  4|   13.0978390|\n|New Zealand  |     16|  1|    0.5850298|\n|New Zealand  |     16|  2|    0.6197254|\n|New Zealand  |     16|  3|    7.5203295|\n|New Zealand  |     16|  4|    0.3673216|\n|Norway       |     30|  1|    0.7816517|\n|Norway       |     30|  2|    0.6199874|\n|Norway       |     30|  3|    1.8129219|\n|Norway       |     30|  4|   34.5985787|\n|Pakistan     |      2|  1|    0.0394124|\n|Pakistan     |      2|  2|    0.4867497|\n|Pakistan     |      2|  3|    0.0975686|\n|Pakistan     |      2|  4|    0.4731917|\n|Panama       |      7|  1|    0.2279774|\n|Panama       |      7|  2|    0.3224079|\n|Panama       |      7|  3|    0.5834955|\n|Panama       |      7|  4|    0.2973391|\n|Portugal     |      9|  1|    0.1759864|\n|Portugal     |      9|  2|    0.2971070|\n|Portugal     |      9|  3|   -0.3833130|\n|Portugal     |      9|  4|    1.6397757|\n|Singapore    |     18|  1|    0.4873306|\n|Singapore    |     18|  2|    0.3209652|\n|Singapore    |     18|  3|  -25.4922493|\n|Singapore    |     18|  4|  795.1006524|\n|Spain        |     13|  1|    0.4172726|\n|Spain        |     13|  2|    0.5194890|\n|Spain        |     13|  3|    0.2365766|\n|Spain        |     13|  4|    1.0176692|\n|Sri Lanka    |      4|  1|    0.0344433|\n|Sri Lanka    |      4|  2|    0.1259789|\n|Sri Lanka    |      4|  3|    0.2300838|\n|Sri Lanka    |      4|  4|    0.7949096|\n|Sweden       |     29|  1|    0.7270576|\n|Sweden       |     29|  2|    0.9445322|\n|Sweden       |     29|  3|    0.9073509|\n|Sweden       |     29|  4|    7.6468612|\n|Switzerland  |     31|  1|    0.9317447|\n|Switzerland  |     31|  2|    0.6079722|\n|Switzerland  |     31|  3|    3.7425295|\n|Switzerland  |     31|  4|    3.3350218|\n|Thailand     |      5|  1|    0.0489020|\n|Thailand     |      5|  2|    0.3929541|\n|Thailand     |      5|  3|    0.3002516|\n|Thailand     |      5|  4|   16.9392348|\n|Trinidad     |     23|  1|    0.4483440|\n|Trinidad     |     23|  2|    0.4193396|\n|Trinidad     |     23|  3|   -0.9042060|\n|Trinidad     |     23|  4|    4.6219780|\n|UK           |     20|  1|    0.6332355|\n|UK           |     20|  2|    0.8159872|\n|UK           |     20|  3|    1.4765402|\n|UK           |     20|  4|    2.2422499|\n|USA          |     33|  1|    1.0000000|\n|USA          |     33|  2|    1.0000000|\n|USA          |     33|  3|    1.0000000|\n|USA          |     33|  4|    1.0000000|\n|Uruguay      |     10|  1|    0.2029693|\n|Uruguay      |     10|  2|    0.4060566|\n|Uruguay      |     10|  3|    0.5709917|\n|Uruguay      |     10|  4|    0.0984165|\n|West Germany |     27|  1|    0.7691833|\n|West Germany |     27|  2|    0.6629313|\n|West Germany |     27|  3|    1.0541740|\n|West Germany |     27|  4|    6.8647780|\n|Yugoslavia   |      8|  1|    0.1997569|\n|Yugoslavia   |      8|  2|    0.2985477|\n|Yugoslavia   |      8|  3|    0.3189656|\n|Yugoslavia   |      8|  4|    0.6397429|\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}