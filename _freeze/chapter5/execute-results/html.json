{
  "hash": "9299cf47b77c1f404d68419f2b4306e1",
  "result": {
    "markdown": "\n# Chapter 5. Increasing Returns and the Gravity Equation\n\n## Documentation\n\nUS-Canada data for Anderson and van Wincoop (2002) \n\nThere are a total of 63 US-Canada regions (states, District of Columbia, provinces and territories). They are listed below.  The regressions, however, are based on the same 40 states and provinces as in McCallum (these are indicated with a star below). \n\n1. Alabama*\n2. Alaska         \n3. Arizona*\n4. Arkansas     \n5. California*\n6. Colorado     \n7. Connecticut \n8. Delaware     \n9. Florida*\n10. Georgia*\n11. Hawaii       \n12. Idaho*\n13. Illinois*\n14. Indiana*\n15. Iowa         \n16. Kansas     \n17. Kentucky*\n18. Louisiana*\n19. Maine*\n20. Maryland*  \n21. Massachusetts*\n22. Michigan*      \n23. Minnesota*    \n24. Mississippi     \n25. Missouri*      \n26. Montana*      \n27. Nebraska        \n28. Nevada           \n29. New Hampshire*\n30. New Jersey*      \n31. New Mexico     \n32. New York*       \n33. North Carolina*\n34. North Dakota*  \n35. Ohio*            \n36. Oklahoma     \n37. Oregon         \n38. Pennsylvania*\n39. Rhode Island \n40. South Carolina  \n41. South Dakota    \n42. Tennessee*      \n43. Texas*          \n44. Utah             \n45. Vermont*    \n46. Virginia*     \n47. Washington*   \n48. West Virginia  \n49. Wisconsin*     \n50. Wyoming        \n51. Dist. of Col.    \n52. Alberta*         \n53. British Columbia*\n54. Manitoba*        \n55. New Brunswick *\n56. Newfoundland*\n57. NW Territories \n58. Nova Scotia*    \n59. Ontario*         \n60. Prince Edward Island*\n61. Quebec*           \n62. Saskatchewan*\n63. Yukon Territory\n\nData files:\n\n1. dist.csv: Contains distances between the 40 regions listed above. The distances are in kilometers and are between the capitals of the regions. \n2. gdp_ce_93.csv and gdp_ci_93.csv: Contains nominal GDP in millions of Canadian dollars in 1993 for the 40 regions above. \n3. trade_93.csv\n\nContains 1993 trade data between the 40 regions listed above, in US dollars.  The indicator variables “1_ex” and “1_im” equal 1 if the exporter or importer is a US state, and 2 for a Canadian province.\n\n## Empirical exercise\n\nIn this exercise, you are asked to reproduce the empirical results shown in Table 5.2.  There are  four datasets available:  “dist.csv” which is distances; “gdp_ce_93.csv” which is GDP in exporting location in 1993; “gdp_ci_93.csv” which is GDP in importing location in 1993; and “trade_93.csv” which is trade in 1993.  To complete the exercise, these files should be stored in the directory:  c:\\Empirical_Exercise\\Chapter_5\\.  After this, run the STATA program “data_trans.do,” which will convert these datasets to STATA files with the same name.  The trade data is already converted into US dollars, but GDP data is in Canadian dollars, so this is converted with the exchange rate 1 Canadian dollar = 0.775134 U.S. dollars.\n\n## Exercise 1\n\nRun the program “gravity_1.do” to replicate the gravity equations in columns (1)-(3) of Table 5.2.\n\n### Feenstra's code\n\n\n```stata\ncapture log close\nlog using c:\\Empirical_Exercise\\Chapter_5\\gravity_1.log, replace\n\nset matsize 100\n\nuse c:\\Empirical_Exercise\\Chapter_5\\trade_93,clear\nsort c_e\nmerge c_e using c:\\Empirical_Exercise\\Chapter_5\\gdp_ce_93\ndrop _merge\nsort c_i\nmerge c_i using c:\\Empirical_Exercise\\Chapter_5\\gdp_ci_93\ndrop _merge\ndrop if vx==0\ndrop if dist==0\n\ngen lnvx=log(vx)\ngen lndist=log(dist)\ngen lngdp_ce=log(gdp_ce)\ngen lngdp_ci=log(gdp_ci)\n\n* Estimate Gravity Equation from the Canadian Perspective *\n\npreserve\ngen d_ca=0\nreplace d_ca=1 if (l_ex==2) & (l_im==2)\ndrop if (l_ex==1) & (l_im==1)\n\nregress lnvx lngdp_ce lngdp_ci lndist d_ca\nrestore\n\n* Estimate Gravity Equation from the U.S. Perspective *\n\npreserve\ngen d_us=0\nreplace d_us=1 if (l_ex==1) & (l_im==1)\ndrop if (l_ex==2) & (l_im==2)\n\nregress lnvx lngdp_ce lngdp_ci lndist d_us\nrestore\n\n* Estimate Gravity Equation by Pooling All Data *\n\npreserve\ngen d_ca=0\ngen d_us=0\nreplace d_ca=1 if (l_ex==2) & (l_im==2)\nreplace d_us=1 if (l_ex==1) & (l_im==1)\n\nregress lnvx lngdp_ce lngdp_ci lndist d_ca d_us\nvce\nrestore\n\nclear\n\nlog close\n```\n\n### My code\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Packages ----\n\nlibrary(archive)\nlibrary(haven)\nlibrary(dplyr)\n\n# Extract ----\n\nfzip <- \"first-edition/Chapter-5.zip\"\ndout <- gsub(\"\\\\.zip$\", \"\", fzip)\n\nif (!dir.exists(dout)) {\n  archive_extract(fzip, dir = dout)\n}\n\n# Read and transform ----\n\nfout <- paste0(dout, \"/trade_93.rds\")\n\nif (!file.exists(fout)) {\n  trade_93 <- read_dta(paste0(dout, \"/trade_93.dta\"))\n  gdp_ce_93 <- read_dta(paste0(dout, \"/gdp_ce_93.dta\"))\n  gdp_ci_93 <- read_dta(paste0(dout, \"/gdp_ci_93.dta\"))\n\n  trade_93 <- trade_93 %>%\n    left_join(gdp_ce_93, by = \"c_e\") %>%\n    left_join(gdp_ci_93, by = \"c_i\") %>%\n    filter(vx != 0, dist != 0) %>%\n    mutate(\n      lnvx = log(vx),\n      lndist = log(dist),\n      lngdp_ce = log(gdp_ce),\n      lngdp_ci = log(gdp_ci)\n    )\n\n  saveRDS(trade_93, fout)\n} else {\n  trade_93 <- readRDS(fout)\n}\n\n# Estimate Gravity Equation from the Canadian Perspective ----\n\ntrade_93_2 <- trade_93 %>%\n  mutate(d_ca = ifelse(l_ex == 2 & l_im == 2, 1, 0)) %>%\n  filter(l_ex != 1 | l_im != 1)\n\nfit_ca <- lm(lnvx ~ lngdp_ce + lngdp_ci + lndist + d_ca, data = trade_93_2)\n\nsummary(fit_ca)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = lnvx ~ lngdp_ce + lngdp_ci + lndist + d_ca, data = trade_93_2)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-5.9344 -0.6428  0.0174  0.6225  4.0379 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  3.74267    0.77220   4.847 1.56e-06 ***\nlngdp_ce     1.21871    0.03316  36.754  < 2e-16 ***\nlngdp_ci     0.97978    0.03253  30.124  < 2e-16 ***\nlndist      -1.35315    0.06901 -19.607  < 2e-16 ***\nd_ca         2.80203    0.14170  19.775  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.183 on 674 degrees of freedom\nMultiple R-squared:  0.7622,\tAdjusted R-squared:  0.7608 \nF-statistic:   540 on 4 and 674 DF,  p-value: < 2.2e-16\n```\n:::\n\n```{.r .cell-code}\n# Estimate Gravity Equation from the U.S. Perspective ----\n\ntrade_93_3 <- trade_93 %>%\n  mutate(d_us = ifelse(l_ex == 1 & l_im == 1, 1, 0)) %>%\n  filter(l_ex != 2 | l_im != 2)\n\nfit_us <- lm(lnvx ~ lngdp_ce + lngdp_ci + lndist + d_us, data = trade_93_3)\n\nsummary(fit_us)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = lnvx ~ lngdp_ce + lngdp_ci + lndist + d_us, data = trade_93_3)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-6.2863 -0.4620 -0.0077  0.4822  3.7858 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  2.65959    0.44927   5.920 4.04e-09 ***\nlngdp_ce     1.12843    0.02045  55.172  < 2e-16 ***\nlngdp_ci     0.98203    0.02040  48.148  < 2e-16 ***\nlndist      -1.08189    0.03523 -30.712  < 2e-16 ***\nd_us         0.40597    0.05787   7.016 3.54e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.9292 on 1416 degrees of freedom\nMultiple R-squared:  0.8529,\tAdjusted R-squared:  0.8525 \nF-statistic:  2053 on 4 and 1416 DF,  p-value: < 2.2e-16\n```\n:::\n\n```{.r .cell-code}\n# Estimate Gravity Equation by Pooling All Data ----\n\ntrade_93_4 <- trade_93 %>%\n  mutate(\n    d_ca = ifelse(l_ex == 2 & l_im == 2, 1, 0),\n    d_us = ifelse(l_ex == 1 & l_im == 1, 1, 0)\n  )\n\nfit_all <- lm(\n  lnvx ~ lngdp_ce + lngdp_ci + lndist + d_ca + d_us,\n  data = trade_93_4\n)\n\nsummary(fit_all)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = lnvx ~ lngdp_ce + lngdp_ci + lndist + d_ca + d_us, \n    data = trade_93_4)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-6.2531 -0.4630 -0.0100  0.4902  3.8101 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  2.91151    0.42672   6.823 1.29e-11 ***\nlngdp_ce     1.13297    0.01968  57.571  < 2e-16 ***\nlngdp_ci     0.97422    0.01963  49.630  < 2e-16 ***\nlndist      -1.11070    0.03373 -32.925  < 2e-16 ***\nd_ca         2.75171    0.10868  25.320  < 2e-16 ***\nd_us         0.39827    0.05744   6.933 6.08e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.9304 on 1505 degrees of freedom\nMultiple R-squared:  0.852,\tAdjusted R-squared:  0.8515 \nF-statistic:  1733 on 5 and 1505 DF,  p-value: < 2.2e-16\n```\n:::\n\n```{.r .cell-code}\nvcov(fit_all)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n             (Intercept)      lngdp_ce      lngdp_ci        lndist\n(Intercept)  0.182087517 -5.244280e-03 -5.204609e-03 -8.948498e-03\nlngdp_ce    -0.005244280  3.872922e-04  8.278679e-05  1.867887e-05\nlngdp_ci    -0.005204609  8.278679e-05  3.853139e-04  1.752375e-05\nlndist      -0.008948498  1.867887e-05  1.752375e-05  1.138030e-03\nd_ca        -0.011574809  4.124081e-04  4.010346e-04  1.704325e-04\nd_us         0.003876605 -3.748832e-04 -3.931548e-04  3.969829e-04\n                     d_ca          d_us\n(Intercept) -0.0115748092  0.0038766053\nlngdp_ce     0.0004124081 -0.0003748832\nlngdp_ci     0.0004010346 -0.0003931548\nlndist       0.0001704325  0.0003969829\nd_ca         0.0118103647  0.0008562509\nd_us         0.0008562509  0.0032996176\n```\n:::\n:::\n\n\n## Exercise 2\n\nRun the program “gravity_2.do” to replicate gravity equation using fixed-effects, i.e., column (5) in Table 5.2.  Then answer:\n\na. How are these results affected if we allow the provincial and state GDP’s to have coefficients different from unity?\nb. What coefficients are obtained if we introduce separate indicator variables for intra-Canadian and intra-U.S. trade, rather than the border dummy?\n\n### Feenstra's code\n\n```stata\ncapture log close\nlog using c:\\Empirical_Exercise\\Chapter_5\\gravity_2.log, replace\n\nset matsize 100\n\nuse c:\\Empirical_Exercise\\Chapter_5\\trade_93,clear\nsort c_e\nmerge c_e using c:\\Empirical_Exercise\\Chapter_5\\gdp_ce_93\ndrop _merge\nsort c_i\nmerge c_i using c:\\Empirical_Exercise\\Chapter_5\\gdp_ci_93\ndrop _merge\ndrop if vx==0\ndrop if dist==0\n\ntab c_e, gen (ced)\ntab c_i, gen (cid)\n\ngen d_border=1\nreplace d_border=0 if (l_ex==1) & (l_im==1)\nreplace d_border=0 if (l_ex==2) & (l_im==2)\n\ngen lnvx=log(vx)\ngen lndist=log(dist)\ngen lngdp_ce=log(gdp_ce)\ngen lngdp_ci=log(gdp_ci)\ngen lnn_vx=lnvx-lngdp_ce-lngdp_ci\n\nregress lnn_vx lndist d_border ced* cid*\n\nclear\nlog close\n```\n\n### My code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrade_93 <- readRDS(paste0(dout, \"/trade_93.rds\"))\n\ntrade_93 %>%\n  group_by(c_e) %>%\n  summarise(\n    freq = n(),\n    percent = 100 * n() / nrow(trade_93)\n  ) %>%\n  ungroup() %>%\n  mutate(cum = cumsum(percent))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 40 × 4\n   c_e    freq percent   cum\n   <chr> <int>   <dbl> <dbl>\n 1 AB       39    2.58  2.58\n 2 Ala      38    2.51  5.10\n 3 Ari      37    2.45  7.54\n 4 BC       39    2.58 10.1 \n 5 Cal      37    2.45 12.6 \n 6 Flo      39    2.58 15.2 \n 7 Geo      39    2.58 17.7 \n 8 Ida      36    2.38 20.1 \n 9 Ill      39    2.58 22.7 \n10 Ind      38    2.51 25.2 \n# ℹ 30 more rows\n```\n:::\n\n```{.r .cell-code}\ntrade_93 %>%\n  group_by(c_i) %>%\n  summarise(\n    freq = n(),\n    percent = 100 * n() / nrow(trade_93)\n  ) %>%\n  ungroup() %>%\n  mutate(cum = cumsum(percent))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 40 × 4\n   c_i    freq percent   cum\n   <chr> <int>   <dbl> <dbl>\n 1 AB       39    2.58  2.58\n 2 Ala      38    2.51  5.10\n 3 Ari      36    2.38  7.48\n 4 BC       39    2.58 10.1 \n 5 Cal      39    2.58 12.6 \n 6 Flo      39    2.58 15.2 \n 7 Geo      39    2.58 17.8 \n 8 Ida      33    2.18 20.0 \n 9 Ill      39    2.58 22.6 \n10 Ind      39    2.58 25.1 \n# ℹ 30 more rows\n```\n:::\n\n```{.r .cell-code}\n# gen d_border=1\n# replace d_border=0 if (l_ex==1) & (l_im==1)\n# replace d_border=0 if (l_ex==2) & (l_im==2)\n\ntrade_93 <- trade_93 %>%\n  mutate(\n    d_border = case_when(\n      l_ex == 1 & l_im == 1 ~ 0,\n      l_ex == 2 & l_im == 2 ~ 0,\n      TRUE ~ 1\n    ),\n    lnvx = log(vx),\n    lndist = log(dist),\n    lngdp_ce = log(gdp_ce),\n    lngdp_ci = log(gdp_ci),\n    lnn_vx = lnvx - lngdp_ce - lngdp_ci\n  )\n\n# some of the FEs are dropped in Stata\n# the slopes are identical, which is what matters\n\nfit_fe <- lm(\n  lnn_vx ~ lndist + d_border + as.factor(c_e) + as.factor(c_i),\n  data = trade_93\n)\n\nsummary(fit_fe)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = lnn_vx ~ lndist + d_border + as.factor(c_e) + as.factor(c_i), \n    data = trade_93)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-5.1033 -0.3934 -0.0101  0.3892  4.3379 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(>|t|)    \n(Intercept)         8.78621    0.35661  24.638  < 2e-16 ***\nlndist             -1.25168    0.03682 -33.995  < 2e-16 ***\nd_border           -1.55051    0.05889 -26.327  < 2e-16 ***\nas.factor(c_e)Ala  -1.63657    0.19473  -8.404  < 2e-16 ***\nas.factor(c_e)Ari  -1.79305    0.19567  -9.164  < 2e-16 ***\nas.factor(c_e)BC   -0.20201    0.19057  -1.060 0.289297    \nas.factor(c_e)Cal  -1.18955    0.19584  -6.074 1.59e-09 ***\nas.factor(c_e)Flo  -2.28631    0.19321 -11.833  < 2e-16 ***\nas.factor(c_e)Geo  -1.64307    0.19371  -8.482  < 2e-16 ***\nas.factor(c_e)Ida  -1.30647    0.19686  -6.636 4.55e-11 ***\nas.factor(c_e)Ill  -1.35755    0.19407  -6.995 4.06e-12 ***\nas.factor(c_e)Ind  -1.57817    0.19573  -8.063 1.56e-15 ***\nas.factor(c_e)Ken  -1.39710    0.19705  -7.090 2.10e-12 ***\nas.factor(c_e)Lou  -1.83182    0.19702  -9.298  < 2e-16 ***\nas.factor(c_e)Mai  -1.76609    0.19648  -8.989  < 2e-16 ***\nas.factor(c_e)Mas  -1.87801    0.19402  -9.679  < 2e-16 ***\nas.factor(c_e)Mic  -1.58645    0.19688  -8.058 1.62e-15 ***\nas.factor(c_e)Min  -1.17706    0.19477  -6.043 1.92e-09 ***\nas.factor(c_e)MN   -0.53057    0.19094  -2.779 0.005528 ** \nas.factor(c_e)MO   -1.40491    0.19627  -7.158 1.31e-12 ***\nas.factor(c_e)Mon  -1.96394    0.19711  -9.964  < 2e-16 ***\nas.factor(c_e)Mry  -1.95588    0.19703  -9.927  < 2e-16 ***\nas.factor(c_e)NB   -1.09965    0.19128  -5.749 1.10e-08 ***\nas.factor(c_e)Nca  -1.55415    0.19384  -8.018 2.22e-15 ***\nas.factor(c_e)Nda  -1.85527    0.19711  -9.412  < 2e-16 ***\nas.factor(c_e)Nfld -1.77882    0.19609  -9.071  < 2e-16 ***\nas.factor(c_e)NHm  -1.90932    0.19548  -9.767  < 2e-16 ***\nas.factor(c_e)NJr  -1.86410    0.19427  -9.595  < 2e-16 ***\nas.factor(c_e)NS   -0.83361    0.19096  -4.365 1.36e-05 ***\nas.factor(c_e)Nyr  -2.46148    0.19431 -12.668  < 2e-16 ***\nas.factor(c_e)Ohi  -1.42450    0.19713  -7.226 8.06e-13 ***\nas.factor(c_e)ON   -0.66004    0.19239  -3.431 0.000619 ***\nas.factor(c_e)PEI  -1.54122    0.19807  -7.781 1.37e-14 ***\nas.factor(c_e)Pen  -1.84783    0.19448  -9.501  < 2e-16 ***\nas.factor(c_e)Que  -0.45829    0.19160  -2.392 0.016889 *  \nas.factor(c_e)SK   -0.69202    0.19069  -3.629 0.000295 ***\nas.factor(c_e)Ten  -1.30471    0.19528  -6.681 3.39e-11 ***\nas.factor(c_e)Tex  -1.56460    0.19550  -8.003 2.49e-15 ***\nas.factor(c_e)Ver  -2.05854    0.19683 -10.458  < 2e-16 ***\nas.factor(c_e)Vir  -2.28509    0.19413 -11.771  < 2e-16 ***\nas.factor(c_e)Was  -1.57505    0.19697  -7.996 2.62e-15 ***\nas.factor(c_e)Wis  -1.37702    0.19395  -7.100 1.96e-12 ***\nas.factor(c_i)Ala  -1.79804    0.19474  -9.233  < 2e-16 ***\nas.factor(c_i)Ari  -1.29666    0.19730  -6.572 6.94e-11 ***\nas.factor(c_i)BC   -0.15376    0.19057  -0.807 0.419890    \nas.factor(c_i)Cal  -1.01648    0.19331  -5.258 1.68e-07 ***\nas.factor(c_i)Flo  -1.55628    0.19321  -8.055 1.66e-15 ***\nas.factor(c_i)Geo  -1.49839    0.19371  -7.735 1.94e-14 ***\nas.factor(c_i)Ida  -1.45965    0.20150  -7.244 7.09e-13 ***\nas.factor(c_i)Ill  -1.40371    0.19407  -7.233 7.68e-13 ***\nas.factor(c_i)Ind  -1.56421    0.19444  -8.045 1.80e-15 ***\nas.factor(c_i)Ken  -1.55287    0.19713  -7.877 6.58e-15 ***\nas.factor(c_i)Lou  -1.53952    0.19714  -7.809 1.11e-14 ***\nas.factor(c_i)Mai  -1.31609    0.19785  -6.652 4.11e-11 ***\nas.factor(c_i)Mas  -1.57232    0.19662  -7.997 2.61e-15 ***\nas.factor(c_i)Mic  -1.44190    0.19428  -7.422 1.98e-13 ***\nas.factor(c_i)Min  -1.44964    0.19353  -7.490 1.20e-13 ***\nas.factor(c_i)MN   -0.21433    0.19094  -1.123 0.261830    \nas.factor(c_i)MO   -1.68801    0.19369  -8.715  < 2e-16 ***\nas.factor(c_i)Mon  -1.17030    0.20007  -5.849 6.11e-09 ***\nas.factor(c_i)Mry  -2.01908    0.19434 -10.389  < 2e-16 ***\nas.factor(c_i)NB    0.07453    0.19128   0.390 0.696846    \nas.factor(c_i)Nca  -1.77539    0.19384  -9.159  < 2e-16 ***\nas.factor(c_i)Nda  -1.32751    0.20530  -6.466 1.37e-10 ***\nas.factor(c_i)Nfld  0.21260    0.19185   1.108 0.267961    \nas.factor(c_i)NHm  -1.66954    0.19550  -8.540  < 2e-16 ***\nas.factor(c_i)NJr  -1.75002    0.19427  -9.008  < 2e-16 ***\nas.factor(c_i)NS   -0.68673    0.19096  -3.596 0.000334 ***\nas.factor(c_i)Nyr  -2.03481    0.19697 -10.330  < 2e-16 ***\nas.factor(c_i)Ohi  -1.57975    0.19582  -8.067 1.51e-15 ***\nas.factor(c_i)ON   -0.50306    0.19239  -2.615 0.009024 ** \nas.factor(c_i)PEI  -0.42490    0.19218  -2.211 0.027200 *  \nas.factor(c_i)Pen  -1.53740    0.19580  -7.852 7.98e-15 ***\nas.factor(c_i)Que  -0.32607    0.19160  -1.702 0.089003 .  \nas.factor(c_i)SK   -0.28279    0.19069  -1.483 0.138315    \nas.factor(c_i)Ten  -1.57721    0.19401  -8.130 9.23e-16 ***\nas.factor(c_i)Tex  -1.03685    0.19296  -5.373 9.01e-08 ***\nas.factor(c_i)Ver  -1.68015    0.20291  -8.280 2.79e-16 ***\nas.factor(c_i)Vir  -2.01230    0.19542 -10.297  < 2e-16 ***\nas.factor(c_i)Was  -0.86859    0.19566  -4.439 9.72e-06 ***\nas.factor(c_i)Wis  -1.41883    0.19395  -7.315 4.26e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.841 on 1430 degrees of freedom\nMultiple R-squared:  0.6639,\tAdjusted R-squared:  0.6451 \nF-statistic: 35.32 on 80 and 1430 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}