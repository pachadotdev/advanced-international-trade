
# Chapter 8. Import Quotas and Export Subsidies

## Empirical exercise

This exercise is to reproduce regression results Feenstra (1988a). To complete the exercise, the files "car_7990.dta, truck_7990.dta" should be stored in `Chapter-8`.  

## Documentation

Data Description for Feenstra (1988a):

1. `car.dta`: This STATA file contains car’s various characteristics, such as weight (wght), width (wdth), height (hght), horse power (hs), four-wheel (four), transmission (tran), power steering (ps) and air condition (ac) for 1979-1990. It also includes each model’s sales (quan) and price.
2. `truck.dta`: This STATA file contains truck’s various characteristics, such as weight (wght), width (wdth), height (hght), horse power (hs), four-wheel (four), transmission (tran), power steering (ps) and air condition (ac) for 1979-1990. It also includes each model’s sale (quan) and price, though sales are missing after 1985.

## Exercise 1

Run the programs `pindex_c.do`, `pindex_t.do`, `unit_value.do` to reproduce the price indexes and unit-values for cars and trucks in Table 8.3.  What formula is used for the price indexes, and how does this differ from the unit-values?

### Feenstra's code

#### pindex_c.do

```stata
clear
capture log close
log using Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\pindex_c.log,replace

use Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\car_7990,clear
keep year model type price quan

preserve
keep if year==80
keep model type price quan
ren price price_80
ren quan quan_80
sort model
save Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\car_80,replace
restore

sort model
merge model using Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\car_80
keep if _merge==3
drop _merge

sort year model
egen value_80=sum(price_80*quan_80), by(year)
egen value_cp=sum(price*quan_80),by(year)
gen lasp=value_cp/value_80

egen value_c=sum(price*quan), by(year)
egen value_cq=sum(price_80*quan), by(year)
gen pasp=value_c/value_cq
 
gen pindex=(lasp*pasp)^0.5

collapse (mean) pindex, by(year)
list

log close
```

Output:

```stata
. clear

. capture log close

. log using Z:\home\pacha\github\advanced-international-trade\first-edition\Chapte
> r-8\pindex_c.log,replace
(note: file Z:\home\pacha\github\advanced-international-trade\first-edition\Chapte
> r-8\pindex_c.log not found)
----------------------------------------------------------------------------------
      name:  <unnamed>
       log:  Z:\home\pacha\github\advanced-international-trade\first-edition\Chapt
> er-8\pindex_c.log
  log type:  text
 opened on:  19 Jun 2024, 18:40:59

. 
. use Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\ca
> r_7990,clear

. keep year model type price quan

. 
. preserve

. keep if year==80
(260 observations deleted)

. keep model type price quan

. ren price price_80

. ren quan quan_80

. sort model

. save Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\c
> ar_80,replace
file Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\car
> _80.dta saved

. restore

. 
. sort model

. merge model using Z:\home\pacha\github\advanced-international-trade\first-editio
> n\Chapter-8\car_80
(note: you are using old merge syntax; see [R] merge for new syntax)
variable model does not uniquely identify observations in the master data

. keep if _merge==3
(55 observations deleted)

. drop _merge

. 
. sort year model

. egen value_80=sum(price_80*quan_80), by(year)

. egen value_cp=sum(price*quan_80),by(year)

. gen lasp=value_cp/value_80

. 
. egen value_c=sum(price*quan), by(year)

. egen value_cq=sum(price_80*quan), by(year)

. gen pasp=value_c/value_cq

.  
. gen pindex=(lasp*pasp)^0.5

. 
. collapse (mean) pindex, by(year)

. list

     +-----------------+
     | year     pindex |
     |-----------------|
  1. |   79      .9663 |
  2. |   80          1 |
  3. |   81   1.197522 |
  4. |   82   1.289163 |
  5. |   83   1.312988 |
     |-----------------|
  6. |   84   1.389093 |
  7. |   85   1.477987 |
  8. |   86   1.668846 |
  9. |   87   1.885685 |
 10. |   88    2.04798 |
     |-----------------|
 11. |   89   2.082082 |
 12. |   90    2.10851 |
     +-----------------+

. 
. log close
      name:  <unnamed>
       log:  Z:\home\pacha\github\advanced-international-trade\first-edition\Chapt
> er-8\pindex_c.log
  log type:  text
 closed on:  19 Jun 2024, 18:41:01
----------------------------------------------------------------------------------

. 
end of do-file
```

#### pindex_t.do

```stata
clear
capture log close
log using Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\pindex_t.log,replace

use Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\truck_7990,clear
keep year model type price quan

preserve
keep if year==80
keep model type price quan
ren price price_80
ren quan quan_80
sort model
save Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\truck_80,replace
restore

sort model
merge model using Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\truck_80
keep if _merge==3
drop _merge

sort year model
egen value_80=sum(price_80*quan_80), by(year)
egen value_cp=sum(price*quan_80),by(year)
gen lasp=value_cp/value_80

egen value_c=sum(price*quan), by(year)
egen value_cq=sum(price_80*quan), by(year)
gen pasp=value_c/value_cq
 
gen pindex=(lasp*pasp)^0.5

collapse (mean) pindex, by(year)
list

log close
```

Output:

```stata
. clear

. capture log close

. log using Z:\home\pacha\github\advanced-international-trade\first-edition\Chapte
> r-8\pindex_t.log,replace
(note: file Z:\home\pacha\github\advanced-international-trade\first-edition\Chapte
> r-8\pindex_t.log not found)
----------------------------------------------------------------------------------
      name:  <unnamed>
       log:  Z:\home\pacha\github\advanced-international-trade\first-edition\Chapt
> er-8\pindex_t.log
  log type:  text
 opened on:  19 Jun 2024, 18:59:29

. 
. use Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\tr
> uck_7990,clear

. keep year model type price quan

. 
. preserve

. keep if year==80
(110 observations deleted)

. keep model type price quan

. ren price price_80

. ren quan quan_80

. sort model

. save Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\t
> ruck_80,replace
file Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\tru
> ck_80.dta saved

. restore

. 
. sort model

. merge model using Z:\home\pacha\github\advanced-international-trade\first-editio
> n\Chapter-8\truck_80
(note: you are using old merge syntax; see [R] merge for new syntax)
variable model does not uniquely identify observations in the master data

. keep if _merge==3
(38 observations deleted)

. drop _merge

. 
. sort year model

. egen value_80=sum(price_80*quan_80), by(year)

. egen value_cp=sum(price*quan_80),by(year)

. gen lasp=value_cp/value_80

. 
. egen value_c=sum(price*quan), by(year)

. egen value_cq=sum(price_80*quan), by(year)

. gen pasp=value_c/value_cq
(21 missing values generated)

.  
. gen pindex=(lasp*pasp)^0.5
(21 missing values generated)

. 
. collapse (mean) pindex, by(year)

. list

     +-----------------+
     | year     pindex |
     |-----------------|
  1. |   79    .970215 |
  2. |   80          1 |
  3. |   81   1.278085 |
  4. |   82   1.309353 |
  5. |   83   1.210055 |
     |-----------------|
  6. |   84   1.230847 |
  7. |   85   1.252268 |
  8. |   86          . |
  9. |   87          . |
 10. |   88          . |
     |-----------------|
 11. |   89          . |
 12. |   90          . |
     +-----------------+

. 
. log close
      name:  <unnamed>
       log:  Z:\home\pacha\github\advanced-international-trade\first-edition\Chapt
> er-8\pindex_t.log
  log type:  text
 closed on:  19 Jun 2024, 18:59:31
----------------------------------------------------------------------------------

. 
end of do-file
```

#### unit_value.do

```stata
clear
capture log close
log using Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\unit_value.log,replace

use Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\car_7990,clear

gen value=price*quan
egen aquan=mean(quan), by(year)
egen avalue=mean(value), by(year)
gen uvalue=avalue/aquan
collapse (mean) uvalue, by(year)
list
clear

use Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\truck_7990,clear
gen value=price*quan
egen aquan=mean(quan), by(year)
egen avalue=mean(value), by(year)
gen uvalue=avalue/aquan
collapse (mean) uvalue, by(year)
list
clear

log close
exit
```

Output:

```stata
. clear

. capture log close

. log using Z:\home\pacha\github\advanced-international-trade\first-edition\Chapte
> r-8\unit_value.log,replace
(note: file Z:\home\pacha\github\advanced-international-trade\first-edition\Chapte
> r-8\unit_value.log not found)
----------------------------------------------------------------------------------
      name:  <unnamed>
       log:  Z:\home\pacha\github\advanced-international-trade\first-edition\Chapt
> er-8\unit_value.log
  log type:  text
 opened on:  19 Jun 2024, 19:13:08

. 
. use Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\ca
> r_7990,clear

. 
. gen value=price*quan

. egen aquan=mean(quan), by(year)

. egen avalue=mean(value), by(year)

. gen uvalue=avalue/aquan

. collapse (mean) uvalue, by(year)

. list

     +-----------------+
     | year     uvalue |
     |-----------------|
  1. |   79   4945.603 |
  2. |   80   5174.757 |
  3. |   81   6210.741 |
  4. |   82   6834.219 |
  5. |   83   7069.203 |
     |-----------------|
  6. |   84   7518.311 |
  7. |   85   8153.146 |
  8. |   86   9391.989 |
  9. |   87   10396.91 |
 10. |   88    10840.6 |
     |-----------------|
 11. |   89   10492.76 |
 12. |   90   11112.68 |
     +-----------------+

. clear

. 
. use Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\tr
> uck_7990,clear

. gen value=price*quan

. egen aquan=mean(quan), by(year)

. egen avalue=mean(value), by(year)

. gen uvalue=avalue/aquan
(45 missing values generated)

. collapse (mean) uvalue, by(year)

. list

     +-----------------+
     | year     uvalue |
     |-----------------|
  1. |   79   4794.177 |
  2. |   80   4937.291 |
  3. |   81   6313.539 |
  4. |   82   6426.264 |
  5. |   83   6134.027 |
     |-----------------|
  6. |   84   6246.728 |
  7. |   85   6249.927 |
  8. |   86          . |
  9. |   87          . |
 10. |   88          . |
     |-----------------|
 11. |   89          . |
 12. |   90          . |
     +-----------------+

. clear

. 
. log close
      name:  <unnamed>
       log:  Z:\home\pacha\github\advanced-international-trade\first-edition\Chapt
> er-8\unit_value.log
  log type:  text
 closed on:  19 Jun 2024, 19:13:10
----------------------------------------------------------------------------------

. exit

end of do-file
```

### My code

#### pindex_c.do

```{r ch8_ex1a}
# Packages ----

library(archive)
library(haven)
library(dplyr)
library(tidyr)

# Extract ----

fzip <- "first-edition/Chapter-8.zip"
dout <- gsub("\\.zip$", "", fzip)

if (!dir.exists(dout)) {
  archive_extract(fzip, dir = dout)
}

# Read and transform ----

fout <- paste0(dout, "/feenstra_88.rds")

if (!file.exists(fout)) {
  feenstra_88 <- list(
    car_7990 = read_dta(paste0(dout, "/car_7990.dta")),
    truck_7990 = read_dta(paste0(dout, "/truck_7990.dta"))
  )

  saveRDS(feenstra_88, fout)
} else {
  feenstra_88 <- readRDS(fout)
}

car_7990 <- feenstra_88$car_7990 %>%
  select(year, model, type, price, quan) %>%
  arrange(year, model)

car_80 <- car_7990 %>%
  filter(year == 80) %>%
  select(model, type, price, quan) %>%
  rename(price_80 = price, quan_80 = quan)

car_7990 <- car_7990 %>%
  inner_join(car_80) %>%
  group_by(year) %>%
  mutate(
    value_80 = sum(price_80 * quan_80),
    value_cp = sum(price * quan_80)
  ) %>%
  ungroup() %>%
  mutate(lasp = value_cp / value_80)

car_7990 <- car_7990 %>%
  group_by(year) %>%
  mutate(
    value_c = sum(price * quan),
    value_cq = sum(price_80 * quan)
  ) %>%
  ungroup() %>%
  mutate(pasp = value_c / value_cq)

car_7990 %>%
  mutate(pindex = sqrt(lasp * pasp)) %>%
  group_by(year) %>%
  summarise(pindex = mean(pindex))
```

#### pindex_t.do

```{r ch8_ex1b}
truck_7990 <- feenstra_88$truck_7990 %>%
  select(year, model, type, price, quan) %>%
  arrange(year, model)

truck_80 <- truck_7990 %>%
  filter(year == 80) %>%
  select(model, type, price, quan) %>%
  rename(price_80 = price, quan_80 = quan)

truck_7990 <- truck_7990 %>%
  inner_join(truck_80) %>%
  group_by(year) %>%
  mutate(
    value_80 = sum(price_80 * quan_80),
    value_cp = sum(price * quan_80)
  ) %>%
  ungroup() %>%
  mutate(lasp = value_cp / value_80)

truck_7990 <- truck_7990 %>%
  group_by(year) %>%
  mutate(
    value_c = sum(price * quan),
    value_cq = sum(price_80 * quan)
  ) %>%
  ungroup() %>%
  mutate(pasp = value_c / value_cq)

truck_7990 %>%
  mutate(pindex = sqrt(lasp * pasp)) %>%
  group_by(year) %>%
  summarise(pindex = mean(pindex))
```

#### unit_value.do

```{r ch8_ex1c}
car_7990 <- feenstra_88$car_7990 %>%
  mutate(value = price * quan) %>%
  group_by(year) %>%
  mutate(
    aquan = mean(quan),
    avalue = mean(value),
    uvalue = avalue / aquan
  )

truck_7990 <- feenstra_88$truck_7990 %>%
  mutate(value = price * quan) %>%
  group_by(year) %>%
  mutate(
    aquan = mean(quan),
    avalue = mean(value),
    uvalue = avalue / aquan
  )

car_7990 %>%
  group_by(year) %>%
  summarise(uvalue = mean(uvalue))

truck_7990 %>%
  group_by(year) %>%
  summarise(uvalue = mean(uvalue))
```

## Exercise 2

Run the program `car_reg.do` to reproduce the column (1) in Table 8.4, and the program `truck_reg.do` to reproduce column (2). What weights are being used in the regression, and how does this affect the results?

### Feenstra's code

#### car_reg.do

```stata

clear
capture log close
log using Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\car_reg.log,replace

use Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\car_7990,clear
drop if year>=86

tab year, gen(yd)

program define nlcar
version 7.0
if "`1'"=="?"{
global S_1 "a3 a4 a5 a6 a7 b2 b3 b4 b5 b6 b7 c1 c2 c3 c4 c5 c6 c7 c8"
global a3=1
global a4=1
global a5=1
global a6=1
global a7=1
global b2=.1
global b3=.1
global b4=.1
global b5=.1
global b6=.1
global b7=.1
global c1=.1
global c2=.1
global c3=.1
global c4=.1
global c5=.1
global c6=.1
global c7=.1
global c8=.1
exit
}
replace `1'=$a3*yd3+$a4*yd4+$a5*yd5+$a6*yd6+$a7*yd7/*
*/+exp($b2*yd2+$b3*yd3+$b4*yd4+$b5*yd5+$b6*yd6+$b7*yd7/*
*/+$c1*wght+$c2*wdth+$c3*hght+$c4*hp+$c5*tran+$c6*ps+$c7*ac+$c8)

end

nl car price

gen winv=1/exp(_b[b2]*yd2+_b[b3]*yd3+_b[b4]*yd4+_b[b5]*yd5+_b[b6]*yd6+_b[b7]*yd7/*
*/+_b[c1]*wght+_b[c2]*wdth+_b[c3]*hght+_b[c4]*hp+_b[c5]*tran+_b[c6]*ps+_b[c7]*ac+_b[c8])

gen nprice=price*winv
gen nyd3=yd3*winv
gen nyd4=yd4*winv
gen nyd5=yd5*winv
gen nyd6=yd6*winv
gen nyd7=yd7*winv

program define nlncar
	version 7.0
	if "`1'"=="?"{
		global S_1 "a3 a4 a5 a6 a7 b2 b3 b4 b5 b6 b7 c1 c2 c3 c4 c5 c6 c7 c8"
		global a3=1
		global a4=1
		global a5=1	
		global a6=1
		global a7=1
		global b2=.1	
		global b3=.1
		global b4=.1
		global b5=.1
		global b6=.1	
		global b7=.1
		global c1=.1
		global c2=.1
		global c3=.1
		global c4=.1
		global c5=.1
		global c6=.1
		global c7=.1
		global c8=.1
		exit
	}
	replace `1'=$a3*nyd3+$a4*nyd4+$a5*nyd5+$a6*nyd6+$a7*nyd7/*
*/+winv*exp($b2*yd2+$b3*yd3+$b4*yd4+$b5*yd5+$b6*yd6+$b7*yd7/*
*/+$c1*wght+$c2*wdth+$c3*hght+$c4*hp+$c5*tran+$c6*ps+$c7*ac+$c8)

end

nl ncar nprice
clear
program drop _all
log close
exit
```

Output:

```stata
. clear

. capture log close

. log using Z:\home\pacha\github\advanced-international-trade\first-edition\Chapte
> r-8\car_reg.log,replace
(note: file Z:\home\pacha\github\advanced-international-trade\first-edition\Chapte
> r-8\car_reg.log not found)
----------------------------------------------------------------------------------
      name:  <unnamed>
       log:  Z:\home\pacha\github\advanced-international-trade\first-edition\Chapt
> er-8\car_reg.log
  log type:  text
 opened on:  19 Jun 2024, 19:28:58

. 
. use Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\ca
> r_7990,clear

. drop if year>=86
(105 observations deleted)

. 
. tab year, gen(yd)

       year |      Freq.     Percent        Cum.
------------+-----------------------------------
         79 |         21       11.73       11.73
         80 |         24       13.41       25.14
         81 |         24       13.41       38.55
         82 |         24       13.41       51.96
         83 |         26       14.53       66.48
         84 |         29       16.20       82.68
         85 |         31       17.32      100.00
------------+-----------------------------------
      Total |        179      100.00

. 
. program define nlcar
  1. version 7.0
  2. if "`1'"=="?"{
  3. global S_1 "a3 a4 a5 a6 a7 b2 b3 b4 b5 b6 b7 c1 c2 c3 c4 c5 c6 c7 c8"
  4. global a3=1
  5. global a4=1
  6. global a5=1
  7. global a6=1
  8. global a7=1
  9. global b2=.1
 10. global b3=.1
 11. global b4=.1
 12. global b5=.1
 13. global b6=.1
 14. global b7=.1
 15. global c1=.1
 16. global c2=.1
 17. global c3=.1
 18. global c4=.1
 19. global c5=.1
 20. global c6=.1
 21. global c7=.1
 22. global c8=.1
 23. exit
 24. }
 25. replace `1'=$a3*yd3+$a4*yd4+$a5*yd5+$a6*yd6+$a7*yd7/*
> */+exp($b2*yd2+$b3*yd3+$b4*yd4+$b5*yd5+$b6*yd6+$b7*yd7/*
> */+$c1*wght+$c2*wdth+$c3*hght+$c4*hp+$c5*tran+$c6*ps+$c7*ac+$c8)
 26. 
. end

. 
. nl car price
(obs = 179)

Iteration 0:   residual SS =  1.16e+10
Iteration 1:   residual SS =  1.07e+10
Iteration 2:   residual SS =  6.78e+09
Iteration 3:   residual SS =  8.75e+08
Iteration 4:   residual SS =  1.53e+08
Iteration 5:   residual SS =  8.42e+07
Iteration 6:   residual SS =  8.39e+07
Iteration 7:   residual SS =  8.39e+07
Iteration 8:   residual SS =  8.39e+07
Iteration 9:   residual SS =  8.39e+07
Iteration 10:  residual SS =  8.39e+07

      Source |       SS       df       MS            Number of obs =       179
-------------+------------------------------         F( 19,   160) =   1158.52
       Model |  1.1541e+10    19   607414473         Prob > F      =    0.0000
    Residual |    83888568   160   524303.55         R-squared     =    0.9928
-------------+------------------------------         Adj R-squared =    0.9919
       Total |  1.1625e+10   179  64942813.2         Root MSE      =  724.0881
                                                     Res. dev.     =  2845.293
(car)
------------------------------------------------------------------------------
       price |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          a3 |  -294.7452   723.3322    -0.41   0.684    -1723.255    1133.765
          a4 |  -304.9631   714.5517    -0.43   0.670    -1716.132    1106.206
          a5 |  -137.3977   700.8446    -0.20   0.845    -1521.497    1246.701
          a6 |   72.87527   695.4052     0.10   0.917    -1300.482    1446.232
          a7 |  -103.4007   742.9475    -0.14   0.889    -1570.649    1363.848
          b2 |   .0099678   .0362994     0.27   0.784      -.06172    .0816555
          b3 |   .1522578   .1022847     1.49   0.139    -.0497444      .35426
          b4 |   .1899382   .0965319     1.97   0.051    -.0007027    .3805792
          b5 |   .1540892   .0959124     1.61   0.110    -.0353283    .3435068
          b6 |    .172972   .0944704     1.83   0.069    -.0135977    .3595417
          b7 |   .2274326   .0945034     2.41   0.017     .0407977    .4140675
          c1 |  -.0007315   .1021984    -0.01   0.994    -.2025632    .2011002
          c2 |   .3681958   .1019742     3.61   0.000     .1668067    .5695849
          c3 |  -.1431584   .0519385    -2.76   0.007    -.2457317    -.040585
          c4 |   .6070451   .0665196     9.13   0.000     .4756756    .7384147
          c5 |   .1315757   .0264479     4.97   0.000     .0793437    .1838078
          c6 |   .0515819   .0218212     2.36   0.019     .0084872    .0946766
          c7 |   .1635465   .0228493     7.16   0.000     .1184213    .2086717
          c8 |    6.73024   .5719055    11.77   0.000     5.600783    7.859697
------------------------------------------------------------------------------
 (SEs, P values, CIs, and correlations are asymptotic approximations)

. 
. gen winv=1/exp(_b[b2]*yd2+_b[b3]*yd3+_b[b4]*yd4+_b[b5]*yd5+_b[b6]*yd6+_b[b7]*yd7
> /*
> */+_b[c1]*wght+_b[c2]*wdth+_b[c3]*hght+_b[c4]*hp+_b[c5]*tran+_b[c6]*ps+_b[c7]*ac
> +_b[c8])

. 
. gen nprice=price*winv

. gen nyd3=yd3*winv

. gen nyd4=yd4*winv

. gen nyd5=yd5*winv

. gen nyd6=yd6*winv

. gen nyd7=yd7*winv

. 
. program define nlncar
  1.         version 7.0
  2.         if "`1'"=="?"{
  3.                 global S_1 "a3 a4 a5 a6 a7 b2 b3 b4 b5 b6 b7 c1 c2 c3 c4 c5 c
> 6 c7 c8"
  4.                 global a3=1
  5.                 global a4=1
  6.                 global a5=1     
  7.                 global a6=1
  8.                 global a7=1
  9.                 global b2=.1    
 10.                 global b3=.1
 11.                 global b4=.1
 12.                 global b5=.1
 13.                 global b6=.1    
 14.                 global b7=.1
 15.                 global c1=.1
 16.                 global c2=.1
 17.                 global c3=.1
 18.                 global c4=.1
 19.                 global c5=.1
 20.                 global c6=.1
 21.                 global c7=.1
 22.                 global c8=.1
 23.                 exit
 24.         }
 25.         replace `1'=$a3*nyd3+$a4*nyd4+$a5*nyd5+$a6*nyd6+$a7*nyd7/*
> */+winv*exp($b2*yd2+$b3*yd3+$b4*yd4+$b5*yd5+$b6*yd6+$b7*yd7/*
> */+$c1*wght+$c2*wdth+$c3*hght+$c4*hp+$c5*tran+$c6*ps+$c7*ac+$c8)
 26. 
. end

. 
. nl ncar nprice
(obs = 179)

Iteration 0:   residual SS =  174.4452
Iteration 1:   residual SS =  166.1567
Iteration 2:   residual SS =   147.536
Iteration 3:   residual SS =  34.90292
Iteration 4:   residual SS =   32.7705
Iteration 5:   residual SS =  30.98977
Iteration 6:   residual SS =  20.55948
Iteration 7:   residual SS =  2.116144
Iteration 8:   residual SS =  1.674745
Iteration 9:   residual SS =  1.672071
Iteration 10:  residual SS =  1.672068
Iteration 11:  residual SS =  1.672068
Iteration 12:  residual SS =  1.672068
Iteration 13:  residual SS =  1.672068
Iteration 14:  residual SS =  1.672068

      Source |       SS       df       MS            Number of obs =       179
-------------+------------------------------         F( 19,   160) =    871.41
       Model |  173.025768    19  9.10661939         Prob > F      =    0.0000
    Residual |  1.67206775   160  .010450423         R-squared     =    0.9904
-------------+------------------------------         Adj R-squared =    0.9893
       Total |  174.697836   179  .975965565         Root MSE      =  .1022273
                                                     Res. dev.     = -328.5451
(ncar)
------------------------------------------------------------------------------
      nprice |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          a3 |   410.4256   619.1744     0.66   0.508    -812.3829    1633.234
          a4 |    378.927   650.2562     0.58   0.561     -905.265    1663.119
          a5 |   770.6115   601.2054     1.28   0.202    -416.7099    1957.933
          a6 |   624.3817   618.9925     1.01   0.315    -598.0676    1846.831
          a7 |  -122.9148   719.4492    -0.17   0.865    -1543.756    1297.927
          b2 |   .0089535   .0309918     0.29   0.773    -.0522522    .0701592
          b3 |   .0474345   .1093808     0.43   0.665    -.1685818    .2634509
          b4 |   .0938457    .108274     0.87   0.387    -.1199848    .3076761
          b5 |   .0195742   .1052628     0.19   0.853    -.1883094    .2274579
          b6 |   .0918745   .1019572     0.90   0.369     -.109481      .29323
          b7 |   .2189293   .1012639     2.16   0.032      .018943    .4189156
          c1 |   .0254744   .1207686     0.21   0.833    -.2130317    .2639805
          c2 |   .3565755   .1083292     3.29   0.001      .142636     .570515
          c3 |  -.0630705   .0554954    -1.14   0.257    -.1726685    .0465275
          c4 |   .6899452   .0852231     8.10   0.000      .521638    .8582524
          c5 |   .1428588   .0244762     5.84   0.000     .0945207    .1911968
          c6 |   .0581011   .0272835     2.13   0.035     .0042188    .1119834
          c7 |   .1473354    .033027     4.46   0.000     .0821103    .2125606
          c8 |   6.328371   .5830815    10.85   0.000     5.176842    7.479899
------------------------------------------------------------------------------
 (SEs, P values, CIs, and correlations are asymptotic approximations)

. clear

. program drop _all

. log close
      name:  <unnamed>
       log:  Z:\home\pacha\github\advanced-international-trade\first-edition\Chapt
> er-8\car_reg.log
  log type:  text
 closed on:  19 Jun 2024, 19:29:06
----------------------------------------------------------------------------------

. exit

end of do-file
```

### My code

#### truck_reg.do

```{r ch8_ex2a}
library(minpack.lm) # for nlsLM()

car_7990 <- feenstra_88$car_7990 %>%
  filter(year < 86) %>%
  mutate(yd = factor(year)) %>%
  group_by(yd) %>%
  mutate(id = row_number()) %>%
  ungroup()

car_7990 %>%
  group_by(yd) %>%
  summarise(freq = n()) %>%
  ungroup() %>%
  mutate(
    percent = freq / sum(freq) * 100,
    cum = cumsum(percent)
  )

# expand the yd variable to 0/1 columns
# in R, you cannot multiply a factor/categorical variable

car_7990 <- car_7990 %>%
  mutate(yd_ind = as.integer(yd)) %>%
  mutate(yd_ind = as.factor(yd_ind - min(yd_ind) + 1))

car_7990_dummy <- model.matrix(~ yd_ind - 1, data = car_7990)
colnames(car_7990_dummy) <- gsub("_ind", "", colnames(car_7990_dummy))

car_7990 <- car_7990 %>%
  bind_cols(as.data.frame(car_7990_dummy))

# fit the non-linear specification with initial values
# nls() fails, so I use nlsLM() that implements the Levenberg-Marquardt
# algorithm

initial_values <- list(
  a3 = 1, a4 = 1, a5 = 1, a6 = 1, a7 = 1,
  b2 = 0.1, b3 = 0.1, b4 = 0.1, b5 = 0.1, b6 = 0.1, b7 = 0.1,
  c1 = 0.1, c2 = 0.1, c3 = 0.1, c4 = 0.1, c5 = 0.1, c6 = 0.1, c7 = 0.1,
  c8 = 0.1
)

fit <- nlsLM(
  price ~ a3 * yd3 + a4 * yd4 + a5 * yd5 + a6 * yd6 + a7 * yd7 +
    exp(
      b2 * yd2 + b3 * yd3 + b4 * yd4 + b5 * yd5 + b6 * yd6 + b7 * yd7 +
        c1 * wght + c2 * wdth + c3 * hght + c4 * hp + c5 * tran + c6 * ps +
        c7 * ac + c8
    ),
  data = car_7990,
  start = initial_values
)

summary(fit)

fit_coef <- coef(fit)

car_7990 <- car_7990 %>%
  mutate(
    winv = 1 / exp(fit_coef["b2"] * yd2 + fit_coef["b3"] * yd3 +
      fit_coef["b4"] * yd4 + fit_coef["b5"] * yd5 + fit_coef["b6"] * yd6 +
      fit_coef["b7"] * yd7 + fit_coef["c1"] * wght + fit_coef["c2"] * wdth +
      fit_coef["c3"] * hght + fit_coef["c4"] * hp + fit_coef["c5"] * tran +
      fit_coef["c6"] * ps + fit_coef["c7"] * ac + fit_coef["c8"]),
    nprice = price * winv,
    nyd3 = yd3 * winv,
    nyd4 = yd4 * winv,
    nyd5 = yd5 * winv,
    nyd6 = yd6 * winv,
    nyd7 = yd7 * winv
  )

fit2 <- nlsLM(
  nprice ~ a3 * nyd3 + a4 * nyd4 + a5 * nyd5 + a6 * nyd6 + a7 * nyd7 +
    winv * exp(
      b2 * yd2 + b3 * yd3 + b4 * yd4 + b5 * yd5 + b6 * yd6 + b7 * yd7 +
        c1 * wght + c2 * wdth + c3 * hght + c4 * hp + c5 * tran + c6 * ps +
        c7 * ac + c8
    ),
  data = car_7990,
  start = initial_values,
  # increase the number of iterations to avoid convergence issues
  control = nls.lm.control(maxiter = 100)
)

summary(fit2)
```

## Exercise 3

Pooling car and truck data, run `system_7985.do` to reproduce columns (3) and (4) in Table 8.4 with the constraints specified in equation (8.22). How are these constraints built into the program for the nonlinear regression?

### Feenstra's code

```stata
capture log close
log using Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\system_7985.log,replace

use Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\truck_7990,clear
gen ve=2
rename wdth wdth_t
rename hght hght_t
rename weight wght_t
rename hp hp_t
rename four four_t
rename tran tran_t
rename ps ps_t
rename ac ac_t
drop if year>=86

save Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\truck_temp,replace

use Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\car_7990,clear
drop if year>=86
gen ve=1
rename wdth wdth_c
rename hght hght_c
rename wght wght_c
rename hp hp_c
rename four four_c
rename tran tran_c
rename ps ps_c
rename ac ac_c

append using Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\truck_temp

replace wdth_c=0 if wdth_c==.
replace hght_c=0 if hght_c==.
replace wght_c=0 if wght_c==.
replace hp_c=0 if hp_c==.
replace four_c=0 if four_c==.
replace tran_c=0 if tran_c==.
replace ps_c=0 if ps_c==.
replace ac_c=0 if ac_c==.
replace wdth_t=0 if wdth_t==.
replace hght_t=0 if hght_t==.
replace wght_t=0 if wght_t==.
replace hp_t=0 if hp_t==.
replace four_t=0 if four_t==.
replace tran_t=0 if tran_t==.
replace ps_t=0 if ps_t==.
replace ac_t=0 if ac_t==.

tab year, gen(yd)

gen cyd2=yd2
gen tyd2=yd2
replace cyd2=0 if type=="JT"
replace tyd2=0 if type~="JT"

gen cyd3=yd3
gen tyd3=yd3
replace cyd3=0 if type=="JT"
replace tyd3=0 if type~="JT"

gen cyd4=yd4
gen tyd4=yd4
replace cyd4=0 if type=="JT"
replace tyd4=0 if type~="JT"

gen cyd5=yd5
gen tyd5=yd5
replace cyd5=0 if type=="JT"
replace tyd5=0 if type~="JT"

gen cyd6=yd6
gen tyd6=yd6
replace cyd6=0 if type=="JT"
replace tyd6=0 if type~="JT"

gen cyd7=yd7
gen tyd7=yd7
replace cyd7=0 if type=="JT"
replace tyd7=0 if type~="JT"

program define nlct_1
version 7.0
if "`1'"=="?"{
global S_1 "a3 a4 a5 a6 a7 b2 b3 b4 b5 b6 b7 c1 c2 c3 c4 c5 c6 c7 c8 c9 d1 d2 d3 d4 d5 d6 d7 d8"
global a3=1
global a4=1
global a5=1
global a6=1
global a7=1
global b2=.1
global b3=.1
global b4=.1
global b5=.1
global b6=.1
global b7=.1
global c1=.1
global c2=.1
global c3=.1
global c4=.1
global c5=.1
global c6=.1
global c7=.1
global c8=.1
global c9=.1
global d1=.1
global d2=.1
global d3=.1
global d4=.1
global d5=.1
global d6=.1
global d7=.1
global d8=.1
exit
}

replace `1'=$a3*cyd3+$a4*cyd4+$a5*cyd5+$a6*cyd6+$a7*cyd7/*
*/+exp($b2*cyd2+$b3*cyd3+$b4*cyd4+$b5*cyd5+$b6*cyd6+$b7*cyd7/*
*/+$c1*wght_c+$c2*wdth_c+$c3*hght_c+$c4*hp_c+$c5*tran_c+$c6*ps_c+$c7*ac_c/*
*/+$c8)+exp($b2*tyd2+($b3+.16)*tyd3+($b4+.16)*tyd4+($b5+.16)*tyd5+($b6+.16)*tyd6+$c9*tyd7/*
*/+$d1*wght_t+$d2*wdth_t+$d3*hght_t+$d4*hp_t+$d5*tran_t+$d6*ps_t+$d7*four_t+$d8)

end

nl ct_1 price

gen winv=1/exp(_b[b2]*cyd2+_b[b3]*cyd3+_b[b4]*cyd4+_b[b5]*cyd5+_b[b6]*cyd6+_b[b7]*cyd7/*
*/+_b[c1]*wght_c+_b[c2]*wdth_c+_b[c3]*hght_c+_b[c4]*hp_c+_b[c5]*tran_c+_b[c6]*ps_c/*
*/+_b[c7]*ac_c+_b[c8])

replace winv=1/exp((_b[b2]+0.16)*tyd2+(_b[b3]+.16)*tyd3+(_b[b4]+.16)*tyd4/*
*/+(_b[b5]+.16)*tyd5+(_b[b6]+.16)*tyd6+_b[c9]*tyd7/*
*/+_b[d1]*wght_t+_b[d2]*wdth_t+_b[d3]*hght_t+_b[d4]*hp_t/*
*/+_b[d5]*tran_t+_b[d6]*ps_t+_b[d7]*four_t+_b[d8]) if ve==2

gen nprice=price*winv


program define nlct_2
version 7.0
if "`1'"=="?"{
global S_1 "a3 a4 a5 a6 a7 b2 b3 b4 b5 b6 b7 c1 c2 c3 c4 c5 c6 c7 c8 c9 d1 d2 d3 d4 d5 d6 d7 d8"
global a3=1
global a4=1
global a5=1
global a6=1
global a7=1
global b2=.1
global b3=.1
global b4=.1
global b5=.1
global b6=.1
global b7=.1
global c1=.1
global c2=.1
global c3=.1
global c4=.1
global c5=.1
global c6=.1
global c7=.1
global c8=.1
global c9=.1
global d1=.1
global d2=.1
global d3=.1
global d4=.1
global d5=.1
global d6=.1
global d7=.1
global d8=.1
exit
}
replace `1'=winv*($a3*cyd3+$a4*cyd4+$a5*cyd5+$a6*cyd6+$a7*cyd7)/*
*/+winv*exp($b2*cyd2+$b3*cyd3+$b4*cyd4+$b5*cyd5+$b6*cyd6+$b7*cyd7/*
*/+$c1*wght_c+$c2*wdth_c+$c3*hght_c+$c4*hp_c+$c5*tran_c+$c6*ps_c+$c7*ac_c/*
*/+$c8)+winv*exp($b2*tyd2+($b3+.16)*tyd3+($b4+.16)*tyd4+($b5+.16)*tyd5+($b6+.16)*tyd6+$c9*tyd7/*
*/+$d1*wght_t+$d2*wdth_t+$d3*hght_t+$d4*hp_t+$d5*tran_t+$d6*ps_t+$d7*four_t+$d8)

end

nl ct_2 nprice

program drop _all
log close
exit
```

Output:

```stata
. capture log close

. log using Z:\home\pacha\github\advanced-international-trade\first-edition\Chapte
> r-8\system_7985.log,replace
----------------------------------------------------------------------------------
      name:  <unnamed>
       log:  Z:\home\pacha\github\advanced-international-trade\first-edition\Chapt
> er-8\system_7985.log
  log type:  text
 opened on:  19 Jun 2024, 21:59:23

. 
. use Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\tr
> uck_7990,clear

. gen ve=2

. rename wdth wdth_t

. rename hght hght_t

. rename weight wght_t

. rename hp hp_t

. rename four four_t

. rename tran tran_t

. rename ps ps_t

. rename ac ac_t

. drop if year>=86
(45 observations deleted)

. 
. save Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\t
> ruck_temp,replace
file Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\tru
> ck_temp.dta saved

. 
. use Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\ca
> r_7990,clear

. drop if year>=86
(105 observations deleted)

. gen ve=1

. rename wdth wdth_c

. rename hght hght_c

. rename wght wght_c

. rename hp hp_c

. rename four four_c

. rename tran tran_c

. rename ps ps_c

. rename ac ac_c

. 
. append using Z:\home\pacha\github\advanced-international-trade\first-edition\Cha
> pter-8\truck_temp

. 
. replace wdth_c=0 if wdth_c==.
(75 real changes made)

. replace hght_c=0 if hght_c==.
(75 real changes made)

. replace wght_c=0 if wght_c==.
(75 real changes made)

. replace hp_c=0 if hp_c==.
(75 real changes made)

. replace four_c=0 if four_c==.
(75 real changes made)

. replace tran_c=0 if tran_c==.
(75 real changes made)

. replace ps_c=0 if ps_c==.
(75 real changes made)

. replace ac_c=0 if ac_c==.
(75 real changes made)

. replace wdth_t=0 if wdth_t==.
(179 real changes made)

. replace hght_t=0 if hght_t==.
(179 real changes made)

. replace wght_t=0 if wght_t==.
(179 real changes made)

. replace hp_t=0 if hp_t==.
(179 real changes made)

. replace four_t=0 if four_t==.
(179 real changes made)

. replace tran_t=0 if tran_t==.
(179 real changes made)

. replace ps_t=0 if ps_t==.
(179 real changes made)

. replace ac_t=0 if ac_t==.
(179 real changes made)

. 
. tab year, gen(yd)

       year |      Freq.     Percent        Cum.
------------+-----------------------------------
         79 |         31       12.20       12.20
         80 |         34       13.39       25.59
         81 |         35       13.78       39.37
         82 |         35       13.78       53.15
         83 |         36       14.17       67.32
         84 |         40       15.75       83.07
         85 |         43       16.93      100.00
------------+-----------------------------------
      Total |        254      100.00

. 
. gen cyd2=yd2

. gen tyd2=yd2

. replace cyd2=0 if type=="JT"
(8 real changes made)

. replace tyd2=0 if type~="JT"
(26 real changes made)

. 
. gen cyd3=yd3

. gen tyd3=yd3

. replace cyd3=0 if type=="JT"
(9 real changes made)

. replace tyd3=0 if type~="JT"
(26 real changes made)

. 
. gen cyd4=yd4

. gen tyd4=yd4

. replace cyd4=0 if type=="JT"
(9 real changes made)

. replace tyd4=0 if type~="JT"
(26 real changes made)

. 
. gen cyd5=yd5

. gen tyd5=yd5

. replace cyd5=0 if type=="JT"
(7 real changes made)

. replace tyd5=0 if type~="JT"
(29 real changes made)

. 
. gen cyd6=yd6

. gen tyd6=yd6

. replace cyd6=0 if type=="JT"
(7 real changes made)

. replace tyd6=0 if type~="JT"
(33 real changes made)

. 
. gen cyd7=yd7

. gen tyd7=yd7

. replace cyd7=0 if type=="JT"
(7 real changes made)

. replace tyd7=0 if type~="JT"
(36 real changes made)

. 
. program define nlct_1
  1. version 7.0
  2. if "`1'"=="?"{
  3. global S_1 "a3 a4 a5 a6 a7 b2 b3 b4 b5 b6 b7 c1 c2 c3 c4 c5 c6 c7 c8 c9 d1 d2
>  d3 d4 d5 d6 d7 d8"
  4. global a3=1
  5. global a4=1
  6. global a5=1
  7. global a6=1
  8. global a7=1
  9. global b2=.1
 10. global b3=.1
 11. global b4=.1
 12. global b5=.1
 13. global b6=.1
 14. global b7=.1
 15. global c1=.1
 16. global c2=.1
 17. global c3=.1
 18. global c4=.1
 19. global c5=.1
 20. global c6=.1
 21. global c7=.1
 22. global c8=.1
 23. global c9=.1
 24. global d1=.1
 25. global d2=.1
 26. global d3=.1
 27. global d4=.1
 28. global d5=.1
 29. global d6=.1
 30. global d7=.1
 31. global d8=.1
 32. exit
 33. }
 34. 
. replace `1'=$a3*cyd3+$a4*cyd4+$a5*cyd5+$a6*cyd6+$a7*cyd7/*
> */+exp($b2*cyd2+$b3*cyd3+$b4*cyd4+$b5*cyd5+$b6*cyd6+$b7*cyd7/*
> */+$c1*wght_c+$c2*wdth_c+$c3*hght_c+$c4*hp_c+$c5*tran_c+$c6*ps_c+$c7*ac_c/*
> */+$c8)+exp($b2*tyd2+($b3+.16)*tyd3+($b4+.16)*tyd4+($b5+.16)*tyd5+($b6+.16)*tyd6
> +$c9*tyd7/*
> */+$d1*wght_t+$d2*wdth_t+$d3*hght_t+$d4*hp_t+$d5*tran_t+$d6*ps_t+$d7*four_t+$d8)
 35. 
. end

. 
. nl ct_1 price
(obs = 254)

Iteration 0:   residual SS =  1.51e+10
Iteration 1:   residual SS =  8.64e+09
Iteration 2:   residual SS =  6.91e+09
Iteration 3:   residual SS =  2.58e+09
Iteration 4:   residual SS =  6.90e+08
Iteration 5:   residual SS =  3.66e+08
Iteration 6:   residual SS =  1.27e+08
Iteration 7:   residual SS =  1.23e+08
Iteration 8:   residual SS =  1.02e+08
Iteration 9:   residual SS =  1.02e+08
Iteration 10:  residual SS =  1.01e+08
Iteration 11:  residual SS =  1.01e+08
Iteration 12:  residual SS =  1.01e+08
Iteration 13:  residual SS =  1.01e+08
Iteration 14:  residual SS =  1.01e+08
Iteration 15:  residual SS =  1.01e+08
Iteration 16:  residual SS =  1.01e+08
Iteration 17:  residual SS =  1.01e+08
Iteration 18:  residual SS =  1.01e+08
Iteration 19:  residual SS =  1.01e+08
Iteration 20:  residual SS =  1.01e+08
Iteration 21:  residual SS =  1.01e+08
Iteration 22:  residual SS =  1.01e+08
Iteration 23:  residual SS =  1.01e+08
Iteration 24:  residual SS =  1.01e+08
Iteration 25:  residual SS =  1.01e+08

      Source |       SS       df       MS            Number of obs =       254
-------------+------------------------------         F( 28,   226) =   1210.09
       Model |  1.5069e+10    28   538194036         Prob > F      =    0.0000
    Residual |   100515047   226  444756.844         R-squared     =    0.9934
-------------+------------------------------         Adj R-squared =    0.9926
       Total |  1.5170e+10   254  59724204.9         Root MSE      =  666.9009
                                                     Res. dev.     =  3994.496
(ct_1)
------------------------------------------------------------------------------
       price |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          a3 |   254.0918   317.1045     0.80   0.424    -370.7678    878.9513
          a4 |   505.1058   325.6388     1.55   0.122    -136.5708    1146.782
          a5 |   708.9466   317.3172     2.23   0.026       83.668    1334.225
          a6 |   1082.054   322.4415     3.36   0.001     446.6773     1717.43
          a7 |   1063.014   373.9703     2.84   0.005     326.0995    1799.929
          b2 |   .0040633   .0329008     0.12   0.902    -.0607683    .0688948
          b3 |   .0756038    .049061     1.54   0.125    -.0210716    .1722792
          b4 |   .0828575   .0490467     1.69   0.093    -.0137897    .1795048
          b5 |   .0327776    .050707     0.65   0.519    -.0671415    .1326967
          b6 |   .0351224   .0514768     0.68   0.496    -.0663135    .1365582
          b7 |   .0825554   .0557608     1.48   0.140    -.0273221    .1924329
          c1 |   .0326037   .1117298     0.29   0.771    -.1875618    .2527691
          c2 |    .385946   .1204171     3.21   0.002     .1486621    .6232299
          c3 |  -.1929238   .0568197    -3.40   0.001     -.304888   -.0809596
          c4 |    .715212   .0736084     9.72   0.000     .5701655    .8602585
          c5 |   .1578585     .03381     4.67   0.000     .0912354    .2244816
          c6 |   .0641097   .0247061     2.59   0.010     .0154259    .1127934
          c7 |   .1829447   .0242773     7.54   0.000     .1351059    .2307836
          c8 |   6.599831   .7305317     9.03   0.000     5.160306    8.039356
          c9 |   .1171992   .0634238     1.85   0.066    -.0077785    .2421769
          d1 |   .4917133   .0795807     6.18   0.000     .3348983    .6485283
          d2 |   .2622177   .1757206     1.49   0.137    -.0840426    .6084779
          d3 |  -.0451278   .0677055    -0.67   0.506    -.1785426     .088287
          d4 |   .3030767   .1701249     1.78   0.076    -.0321571    .6383106
          d5 |   .0397822   .0362731     1.10   0.274    -.0316947     .111259
          d6 |   .0967659   .0501832     1.93   0.055    -.0021208    .1956526
          d7 |   .3052359   .0715711     4.26   0.000     .1642038     .446268
          d8 |   6.299805   .9622249     6.55   0.000     4.403726    8.195885
------------------------------------------------------------------------------
 (SEs, P values, CIs, and correlations are asymptotic approximations)

. 
. gen winv=1/exp(_b[b2]*cyd2+_b[b3]*cyd3+_b[b4]*cyd4+_b[b5]*cyd5+_b[b6]*cyd6+_b[b7
> ]*cyd7/*
> */+_b[c1]*wght_c+_b[c2]*wdth_c+_b[c3]*hght_c+_b[c4]*hp_c+_b[c5]*tran_c+_b[c6]*ps
> _c/*
> */+_b[c7]*ac_c+_b[c8])

. 
. replace winv=1/exp((_b[b2]+0.16)*tyd2+(_b[b3]+.16)*tyd3+(_b[b4]+.16)*tyd4/*
> */+(_b[b5]+.16)*tyd5+(_b[b6]+.16)*tyd6+_b[c9]*tyd7/*
> */+_b[d1]*wght_t+_b[d2]*wdth_t+_b[d3]*hght_t+_b[d4]*hp_t/*
> */+_b[d5]*tran_t+_b[d6]*ps_t+_b[d7]*four_t+_b[d8]) if ve==2
(75 real changes made)

. 
. gen nprice=price*winv

. 
. 
. program define nlct_2
  1. version 7.0
  2. if "`1'"=="?"{
  3. global S_1 "a3 a4 a5 a6 a7 b2 b3 b4 b5 b6 b7 c1 c2 c3 c4 c5 c6 c7 c8 c9 d1 d2
>  d3 d4 d5 d6 d7 d8"
  4. global a3=1
  5. global a4=1
  6. global a5=1
  7. global a6=1
  8. global a7=1
  9. global b2=.1
 10. global b3=.1
 11. global b4=.1
 12. global b5=.1
 13. global b6=.1
 14. global b7=.1
 15. global c1=.1
 16. global c2=.1
 17. global c3=.1
 18. global c4=.1
 19. global c5=.1
 20. global c6=.1
 21. global c7=.1
 22. global c8=.1
 23. global c9=.1
 24. global d1=.1
 25. global d2=.1
 26. global d3=.1
 27. global d4=.1
 28. global d5=.1
 29. global d6=.1
 30. global d7=.1
 31. global d8=.1
 32. exit
 33. }
 34. replace `1'=winv*($a3*cyd3+$a4*cyd4+$a5*cyd5+$a6*cyd6+$a7*cyd7)/*
> */+winv*exp($b2*cyd2+$b3*cyd3+$b4*cyd4+$b5*cyd5+$b6*cyd6+$b7*cyd7/*
> */+$c1*wght_c+$c2*wdth_c+$c3*hght_c+$c4*hp_c+$c5*tran_c+$c6*ps_c+$c7*ac_c/*
> */+$c8)+winv*exp($b2*tyd2+($b3+.16)*tyd3+($b4+.16)*tyd4+($b5+.16)*tyd5+($b6+.16)
> *tyd6+$c9*tyd7/*
> */+$d1*wght_t+$d2*wdth_t+$d3*hght_t+$d4*hp_t+$d5*tran_t+$d6*ps_t+$d7*four_t+$d8)
 35. 
. end

. 
. nl ct_2 nprice
(obs = 254)

Iteration 0:   residual SS =  353.5865
Iteration 1:   residual SS =   334.435
Iteration 2:   residual SS =  289.3018
Iteration 3:   residual SS =  133.5526
Iteration 4:   residual SS =   99.2393
Iteration 5:   residual SS =   13.6599
Iteration 6:   residual SS =  6.893439
Iteration 7:   residual SS =  5.473819
Iteration 8:   residual SS =  2.966103
Iteration 9:   residual SS =  2.957318
Iteration 10:  residual SS =  2.957298
Iteration 11:  residual SS =  2.957296
Iteration 12:  residual SS =  2.957296
Iteration 13:  residual SS =  2.957296
Iteration 14:  residual SS =  2.957295
Iteration 15:  residual SS =  2.957295
Iteration 16:  residual SS =  2.957295
Iteration 17:  residual SS =  2.957295
Iteration 18:  residual SS =  2.957295
Iteration 19:  residual SS =  2.957295
Iteration 20:  residual SS =  2.957295
Iteration 21:  residual SS =  2.957295

      Source |       SS       df       MS            Number of obs =       254
-------------+------------------------------         F( 28,   226) =    958.75
       Model |  351.277591    28  12.5456282         Prob > F      =    0.0000
    Residual |  2.95729549   226  .013085378         R-squared     =    0.9917
-------------+------------------------------         Adj R-squared =    0.9906
       Total |  354.234886   254  1.39462554         Root MSE      =  .1143913
                                                     Res. dev.     = -410.2562
(ct_2)
------------------------------------------------------------------------------
      nprice |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          a3 |   367.9829    239.059     1.54   0.125    -103.0867    839.0525
          a4 |    600.553   254.2261     2.36   0.019     99.59628     1101.51
          a5 |   887.9399   243.5428     3.65   0.000     408.0348    1367.845
          a6 |   1104.433   251.0245     4.40   0.000     609.7847     1599.08
          a7 |   855.7993   366.2444     2.34   0.020     134.1088     1577.49
          b2 |   .0130387   .0303131     0.43   0.668    -.0466937    .0727711
          b3 |   .0674477   .0425176     1.59   0.114     -.016334    .1512294
          b4 |   .0701234   .0441821     1.59   0.114    -.0169382     .157185
          b5 |  -.0005627   .0470779    -0.01   0.990    -.0933305    .0922051
          b6 |   .0179989   .0473905     0.38   0.704    -.0753848    .1113826
          b7 |   .1007712   .0641587     1.57   0.118    -.0256545    .2271969
          c1 |   .0492474   .1311096     0.38   0.708    -.2091061     .307601
          c2 |   .3908689   .1383663     2.82   0.005     .1182159     .663522
          c3 |  -.0618204   .0611492    -1.01   0.313    -.1823158     .058675
          c4 |   .8103277   .1038045     7.81   0.000     .6057792    1.014876
          c5 |   .1779391   .0355273     5.01   0.000     .1079319    .2479463
          c6 |   .0693687   .0304968     2.27   0.024     .0092743     .129463
          c7 |   .1567051   .0360384     4.35   0.000     .0856908    .2277193
          c8 |   5.839036   .8621144     6.77   0.000     4.140226    7.537847
          c9 |   .1059852   .0550545     1.93   0.055    -.0025007    .2144711
          d1 |   .4759918   .1172145     4.06   0.000     .2450187    .7069649
          d2 |   .2120021   .1419991     1.49   0.137    -.0678094    .4918136
          d3 |  -.0270369    .074052    -0.37   0.715    -.1729575    .1188837
          d4 |     .24435   .1516866     1.61   0.109    -.0545508    .5432508
          d5 |   .0530065   .0356148     1.49   0.138     -.017173     .123186
          d6 |   .0575178   .0639555     0.90   0.369    -.0685076    .1835431
          d7 |   .2971909   .0566882     5.24   0.000      .185486    .4088959
          d8 |   6.630805   .7652819     8.66   0.000     5.122804    8.138805
------------------------------------------------------------------------------
 (SEs, P values, CIs, and correlations are asymptotic approximations)

. 
. program drop _all

. log close
      name:  <unnamed>
       log:  Z:\home\pacha\github\advanced-international-trade\first-edition\Chapt
> er-8\system_7985.log
  log type:  text
 closed on:  19 Jun 2024, 21:59:28
----------------------------------------------------------------------------------

. exit

end of do-file
```

### My code

```{r ch8_ex3}
truck_7990 <- feenstra_88$truck_7990 %>%
  filter(year < 86) %>%
  mutate(ve = 2) %>%
  rename(
    wdth_t = wdth, hght_t = hght, wght_t = weight, hp_t = hp, four_t = four,
    tran_t = tran, ps_t = ps, ac_t = ac
  )

car_7990 <- feenstra_88$car_7990 %>%
  filter(year < 86) %>%
  mutate(ve = 1) %>%
  rename(
    wdth_c = wdth, hght_c = hght, wght_c = wght, hp_c = hp, four_c = four,
    tran_c = tran, ps_c = ps, ac_c = ac
  )

truck_7990 <- truck_7990 %>%
  bind_rows(car_7990) %>%
  mutate(
    wdth_c = ifelse(is.na(wdth_c), 0, wdth_c),
    hght_c = ifelse(is.na(hght_c), 0, hght_c),
    wght_c = ifelse(is.na(wght_c), 0, wght_c),
    hp_c = ifelse(is.na(hp_c), 0, hp_c),
    four_c = ifelse(is.na(four_c), 0, four_c),
    tran_c = ifelse(is.na(tran_c), 0, tran_c),
    ps_c = ifelse(is.na(ps_c), 0, ps_c),
    ac_c = ifelse(is.na(ac_c), 0, ac_c),
    wdth_t = ifelse(is.na(wdth_t), 0, wdth_t),
    hght_t = ifelse(is.na(hght_t), 0, hght_t),
    wght_t = ifelse(is.na(wght_t), 0, wght_t),
    hp_t = ifelse(is.na(hp_t), 0, hp_t),
    four_t = ifelse(is.na(four_t), 0, four_t),
    tran_t = ifelse(is.na(tran_t), 0, tran_t),
    ps_t = ifelse(is.na(ps_t), 0, ps_t),
    ac_t = ifelse(is.na(ac_t), 0, ac_t)
  )

truck_7990 %>%
  group_by(year) %>%
  summarise(freq = n()) %>%
  ungroup() %>%
  mutate(
    percent = freq / sum(freq) * 100,
    cum = cumsum(percent)
  )

# expand the yd variable

truck_7990 <- truck_7990 %>%
  mutate(yd = as.factor(year - min(year) + 1))

truck_7990_dummy <- model.matrix(~ yd - 1, data = truck_7990)

truck_7990 <- truck_7990 %>%
  bind_cols(as.data.frame(truck_7990_dummy))

# generate the cyd and tyd variables

truck_7990 <- truck_7990 %>%
  mutate(
    cyd2 = case_when(type == "JT" ~ 0, TRUE ~ yd2),
    tyd2 = case_when(type != "JT" ~ 0, TRUE ~ yd2),
    cyd3 = case_when(type == "JT" ~ 0, TRUE ~ yd3),
    tyd3 = case_when(type != "JT" ~ 0, TRUE ~ yd3),
    cyd4 = case_when(type == "JT" ~ 0, TRUE ~ yd4),
    tyd4 = case_when(type != "JT" ~ 0, TRUE ~ yd4),
    cyd5 = case_when(type == "JT" ~ 0, TRUE ~ yd5),
    tyd5 = case_when(type != "JT" ~ 0, TRUE ~ yd5),
    cyd6 = case_when(type == "JT" ~ 0, TRUE ~ yd6),
    tyd6 = case_when(type != "JT" ~ 0, TRUE ~ yd6),
    cyd7 = case_when(type == "JT" ~ 0, TRUE ~ yd7),
    tyd7 = case_when(type != "JT" ~ 0, TRUE ~ yd7)
  )

# fit the models

initial_values <- list(
  a3 = 1, a4 = 1, a5 = 1, a6 = 1, a7 = 1,
  b2 = 0.1, b3 = 0.1, b4 = 0.1, b5 = 0.1, b6 = 0.1, b7 = 0.1,
  c1 = 0.1, c2 = 0.1, c3 = 0.1, c4 = 0.1, c5 = 0.1, c6 = 0.1, c7 = 0.1,
  c8 = 0.1, c9 = 0.1,
  d1 = 0.1, d2 = 0.1, d3 = 0.1, d4 = 0.1, d5 = 0.1, d6 = 0.1, d7 = 0.1,
  d8 = 0.1
)

fit <- nlsLM(
  price ~ a3 * cyd3 + a4 * cyd4 + a5 * cyd5 + a6 * cyd6 + a7 * cyd7 +
    exp(b2 * cyd2 + b3 * cyd3 + b4 * cyd4 + b5 * cyd5 + b6 * cyd6 + b7 * cyd7 +
      c1 * wght_c + c2 * wdth_c + c3 * hght_c + c4 * hp_c + c5 * tran_c +
      c6 * ps_c + c7 * ac_c + c8) +
    exp(b2 * tyd2 + (b3 + 0.16) * tyd3 + (b4 + 0.16) * tyd4 +
      (b5 + 0.16) * tyd5 + (b6 + 0.16) * tyd6 + c9 * tyd7 +
      d1 * wght_t + d2 * wdth_t + d3 * hght_t + d4 * hp_t + d5 * tran_t +
      d6 * ps_t + d7 * four_t + d8),
  data = truck_7990,
  start = initial_values
)

summary(fit)

truck_7990 <- truck_7990 %>%
  mutate(
    winv = case_when(
      ve == 1 ~ 1 / exp(coef(fit)["b2"] * cyd2 + coef(fit)["b3"] * cyd3 +
        coef(fit)["b4"] * cyd4 + coef(fit)["b5"] * cyd5 +
        coef(fit)["b6"] * cyd6 + coef(fit)["b7"] * cyd7 +
        coef(fit)["c1"] * wght_c + coef(fit)["c2"] * wdth_c +
        coef(fit)["c3"] * hght_c + coef(fit)["c4"] * hp_c +
        coef(fit)["c5"] * tran_c + coef(fit)["c6"] * ps_c +
        coef(fit)["c7"] * ac_c + coef(fit)["c8"]),
      ve == 2 ~ 1 / exp((coef(fit)["b2"] + 0.16) * tyd2 +
        (coef(fit)["b3"] + 0.16) * tyd3 + (coef(fit)["b4"] + 0.16) * tyd4 +
        (coef(fit)["b5"] + 0.16) * tyd5 + (coef(fit)["b6"] + 0.16) * tyd6 +
        coef(fit)["c9"] * tyd7 + coef(fit)["d1"] * wght_t +
        coef(fit)["d2"] * wdth_t + coef(fit)["d3"] * hght_t +
        coef(fit)["d4"] * hp_t + coef(fit)["d5"] * tran_t +
        coef(fit)["d6"] * ps_t + coef(fit)["d7"] * four_t +
        coef(fit)["d8"])
    ),
    nprice = price * winv
  )

fit2 <- nlsLM(
  nprice ~ winv * (a3 * cyd3 + a4 * cyd4 + a5 * cyd5 + a6 * cyd6 + a7 * cyd7) +
    winv * exp(b2 * cyd2 + b3 * cyd3 + b4 * cyd4 + b5 * cyd5 + b6 * cyd6 +
      b7 * cyd7 + c1 * wght_c + c2 * wdth_c + c3 * hght_c + c4 * hp_c +
      c5 * tran_c + c6 * ps_c + c7 * ac_c + c8) +
    winv * exp(b2 * tyd2 + (b3 + 0.16) * tyd3 + (b4 + 0.16) * tyd4 +
      (b5 + 0.16) * tyd5 + (b6 + 0.16) * tyd6 + c9 * tyd7 + d1 * wght_t +
      d2 * wdth_t + d3 * hght_t + d4 * hp_t + d5 * tran_t + d6 * ps_t +
      d7 * four_t + d8),
  data = truck_7990,
  start = initial_values
)

summary(fit2)
```

## Exercise 4

Run the programs `unit_quality.do`, `qindex_c.do`, `qindex_t.do` to reproduce the quality indexes and unit-qualities for cars and trucks in Table 8.3. What formula is used for the quality of each model and the quality indexes, and how does this differ from the unit-quality?

### Feenstra's code

#### unit_quality.do

```stata
capture log close
log using Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\unit_quality.log,replace

use Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\truck_7990,clear
drop if year>=86
gen ve=2
rename quan quan_t
rename wdth wdth_t
rename hght hght_t
rename weight wght_t
rename hp hp_t
rename four four_t
rename tran tran_t
rename ps ps_t
rename ac ac_t

save Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\truck_temp,replace

use Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\car_7990,clear
drop if year>=86
gen ve=1
rename quan quan_c
rename wdth wdth_c
rename hght hght_c
rename wght wght_c
rename hp hp_c
rename four four_c
rename tran tran_c
rename ps ps_c
rename ac ac_c

append using Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\truck_temp

replace wdth_c=0 if wdth_c==.
replace hght_c=0 if hght_c==.
replace wght_c=0 if wght_c==.
replace hp_c=0 if hp_c==.
replace four_c=0 if four_c==.
replace tran_c=0 if tran_c==.
replace ps_c=0 if ps_c==.
replace ac_c=0 if ac_c==.
replace wdth_t=0 if wdth_t==.
replace hght_t=0 if hght_t==.
replace wght_t=0 if wght_t==.
replace hp_t=0 if hp_t==.
replace four_t=0 if four_t==.
replace tran_t=0 if tran_t==.
replace ps_t=0 if ps_t==.
replace ac_t=0 if ac_t==.

tab year, gen(yd)

gen cyd2=yd2
gen tyd2=yd2
replace cyd2=0 if type=="JT"
replace tyd2=0 if type~="JT"

gen cyd3=yd3
gen tyd3=yd3
replace cyd3=0 if type=="JT"
replace tyd3=0 if type~="JT"

gen cyd4=yd4
gen tyd4=yd4
replace cyd4=0 if type=="JT"
replace tyd4=0 if type~="JT"

gen cyd5=yd5
gen tyd5=yd5
replace cyd5=0 if type=="JT"
replace tyd5=0 if type~="JT"

gen cyd6=yd6
gen tyd6=yd6
replace cyd6=0 if type=="JT"
replace tyd6=0 if type~="JT"

gen cyd7=yd7
gen tyd7=yd7
replace cyd7=0 if type=="JT"
replace tyd7=0 if type~="JT"

program define nlct_1
version 7.0
if "`1'"=="?"{
global S_1 "a3 a4 a5 a6 a7 b2 b3 b4 b5 b6 b7 c1 c2 c3 c4 c5 c6 c7 c8 c9 d1 d2 d3 d4 d5 d6 d7 d8"
global a3=1
global a4=1
global a5=1
global a6=1
global a7=1
global b2=.1
global b3=.1
global b4=.1
global b5=.1
global b6=.1
global b7=.1
global c1=.1
global c2=.1
global c3=.1
global c4=.1
global c5=.1
global c6=.1
global c7=.1
global c8=.1
global c9=.1
global d1=.1
global d2=.1
global d3=.1
global d4=.1
global d5=.1
global d6=.1
global d7=.1
global d8=.1
exit
}

replace `1'=$a3*cyd3+$a4*cyd4+$a5*cyd5+$a6*cyd6+$a7*cyd7/*
*/+exp($b2*cyd2+$b3*cyd3+$b4*cyd4+$b5*cyd5+$b6*cyd6+$b7*cyd7/*
*/+$c1*wght_c+$c2*wdth_c+$c3*hght_c+$c4*hp_c+$c5*tran_c+$c6*ps_c+$c7*ac_c/*
*/+$c8)+exp($b2*tyd2+($b3+.16)*tyd3+($b4+.16)*tyd4+($b5+.16)*tyd5+($b6+.16)*tyd6+$c9*tyd7/*
*/+$d1*wght_t+$d2*wdth_t+$d3*hght_t+$d4*hp_t+$d5*tran_t+$d6*ps_t+$d7*four_t+$d8)

end

nl ct_1 price

gen winv=1/exp(_b[b2]*cyd2+_b[b3]*cyd3+_b[b4]*cyd4+_b[b5]*cyd5+_b[b6]*cyd6+_b[b7]*cyd7/*
*/+_b[c1]*wght_c+_b[c2]*wdth_c+_b[c3]*hght_c+_b[c4]*hp_c+_b[c5]*tran_c+_b[c6]*ps_c/*
*/+_b[c7]*ac_c+_b[c8])

replace winv=1/exp((_b[b2]+0.16)*tyd2+(_b[b3]+.16)*tyd3+(_b[b4]+.16)*tyd4/*
*/+(_b[b5]+.16)*tyd5+(_b[b6]+.16)*tyd6+_b[c9]*tyd7/*
*/+_b[d1]*wght_t+_b[d2]*wdth_t+_b[d3]*hght_t+_b[d4]*hp_t/*
*/+_b[d5]*tran_t+_b[d6]*ps_t+_b[d7]*four_t+_b[d8]) if ve==2

gen nprice=price*winv


program define nlct_2
version 7.0
if "`1'"=="?"{
global S_1 "a3 a4 a5 a6 a7 b2 b3 b4 b5 b6 b7 c1 c2 c3 c4 c5 c6 c7 c8 c9 d1 d2 d3 d4 d5 d6 d7 d8"
global a3=1
global a4=1
global a5=1
global a6=1
global a7=1
global b2=.1
global b3=.1
global b4=.1
global b5=.1
global b6=.1
global b7=.1
global c1=.1
global c2=.1
global c3=.1
global c4=.1
global c5=.1
global c6=.1
global c7=.1
global c8=.1
global c9=.1
global d1=.1
global d2=.1
global d3=.1
global d4=.1
global d5=.1
global d6=.1
global d7=.1
global d8=.1
exit
}
replace `1'=winv*($a3*cyd3+$a4*cyd4+$a5*cyd5+$a6*cyd6+$a7*cyd7)/*
*/+winv*exp($b2*cyd2+$b3*cyd3+$b4*cyd4+$b5*cyd5+$b6*cyd6+$b7*cyd7/*
*/+$c1*wght_c+$c2*wdth_c+$c3*hght_c+$c4*hp_c+$c5*tran_c+$c6*ps_c+$c7*ac_c/*
*/+$c8)+winv*exp($b2*tyd2+($b3+.16)*tyd3+($b4+.16)*tyd4+($b5+.16)*tyd5+($b6+.16)*tyd6+$c9*tyd7/*
*/+$d1*wght_t+$d2*wdth_t+$d3*hght_t+$d4*hp_t+$d5*tran_t+$d6*ps_t+$d7*four_t+$d8)

end

nl ct_2 nprice


preserve
keep if ve==1

gen quality=exp(_b[c8]+_b[b2]+_b[c1]*wght_c+_b[c2]*wdth_c+_b[c3]*hght_c+_b[c4]*hp_c/*
*/+_b[c5]*tran_c+_b[c6]*ps_c+_b[c7]*ac_c)

save Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\quality_c,replace

gen nvalue=quality*quan_c
egen aquan=mean(quan_c), by(year)
egen anvalue=mean(nvalue),by(year)
gen uquality=anvalue/aquan
collapse (mean)uquality, by(year)
list
restore

preserve
keep if ve==2

gen quality=exp(_b[d8]+_b[b2]+_b[d1]*wght_t+_b[d2]*wdth_t+_b[d3]*hght_t+_b[d4]*hp_t/*
*/+_b[d5]*tran_t+_b[d6]*ps_t+_b[d7]*four_t)

save Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\quality_t,replace

gen nvalue=quality*quan_t
egen aquan=mean(quan_t),by(year)
egen anvalue=mean(nvalue), by(year)
gen uquality=anvalue/aquan
collapse (mean)uquality, by(year)
list
restore

program drop _all
log close
exit
```

Output:

```stata
. capture log close

. log using Z:\home\pacha\github\advanced-international-trade\first-edition\Chapte
> r-8\unit_quality.log,replace
(note: file Z:\home\pacha\github\advanced-international-trade\first-edition\Chapte
> r-8\unit_quality.log not found)
----------------------------------------------------------------------------------
      name:  <unnamed>
       log:  Z:\home\pacha\github\advanced-international-trade\first-edition\Chapt
> er-8\unit_quality.log
  log type:  text
 opened on:  19 Jun 2024, 23:03:32

. 
. use Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\tr
> uck_7990,clear

. drop if year>=86
(45 observations deleted)

. gen ve=2

. rename quan quan_t

. rename wdth wdth_t

. rename hght hght_t

. rename weight wght_t

. rename hp hp_t

. rename four four_t

. rename tran tran_t

. rename ps ps_t

. rename ac ac_t

. 
. save Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\t
> ruck_temp,replace
file Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\tru
> ck_temp.dta saved

. 
. use Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\ca
> r_7990,clear

. drop if year>=86
(105 observations deleted)

. gen ve=1

. rename quan quan_c

. rename wdth wdth_c

. rename hght hght_c

. rename wght wght_c

. rename hp hp_c

. rename four four_c

. rename tran tran_c

. rename ps ps_c

. rename ac ac_c

. 
. append using Z:\home\pacha\github\advanced-international-trade\first-edition\Cha
> pter-8\truck_temp

. 
. replace wdth_c=0 if wdth_c==.
(75 real changes made)

. replace hght_c=0 if hght_c==.
(75 real changes made)

. replace wght_c=0 if wght_c==.
(75 real changes made)

. replace hp_c=0 if hp_c==.
(75 real changes made)

. replace four_c=0 if four_c==.
(75 real changes made)

. replace tran_c=0 if tran_c==.
(75 real changes made)

. replace ps_c=0 if ps_c==.
(75 real changes made)

. replace ac_c=0 if ac_c==.
(75 real changes made)

. replace wdth_t=0 if wdth_t==.
(179 real changes made)

. replace hght_t=0 if hght_t==.
(179 real changes made)

. replace wght_t=0 if wght_t==.
(179 real changes made)

. replace hp_t=0 if hp_t==.
(179 real changes made)

. replace four_t=0 if four_t==.
(179 real changes made)

. replace tran_t=0 if tran_t==.
(179 real changes made)

. replace ps_t=0 if ps_t==.
(179 real changes made)

. replace ac_t=0 if ac_t==.
(179 real changes made)

. 
. tab year, gen(yd)

       year |      Freq.     Percent        Cum.
------------+-----------------------------------
         79 |         31       12.20       12.20
         80 |         34       13.39       25.59
         81 |         35       13.78       39.37
         82 |         35       13.78       53.15
         83 |         36       14.17       67.32
         84 |         40       15.75       83.07
         85 |         43       16.93      100.00
------------+-----------------------------------
      Total |        254      100.00

. 
. gen cyd2=yd2

. gen tyd2=yd2

. replace cyd2=0 if type=="JT"
(8 real changes made)

. replace tyd2=0 if type~="JT"
(26 real changes made)

. 
. gen cyd3=yd3

. gen tyd3=yd3

. replace cyd3=0 if type=="JT"
(9 real changes made)

. replace tyd3=0 if type~="JT"
(26 real changes made)

. 
. gen cyd4=yd4

. gen tyd4=yd4

. replace cyd4=0 if type=="JT"
(9 real changes made)

. replace tyd4=0 if type~="JT"
(26 real changes made)

. 
. gen cyd5=yd5

. gen tyd5=yd5

. replace cyd5=0 if type=="JT"
(7 real changes made)

. replace tyd5=0 if type~="JT"
(29 real changes made)

. 
. gen cyd6=yd6

. gen tyd6=yd6

. replace cyd6=0 if type=="JT"
(7 real changes made)

. replace tyd6=0 if type~="JT"
(33 real changes made)

. 
. gen cyd7=yd7

. gen tyd7=yd7

. replace cyd7=0 if type=="JT"
(7 real changes made)

. replace tyd7=0 if type~="JT"
(36 real changes made)

. 
. program define nlct_1
  1. version 7.0
  2. if "`1'"=="?"{
  3. global S_1 "a3 a4 a5 a6 a7 b2 b3 b4 b5 b6 b7 c1 c2 c3 c4 c5 c6 c7 c8 c9 d1 d2
>  d3 d4 d5 d6 d7 d8"
  4. global a3=1
  5. global a4=1
  6. global a5=1
  7. global a6=1
  8. global a7=1
  9. global b2=.1
 10. global b3=.1
 11. global b4=.1
 12. global b5=.1
 13. global b6=.1
 14. global b7=.1
 15. global c1=.1
 16. global c2=.1
 17. global c3=.1
 18. global c4=.1
 19. global c5=.1
 20. global c6=.1
 21. global c7=.1
 22. global c8=.1
 23. global c9=.1
 24. global d1=.1
 25. global d2=.1
 26. global d3=.1
 27. global d4=.1
 28. global d5=.1
 29. global d6=.1
 30. global d7=.1
 31. global d8=.1
 32. exit
 33. }
 34. 
. replace `1'=$a3*cyd3+$a4*cyd4+$a5*cyd5+$a6*cyd6+$a7*cyd7/*
> */+exp($b2*cyd2+$b3*cyd3+$b4*cyd4+$b5*cyd5+$b6*cyd6+$b7*cyd7/*
> */+$c1*wght_c+$c2*wdth_c+$c3*hght_c+$c4*hp_c+$c5*tran_c+$c6*ps_c+$c7*ac_c/*
> */+$c8)+exp($b2*tyd2+($b3+.16)*tyd3+($b4+.16)*tyd4+($b5+.16)*tyd5+($b6+.16)*tyd6
> +$c9*tyd7/*
> */+$d1*wght_t+$d2*wdth_t+$d3*hght_t+$d4*hp_t+$d5*tran_t+$d6*ps_t+$d7*four_t+$d8)
 35. 
. end

. 
. nl ct_1 price
(obs = 254)

Iteration 0:   residual SS =  1.51e+10
Iteration 1:   residual SS =  8.64e+09
Iteration 2:   residual SS =  6.91e+09
Iteration 3:   residual SS =  2.58e+09
Iteration 4:   residual SS =  6.90e+08
Iteration 5:   residual SS =  3.66e+08
Iteration 6:   residual SS =  1.27e+08
Iteration 7:   residual SS =  1.23e+08
Iteration 8:   residual SS =  1.02e+08
Iteration 9:   residual SS =  1.02e+08
Iteration 10:  residual SS =  1.01e+08
Iteration 11:  residual SS =  1.01e+08
Iteration 12:  residual SS =  1.01e+08
Iteration 13:  residual SS =  1.01e+08
Iteration 14:  residual SS =  1.01e+08
Iteration 15:  residual SS =  1.01e+08
Iteration 16:  residual SS =  1.01e+08
Iteration 17:  residual SS =  1.01e+08
Iteration 18:  residual SS =  1.01e+08
Iteration 19:  residual SS =  1.01e+08
Iteration 20:  residual SS =  1.01e+08
Iteration 21:  residual SS =  1.01e+08
Iteration 22:  residual SS =  1.01e+08
Iteration 23:  residual SS =  1.01e+08
Iteration 24:  residual SS =  1.01e+08
Iteration 25:  residual SS =  1.01e+08

      Source |       SS       df       MS            Number of obs =       254
-------------+------------------------------         F( 28,   226) =   1210.09
       Model |  1.5069e+10    28   538194036         Prob > F      =    0.0000
    Residual |   100515047   226  444756.844         R-squared     =    0.9934
-------------+------------------------------         Adj R-squared =    0.9926
       Total |  1.5170e+10   254  59724204.9         Root MSE      =  666.9009
                                                     Res. dev.     =  3994.496
(ct_1)
------------------------------------------------------------------------------
       price |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          a3 |   254.0918   317.1045     0.80   0.424    -370.7678    878.9513
          a4 |   505.1058   325.6388     1.55   0.122    -136.5708    1146.782
          a5 |   708.9466   317.3172     2.23   0.026       83.668    1334.225
          a6 |   1082.054   322.4415     3.36   0.001     446.6773     1717.43
          a7 |   1063.014   373.9703     2.84   0.005     326.0995    1799.929
          b2 |   .0040633   .0329008     0.12   0.902    -.0607683    .0688948
          b3 |   .0756038    .049061     1.54   0.125    -.0210716    .1722792
          b4 |   .0828575   .0490467     1.69   0.093    -.0137897    .1795048
          b5 |   .0327776    .050707     0.65   0.519    -.0671415    .1326967
          b6 |   .0351224   .0514768     0.68   0.496    -.0663135    .1365582
          b7 |   .0825554   .0557608     1.48   0.140    -.0273221    .1924329
          c1 |   .0326037   .1117298     0.29   0.771    -.1875618    .2527691
          c2 |    .385946   .1204171     3.21   0.002     .1486621    .6232299
          c3 |  -.1929238   .0568197    -3.40   0.001     -.304888   -.0809596
          c4 |    .715212   .0736084     9.72   0.000     .5701655    .8602585
          c5 |   .1578585     .03381     4.67   0.000     .0912354    .2244816
          c6 |   .0641097   .0247061     2.59   0.010     .0154259    .1127934
          c7 |   .1829447   .0242773     7.54   0.000     .1351059    .2307836
          c8 |   6.599831   .7305317     9.03   0.000     5.160306    8.039356
          c9 |   .1171992   .0634238     1.85   0.066    -.0077785    .2421769
          d1 |   .4917133   .0795807     6.18   0.000     .3348983    .6485283
          d2 |   .2622177   .1757206     1.49   0.137    -.0840426    .6084779
          d3 |  -.0451278   .0677055    -0.67   0.506    -.1785426     .088287
          d4 |   .3030767   .1701249     1.78   0.076    -.0321571    .6383106
          d5 |   .0397822   .0362731     1.10   0.274    -.0316947     .111259
          d6 |   .0967659   .0501832     1.93   0.055    -.0021208    .1956526
          d7 |   .3052359   .0715711     4.26   0.000     .1642038     .446268
          d8 |   6.299805   .9622249     6.55   0.000     4.403726    8.195885
------------------------------------------------------------------------------
 (SEs, P values, CIs, and correlations are asymptotic approximations)

. 
. gen winv=1/exp(_b[b2]*cyd2+_b[b3]*cyd3+_b[b4]*cyd4+_b[b5]*cyd5+_b[b6]*cyd6+_b[b7
> ]*cyd7/*
> */+_b[c1]*wght_c+_b[c2]*wdth_c+_b[c3]*hght_c+_b[c4]*hp_c+_b[c5]*tran_c+_b[c6]*ps
> _c/*
> */+_b[c7]*ac_c+_b[c8])

. 
. replace winv=1/exp((_b[b2]+0.16)*tyd2+(_b[b3]+.16)*tyd3+(_b[b4]+.16)*tyd4/*
> */+(_b[b5]+.16)*tyd5+(_b[b6]+.16)*tyd6+_b[c9]*tyd7/*
> */+_b[d1]*wght_t+_b[d2]*wdth_t+_b[d3]*hght_t+_b[d4]*hp_t/*
> */+_b[d5]*tran_t+_b[d6]*ps_t+_b[d7]*four_t+_b[d8]) if ve==2
(75 real changes made)

. 
. gen nprice=price*winv

. 
. 
. program define nlct_2
  1. version 7.0
  2. if "`1'"=="?"{
  3. global S_1 "a3 a4 a5 a6 a7 b2 b3 b4 b5 b6 b7 c1 c2 c3 c4 c5 c6 c7 c8 c9 d1 d2
>  d3 d4 d5 d6 d7 d8"
  4. global a3=1
  5. global a4=1
  6. global a5=1
  7. global a6=1
  8. global a7=1
  9. global b2=.1
 10. global b3=.1
 11. global b4=.1
 12. global b5=.1
 13. global b6=.1
 14. global b7=.1
 15. global c1=.1
 16. global c2=.1
 17. global c3=.1
 18. global c4=.1
 19. global c5=.1
 20. global c6=.1
 21. global c7=.1
 22. global c8=.1
 23. global c9=.1
 24. global d1=.1
 25. global d2=.1
 26. global d3=.1
 27. global d4=.1
 28. global d5=.1
 29. global d6=.1
 30. global d7=.1
 31. global d8=.1
 32. exit
 33. }
 34. replace `1'=winv*($a3*cyd3+$a4*cyd4+$a5*cyd5+$a6*cyd6+$a7*cyd7)/*
> */+winv*exp($b2*cyd2+$b3*cyd3+$b4*cyd4+$b5*cyd5+$b6*cyd6+$b7*cyd7/*
> */+$c1*wght_c+$c2*wdth_c+$c3*hght_c+$c4*hp_c+$c5*tran_c+$c6*ps_c+$c7*ac_c/*
> */+$c8)+winv*exp($b2*tyd2+($b3+.16)*tyd3+($b4+.16)*tyd4+($b5+.16)*tyd5+($b6+.16)
> *tyd6+$c9*tyd7/*
> */+$d1*wght_t+$d2*wdth_t+$d3*hght_t+$d4*hp_t+$d5*tran_t+$d6*ps_t+$d7*four_t+$d8)
 35. 
. end

. 
. nl ct_2 nprice
(obs = 254)

Iteration 0:   residual SS =  353.5865
Iteration 1:   residual SS =   334.435
Iteration 2:   residual SS =  289.3018
Iteration 3:   residual SS =  133.5526
Iteration 4:   residual SS =   99.2393
Iteration 5:   residual SS =   13.6599
Iteration 6:   residual SS =  6.893439
Iteration 7:   residual SS =  5.473819
Iteration 8:   residual SS =  2.966103
Iteration 9:   residual SS =  2.957318
Iteration 10:  residual SS =  2.957298
Iteration 11:  residual SS =  2.957296
Iteration 12:  residual SS =  2.957296
Iteration 13:  residual SS =  2.957296
Iteration 14:  residual SS =  2.957295
Iteration 15:  residual SS =  2.957295
Iteration 16:  residual SS =  2.957295
Iteration 17:  residual SS =  2.957295
Iteration 18:  residual SS =  2.957295
Iteration 19:  residual SS =  2.957295
Iteration 20:  residual SS =  2.957295
Iteration 21:  residual SS =  2.957295

      Source |       SS       df       MS            Number of obs =       254
-------------+------------------------------         F( 28,   226) =    958.75
       Model |  351.277591    28  12.5456282         Prob > F      =    0.0000
    Residual |  2.95729549   226  .013085378         R-squared     =    0.9917
-------------+------------------------------         Adj R-squared =    0.9906
       Total |  354.234886   254  1.39462554         Root MSE      =  .1143913
                                                     Res. dev.     = -410.2562
(ct_2)
------------------------------------------------------------------------------
      nprice |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          a3 |   367.9829    239.059     1.54   0.125    -103.0867    839.0525
          a4 |    600.553   254.2261     2.36   0.019     99.59628     1101.51
          a5 |   887.9399   243.5428     3.65   0.000     408.0348    1367.845
          a6 |   1104.433   251.0245     4.40   0.000     609.7847     1599.08
          a7 |   855.7993   366.2444     2.34   0.020     134.1088     1577.49
          b2 |   .0130387   .0303131     0.43   0.668    -.0466937    .0727711
          b3 |   .0674477   .0425176     1.59   0.114     -.016334    .1512294
          b4 |   .0701234   .0441821     1.59   0.114    -.0169382     .157185
          b5 |  -.0005627   .0470779    -0.01   0.990    -.0933305    .0922051
          b6 |   .0179989   .0473905     0.38   0.704    -.0753848    .1113826
          b7 |   .1007712   .0641587     1.57   0.118    -.0256545    .2271969
          c1 |   .0492474   .1311096     0.38   0.708    -.2091061     .307601
          c2 |   .3908689   .1383663     2.82   0.005     .1182159     .663522
          c3 |  -.0618204   .0611492    -1.01   0.313    -.1823158     .058675
          c4 |   .8103277   .1038045     7.81   0.000     .6057792    1.014876
          c5 |   .1779391   .0355273     5.01   0.000     .1079319    .2479463
          c6 |   .0693687   .0304968     2.27   0.024     .0092743     .129463
          c7 |   .1567051   .0360384     4.35   0.000     .0856908    .2277193
          c8 |   5.839036   .8621144     6.77   0.000     4.140226    7.537847
          c9 |   .1059852   .0550545     1.93   0.055    -.0025007    .2144711
          d1 |   .4759918   .1172145     4.06   0.000     .2450187    .7069649
          d2 |   .2120021   .1419991     1.49   0.137    -.0678094    .4918136
          d3 |  -.0270369    .074052    -0.37   0.715    -.1729575    .1188837
          d4 |     .24435   .1516866     1.61   0.109    -.0545508    .5432508
          d5 |   .0530065   .0356148     1.49   0.138     -.017173     .123186
          d6 |   .0575178   .0639555     0.90   0.369    -.0685076    .1835431
          d7 |   .2971909   .0566882     5.24   0.000      .185486    .4088959
          d8 |   6.630805   .7652819     8.66   0.000     5.122804    8.138805
------------------------------------------------------------------------------
 (SEs, P values, CIs, and correlations are asymptotic approximations)

. 
. 
. preserve

. keep if ve==1
(75 observations deleted)

. 
. gen quality=exp(_b[c8]+_b[b2]+_b[c1]*wght_c+_b[c2]*wdth_c+_b[c3]*hght_c+_b[c4]*h
> p_c/*
> */+_b[c5]*tran_c+_b[c6]*ps_c+_b[c7]*ac_c)

. 
. save Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\q
> uality_c,replace
file Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\qua
> lity_c.dta saved

. 
. gen nvalue=quality*quan_c

. egen aquan=mean(quan_c), by(year)

. egen anvalue=mean(nvalue),by(year)

. gen uquality=anvalue/aquan

. collapse (mean)uquality, by(year)

. list

     +-----------------+
     | year   uquality |
     |-----------------|
  1. |   79   4360.772 |
  2. |   80   4472.789 |
  3. |   81   4867.316 |
  4. |   82   5252.845 |
  5. |   83   5636.667 |
     |-----------------|
  6. |   84    5862.13 |
  7. |   85   6130.052 |
     +-----------------+

. restore

. 
. preserve

. keep if ve==2
(179 observations deleted)

. 
. gen quality=exp(_b[d8]+_b[b2]+_b[d1]*wght_t+_b[d2]*wdth_t+_b[d3]*hght_t+_b[d4]*h
> p_t/*
> */+_b[d5]*tran_t+_b[d6]*ps_t+_b[d7]*four_t)

. 
. save Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\q
> uality_t,replace
file Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\qua
> lity_t.dta saved

. 
. gen nvalue=quality*quan_t

. egen aquan=mean(quan_t),by(year)

. egen anvalue=mean(nvalue), by(year)

. gen uquality=anvalue/aquan

. collapse (mean)uquality, by(year)

. list

     +-----------------+
     | year   uquality |
     |-----------------|
  1. |   79   4626.836 |
  2. |   80   4637.583 |
  3. |   81   4791.255 |
  4. |   82   4929.792 |
  5. |   83   4997.103 |
     |-----------------|
  6. |   84   5009.971 |
  7. |   85   5432.772 |
     +-----------------+

. restore

. 
. program drop _all

. log close
      name:  <unnamed>
       log:  Z:\home\pacha\github\advanced-international-trade\first-edition\Chapt
> er-8\unit_quality.log
  log type:  text
 closed on:  19 Jun 2024, 23:03:38
----------------------------------------------------------------------------------

. exit

end of do-file
```

#### qindex_c.do

```stata
clear
capture log close
log using Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\qindex_c.log,replace

use Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\quality_c,clear
keep year model type quality quan_c
ren quan_c quan

preserve
keep if year==80
keep model type quality quan
ren quality quality_80
ren quan quan_80
sort model
save Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\quality_80_c,replace
restore

sort model
merge model using Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\quality_80_c
keep if _merge==3
drop _merge

sort year model
egen value_80=sum(quality_80*quan_80), by(year)
egen value_cp=sum(quality*quan_80), by(year)
gen lasp=value_cp/value_80

egen value_c=sum(quality*quan),by(year)
egen value_cq=sum(quality_80*quan), by(year)
gen pasp=value_c/value_cq

gen qindex=(lasp*pasp)^0.5
collapse (mean) qindex, by(year)

list
log close
```

Output:

```stata
. clear

. capture log close

. log using Z:\home\pacha\github\advanced-international-trade\first-edition\Chapte
> r-8\qindex_c.log,replace
(note: file Z:\home\pacha\github\advanced-international-trade\first-edition\Chapte
> r-8\qindex_c.log not found)
----------------------------------------------------------------------------------
      name:  <unnamed>
       log:  Z:\home\pacha\github\advanced-international-trade\first-edition\Chapt
> er-8\qindex_c.log
  log type:  text
 opened on:  19 Jun 2024, 23:06:51

. 
. use Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\qu
> ality_c,clear

. keep year model type quality quan_c

. ren quan_c quan

. 
. preserve

. keep if year==80
(155 observations deleted)

. keep model type quality quan

. ren quality quality_80

. ren quan quan_80

. sort model

. save Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\q
> uality_80_c,replace
file Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\qua
> lity_80_c.dta saved

. restore

. 
. sort model

. merge model using Z:\home\pacha\github\advanced-international-trade\first-editio
> n\Chapter-8\quality_80_c
(note: you are using old merge syntax; see [R] merge for new syntax)
variable model does not uniquely identify observations in the master data

. keep if _merge==3
(23 observations deleted)

. drop _merge

. 
. sort year model

. egen value_80=sum(quality_80*quan_80), by(year)

. egen value_cp=sum(quality*quan_80), by(year)

. gen lasp=value_cp/value_80

. 
. egen value_c=sum(quality*quan),by(year)

. egen value_cq=sum(quality_80*quan), by(year)

. gen pasp=value_c/value_cq

. 
. gen qindex=(lasp*pasp)^0.5

. collapse (mean) qindex, by(year)

. 
. list

     +-----------------+
     | year     qindex |
     |-----------------|
  1. |   79    .986878 |
  2. |   80          1 |
  3. |   81   1.085813 |
  4. |   82    1.15183 |
  5. |   83   1.212675 |
     |-----------------|
  6. |   84   1.266379 |
  7. |   85   1.305744 |
     +-----------------+

. log close
      name:  <unnamed>
       log:  Z:\home\pacha\github\advanced-international-trade\first-edition\Chapt
> er-8\qindex_c.log
  log type:  text
 closed on:  19 Jun 2024, 23:06:53
----------------------------------------------------------------------------------

. 
end of do-file
```

#### qindex_t.do

```stata
. clear

. capture log close

. log using Z:\home\pacha\github\advanced-international-trade\first-edition\Chapte
> r-8\qindex_t.log,replace
(note: file Z:\home\pacha\github\advanced-international-trade\first-edition\Chapte
> r-8\qindex_t.log not found)
----------------------------------------------------------------------------------
      name:  <unnamed>
       log:  Z:\home\pacha\github\advanced-international-trade\first-edition\Chapt
> er-8\qindex_t.log
  log type:  text
 opened on:  19 Jun 2024, 23:09:00

. 
. use Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\qu
> ality_t,clear

. keep year model type quality quan_t

. ren quan_t quan

. 
. preserve

. keep if year==80
(65 observations deleted)

. keep model type quality quan

. ren quality quality_80

. ren quan quan_80

. sort model

. save Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\q
> uality_80_t,replace
file Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\qua
> lity_80_t.dta saved

. restore

. 
. sort model

. merge model using Z:\home\pacha\github\advanced-international-trade\first-editio
> n\Chapter-8\quality_80_t
(note: you are using old merge syntax; see [R] merge for new syntax)
variable model does not uniquely identify observations in the master data

. keep if _merge==3
(14 observations deleted)

. drop _merge

. 
. sort year model

. egen value_80=sum(quality_80*quan_80), by(year)

. egen value_cp=sum(quality*quan_80), by(year)

. gen lasp=value_cp/value_80

. 
. egen value_c=sum(quality*quan),by(year)

. egen value_cq=sum(quality_80*quan), by(year)

. gen pasp=value_c/value_cq

. 
. gen qindex=(lasp*pasp)^0.5

. collapse (mean) qindex, by(year)

. 
. list

     +-----------------+
     | year     qindex |
     |-----------------|
  1. |   79   .9956951 |
  2. |   80          1 |
  3. |   81   1.035043 |
  4. |   82   1.058717 |
  5. |   83   1.057227 |
     |-----------------|
  6. |   84   1.053449 |
  7. |   85   1.160353 |
     +-----------------+

. log close
      name:  <unnamed>
       log:  Z:\home\pacha\github\advanced-international-trade\first-edition\Chapt
> er-8\qindex_t.log
  log type:  text
 closed on:  19 Jun 2024, 23:09:01
----------------------------------------------------------------------------------

. 
end of do-file
```

### My code

#### unit_quality.do

```{r ch8_ex4a}
truck_7990 <- feenstra_88$truck_7990 %>%
  filter(year < 86) %>%
  mutate(ve = 2) %>%
  rename(
    quan_t = quan,
    wdth_t = wdth,
    hght_t = hght,
    wght_t = weight,
    hp_t = hp,
    four_t = four,
    tran_t = tran,
    ps_t = ps,
    ac_t = ac
  )

car_7990 <- feenstra_88$car_7990 %>%
  filter(year < 86) %>%
  mutate(ve = 1) %>%
  rename(
    quan_c = quan,
    wdth_c = wdth,
    hght_c = hght,
    wght_c = wght,
    hp_c = hp,
    four_c = four,
    tran_c = tran,
    ps_c = ps,
    ac_c = ac
  )

truck_7990 <- truck_7990 %>%
  bind_rows(car_7990) %>%
  mutate(
    wdth_c = ifelse(is.na(wdth_c), 0, wdth_c),
    hght_c = ifelse(is.na(hght_c), 0, hght_c),
    wght_c = ifelse(is.na(wght_c), 0, wght_c),
    hp_c = ifelse(is.na(hp_c), 0, hp_c),
    four_c = ifelse(is.na(four_c), 0, four_c),
    tran_c = ifelse(is.na(tran_c), 0, tran_c),
    ps_c = ifelse(is.na(ps_c), 0, ps_c),
    ac_c = ifelse(is.na(ac_c), 0, ac_c),
    wdth_t = ifelse(is.na(wdth_t), 0, wdth_t),
    hght_t = ifelse(is.na(hght_t), 0, hght_t),
    wght_t = ifelse(is.na(wght_t), 0, wght_t),
    hp_t = ifelse(is.na(hp_t), 0, hp_t),
    four_t = ifelse(is.na(four_t), 0, four_t),
    tran_t = ifelse(is.na(tran_t), 0, tran_t),
    ps_t = ifelse(is.na(ps_t), 0, ps_t),
    ac_t = ifelse(is.na(ac_t), 0, ac_t)
  )

truck_7990 %>%
  group_by(year) %>%
  summarise(freq = n()) %>%
  ungroup() %>%
  mutate(
    percent = freq / sum(freq) * 100,
    cum = cumsum(percent)
  )

truck_7990 <- truck_7990 %>%
  mutate(yd = as.factor(year - min(year) + 1))

truck_7990_dummy <- model.matrix(~ yd - 1, data = truck_7990)

truck_7990 <- truck_7990 %>%
  bind_cols(as.data.frame(truck_7990_dummy))

truck_7990 <- truck_7990 %>%
  mutate(
    cyd2 = case_when(
      type == "JT" ~ 0,
      TRUE ~ yd2
    ),
    tyd2 = case_when(
      type != "JT" ~ 0,
      TRUE ~ yd2
    ),
    cyd3 = case_when(
      type == "JT" ~ 0,
      TRUE ~ yd3
    ),
    tyd3 = case_when(
      type != "JT" ~ 0,
      TRUE ~ yd3
    ),
    cyd4 = case_when(
      type == "JT" ~ 0,
      TRUE ~ yd4
    ),
    tyd4 = case_when(
      type != "JT" ~ 0,
      TRUE ~ yd4
    ),
    cyd5 = case_when(
      type == "JT" ~ 0,
      TRUE ~ yd5
    ),
    tyd5 = case_when(
      type != "JT" ~ 0,
      TRUE ~ yd5
    ),
    cyd6 = case_when(
      type == "JT" ~ 0,
      TRUE ~ yd6
    ),
    tyd6 = case_when(
      type != "JT" ~ 0,
      TRUE ~ yd6
    ),
    cyd7 = case_when(
      type == "JT" ~ 0,
      TRUE ~ yd7
    ),
    tyd7 = case_when(
      type != "JT" ~ 0,
      TRUE ~ yd7
    )
  )

initial_values <- list(
  a3 = 1, a4 = 1, a5 = 1, a6 = 1, a7 = 1,
  b2 = 0.1, b3 = 0.1, b4 = 0.1, b5 = 0.1, b6 = 0.1, b7 = 0.1,
  c1 = 0.1, c2 = 0.1, c3 = 0.1, c4 = 0.1, c5 = 0.1, c6 = 0.1, c7 = 0.1,
  c8 = 0.1, c9 = 0.1,
  d1 = 0.1, d2 = 0.1, d3 = 0.1, d4 = 0.1, d5 = 0.1, d6 = 0.1, d7 = 0.1,
  d8 = 0.1
)

fit <- nlsLM(
  price ~ a3 * cyd3 + a4 * cyd4 + a5 * cyd5 + a6 * cyd6 + a7 * cyd7 +
    exp(b2 * cyd2 + b3 * cyd3 + b4 * cyd4 + b5 * cyd5 + b6 * cyd6 +
      b7 * cyd7 + c1 * wght_c + c2 * wdth_c + c3 * hght_c + c4 * hp_c +
      c5 * tran_c + c6 * ps_c + c7 * ac_c + c8) +
    exp(b2 * tyd2 + (b3 + 0.16) * tyd3 + (b4 + 0.16) * tyd4 +
      (b5 + 0.16) * tyd5 + (b6 + 0.16) * tyd6 + c9 * tyd7 + d1 * wght_t +
      d2 * wdth_t + d3 * hght_t + d4 * hp_t + d5 * tran_t + d6 * ps_t +
      d7 * four_t + d8),
  data = truck_7990,
  start = initial_values
)

summary(fit)

fit_coef <- coef(fit)

truck_7990 <- truck_7990 %>%
  mutate(
    winv = case_when(
      ve == 1 ~ 1 / exp(fit_coef["b2"] * cyd2 + fit_coef["b3"] * cyd3 +
        fit_coef["b4"] * cyd4 + fit_coef["b5"] * cyd5 +
        fit_coef["b6"] * cyd6 + fit_coef["b7"] * cyd7 +
        fit_coef["c1"] * wght_c + fit_coef["c2"] * wdth_c +
        fit_coef["c3"] * hght_c + fit_coef["c4"] * hp_c +
        fit_coef["c5"] * tran_c + fit_coef["c6"] * ps_c +
        fit_coef["c7"] * ac_c + fit_coef["c8"]),
      ve == 2 ~ 1 / exp((fit_coef["b2"] + 0.16) * tyd2 +
        (fit_coef["b3"] + 0.16) * tyd3 + (fit_coef["b4"] + 0.16) * tyd4 +
        (fit_coef["b5"] + 0.16) * tyd5 + (fit_coef["b6"] + 0.16) * tyd6 +
        fit_coef["c9"] * tyd7 + fit_coef["d1"] * wght_t +
        fit_coef["d2"] * wdth_t + fit_coef["d3"] * hght_t +
        fit_coef["d4"] * hp_t + fit_coef["d5"] * tran_t +
        fit_coef["d6"] * ps_t + fit_coef["d7"] * four_t + fit_coef["d8"])
    ),
    nprice = price * winv
  )

fit2 <- nlsLM(
  nprice ~ winv * (a3 * cyd3 + a4 * cyd4 + a5 * cyd5 + a6 * cyd6 + a7 * cyd7) +
    winv * exp(b2 * cyd2 + b3 * cyd3 + b4 * cyd4 + b5 * cyd5 + b6 * cyd6 +
      b7 * cyd7 + c1 * wght_c + c2 * wdth_c + c3 * hght_c + c4 * hp_c +
      c5 * tran_c + c6 * ps_c + c7 * ac_c + c8) +
    winv * exp(b2 * tyd2 + (b3 + 0.16) * tyd3 + (b4 + 0.16) * tyd4 +
      (b5 + 0.16) * tyd5 + (b6 + 0.16) * tyd6 + c9 * tyd7 + d1 * wght_t +
      d2 * wdth_t + d3 * hght_t + d4 * hp_t + d5 * tran_t + d6 * ps_t +
      d7 * four_t + d8),
  data = truck_7990,
  start = initial_values
)

summary(fit2)

fit2_coef <- coef(fit2)

truck_7990_2 <- truck_7990 %>%
  filter(ve == 1) %>%
  mutate(
    quality = exp(fit2_coef["c8"] + fit2_coef["b2"] + fit2_coef["c1"] * wght_c +
      fit2_coef["c2"] * wdth_c + fit2_coef["c3"] * hght_c +
      fit2_coef["c4"] * hp_c + fit2_coef["c5"] * tran_c +
      fit2_coef["c6"] * ps_c + fit2_coef["c7"] * ac_c),
    nvalue = quality * quan_c
  )

truck_7990_2 %>%
  group_by(year) %>%
  summarise(
    aquan = mean(quan_c),
    anvalue = mean(nvalue)
  ) %>%
  ungroup() %>%
  mutate(uquality = anvalue / aquan) %>%
  group_by(year) %>%
  summarise(mean_uquality = mean(uquality))

truck_7990_3 <- truck_7990 %>%
  filter(ve == 2) %>%
  mutate(
    quality = exp(fit2_coef["d8"] + fit2_coef["b2"] + fit2_coef["d1"] * wght_t +
      fit2_coef["d2"] * wdth_t + fit2_coef["d3"] * hght_t +
      fit2_coef["d4"] * hp_t + fit2_coef["d5"] * tran_t +
      fit2_coef["d6"] * ps_t + fit2_coef["d7"] * four_t),
    nvalue = quality * quan_t
  )

truck_7990_3 %>%
  group_by(year) %>%
  summarise(
    aquan = mean(quan_t),
    anvalue = mean(nvalue)
  ) %>%
  ungroup() %>%
  mutate(uquality = anvalue / aquan) %>%
  group_by(year) %>%
  summarise(mean_uquality = mean(uquality))
```

#### qindex_c.do

```{r ch8_ex4b}
truck_7990_2_80 <- truck_7990_2 %>%
  filter(year == 80) %>%
  select(model, type, quality, quan_c) %>%
  rename(
    quality_80 = quality,
    quan_80 = quan_c
  )

truck_7990_2 %>%
  select(year, model, type, quality, quan_c) %>%
  inner_join(truck_7990_2_80, by = c("model", "type")) %>%
  group_by(year, model) %>%
  mutate(
    value_80 = sum(quality_80 * quan_80),
    value_cp = sum(quality * quan_80),
    lasp = value_cp / value_80
  ) %>%
  group_by(year) %>%
  mutate(
    value_c = sum(quality * quan_c),
    value_cq = sum(quality_80 * quan_c),
    pasp = value_c / value_cq,
    qindex = sqrt(lasp * pasp)
  ) %>%
  summarise(mean_qindex = mean(qindex))
```

#### qindex_t.do

```{r ch8_ex4c}
truck_7990_3_80 <- truck_7990_3 %>%
  filter(year == 80) %>%
  select(model, type, quality, quan_t) %>%
  rename(
    quality_80 = quality,
    quan_80 = quan_t
  )

truck_7990_3 %>%
  select(year, model, type, quality, quan_t) %>%
  inner_join(truck_7990_3_80, by = c("model", "type")) %>%
  group_by(year, model) %>%
  mutate(
    value_80 = sum(quality_80 * quan_80),
    value_tp = sum(quality * quan_80),
    lasp = value_tp / value_80
  ) %>%
  group_by(year) %>%
  mutate(
    value_t = sum(quality * quan_t),
    value_tq = sum(quality_80 * quan_t),
    pasp = value_t / value_tq,
    qindex = sqrt(lasp * pasp)
  ) %>%
  summarise(mean_qindex = mean(qindex))
```

## Exercise 5

Pooling car and truck data, run `system_nocom.do` and `system_wcon.do` to reproduce columns (1) – (4) in Table 8.5, with constraints specified in equation (8.22).

### Feenstra's code

#### system_nocom.do

I think there is a typo in the original code, in specific in the lines:

```stata
gen cyd10=yd10
gen tyd10=yd10
replace cyd7=10 if type=="JT"
replace tyd7=10 if type~="JT"

gen cyd11=yd11
gen tyd11=yd11
replace cyd7=11 if type=="JT"
replace tyd7=11 if type~="JT"

gen cyd12=yd12
gen tyd12=yd12
replace cyd7=12 if type=="JT"
replace tyd7=12 if type~="JT"
```

To me, it is not clear why overwriting `cyd7` three times instead of replacing with "12" in one step. I corrected `cyd10`, `cyd11`, and `cyd12` below.

```stata
capture log close
log using Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\system_nocon.log,replace

set matsize 400

use Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\truck_7990,clear
gen ve=2
rename wdth wdth_t
rename hght hght_t
rename weight wght_t
rename hp hp_t
rename four four_t
rename tran tran_t
rename ps ps_t
rename ac ac_t

save Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\truck_temp,replace

use Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\car_7990,clear
gen ve=1
rename wdth wdth_c
rename hght hght_c
rename wght wght_c
rename hp hp_c
rename four four_c
rename tran tran_c
rename ps ps_c
rename ac ac_c

append using Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\truck_temp

replace wdth_c=0 if wdth_c==.
replace hght_c=0 if hght_c==.
replace wght_c=0 if wght_c==.
replace hp_c=0 if hp_c==.
replace four_c=0 if four_c==.
replace tran_c=0 if tran_c==.
replace ps_c=0 if ps_c==.
replace ac_c=0 if ac_c==.
replace wdth_t=0 if wdth_t==.
replace hght_t=0 if hght_t==.
replace wght_t=0 if wght_t==.
replace hp_t=0 if hp_t==.
replace four_t=0 if four_t==.
replace tran_t=0 if tran_t==.
replace ps_t=0 if ps_t==.
replace ac_t=0 if ac_t==.

tab year, gen(yd)

gen cyd2=yd2
gen tyd2=yd2
replace cyd2=0 if type=="JT"
replace tyd2=0 if type~="JT"

gen cyd3=yd3
gen tyd3=yd3
replace cyd3=0 if type=="JT"
replace tyd3=0 if type~="JT"

gen cyd4=yd4
gen tyd4=yd4
replace cyd4=0 if type=="JT"
replace tyd4=0 if type~="JT"

gen cyd5=yd5
gen tyd5=yd5
replace cyd5=0 if type=="JT"
replace tyd5=0 if type~="JT"

gen cyd6=yd6
gen tyd6=yd6
replace cyd6=0 if type=="JT"
replace tyd6=0 if type~="JT"

gen cyd7=yd7
gen tyd7=yd7
replace cyd7=0 if type=="JT"
replace tyd7=0 if type~="JT"

gen cyd8=yd8
gen tyd8=yd8
replace cyd8=0 if type=="JT"
replace tyd8=0 if type~="JT"

gen cyd9=yd9
gen tyd9=yd9
replace cyd9=0 if type=="JT"
replace tyd9=0 if type~="JT"

gen cyd10=yd10
gen tyd10=yd10
replace cyd10=10 if type=="JT"
replace tyd10=10 if type~="JT"

gen cyd11=yd11
gen tyd11=yd11
replace cyd11=11 if type=="JT"
replace tyd11=11 if type~="JT"

gen cyd12=yd12
gen tyd12=yd12
replace cyd12=12 if type=="JT"
replace tyd12=12 if type~="JT"

program define nlct_1
version 7.0
if "`1'"=="?"{
global S_1 "a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 b2 b3 b4 b5 b6 b7 b8 b9 b10 b11 b12 c1 c2 c3 c4 c5 c6 c7 c8 d1 d2 d3 d4 d5 d6 d7 d8 e2 e3 e4 e5 e6 e7 e8 e9 e10 e11 e12"
global a3=1
global a4=1
global a5=1
global a6=1
global a7=1
global a8=1
global a9=1
global a10=1
global a11=1
global a12=1
global b2=.1
global b3=.1
global b4=.1
global b5=.1
global b6=.1
global b7=.1
global b8=.1
global b9=.1
global b10=.1
global b11=.1
global b12=.1
global c1=.1
global c2=.1
global c3=.1
global c4=.1
global c5=.1
global c6=.1
global c7=.1
global c8=.1
global d1=.1
global d2=.1
global d3=.1
global d4=.1
global d5=.1
global d6=.1
global d7=.1
global d8=.1
global e2=.1
global e3=.1
global e4=.1
global e5=.1
global e6=.1
global e7=.1
global e8=.1
global e9=.1
global e10=.1
global e11=.1
global e12=.1
exit
}

replace `1'=$a3*cyd3+$a4*cyd4+$a5*cyd5+$a6*cyd6+$a7*cyd7/*
*/+$a8*cyd8+$a9*cyd9+$a10*cyd10+$a11*cyd11+$a12*cyd12/*
*/+exp($b2*cyd2+$b3*cyd3+$b4*cyd4+$b5*cyd5+$b6*cyd6+$b7*cyd7/*
*/+$b8*cyd8+$b9*cyd9+$b10*cyd10+$b11*cyd11+$b12*cyd12/*
*/+$c1*wght_c+$c2*wdth_c+$c3*hght_c+$c4*hp_c+$c5*tran_c+$c6*ps_c+$c7*ac_c/*
*/+$c8)+exp($e2*tyd2+$e3*tyd3+$e4*tyd4+$e5*tyd5+$e6*tyd6+$e7*tyd7/*
*/+$e8*tyd8+$e9*tyd9+$e10*tyd10+$e11*tyd11+$e12*tyd12/*
*/+$d1*wght_t+$d2*wdth_t+$d3*hght_t+$d4*hp_t+$d5*tran_t+$d6*ps_t+$d7*four_t+$d8)

end

nl ct_1 price

gen winv=1/exp(_b[b2]*cyd2+_b[b3]*cyd3+_b[b4]*cyd4+_b[b5]*cyd5+_b[b6]*cyd6+_b[b7]*cyd7/*
*/+_b[b8]*cyd8+_b[b9]*cyd9+_b[b10]*cyd10+_b[b11]*cyd11+_b[b12]*cyd12/*
*/+_b[c1]*wght_c+_b[c2]*wdth_c+_b[c3]*hght_c+_b[c4]*hp_c+_b[c5]*tran_c+_b[c6]*ps_c/*
*/+_b[c7]*ac_c+_b[c8])

replace winv=1/exp(_b[e2]*tyd2+_b[e3]*tyd3+_b[e4]*tyd4+_b[e5]*tyd5+_b[e6]*tyd6/*
*/+_b[e7]*tyd7+_b[e8]*tyd8+_b[e9]*tyd9+_b[e10]*tyd10+_b[e11]*tyd11+_b[e12]*tyd12/*
*/+_b[d1]*wght_t+_b[d2]*wdth_t+_b[d3]*hght_t+_b[d4]*hp_t/*
*/+_b[d5]*tran_t+_b[d6]*ps_t+_b[d7]*four_t+_b[d8]) if ve==2

gen nprice=price*winv


program define nlct_2
version 7.0
if "`1'"=="?"{
global S_1 "a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 b2 b3 b4 b5 b6 b7 b8 b9 b10 b11 b12 c1 c2 c3 c4 c5 c6 c7 c8 d1 d2 d3 d4 d5 d6 d7 d8 e2 e3 e4 e5 e6 e7 e8 e9 e10 e11 e12"
global a3=1
global a4=1
global a5=1
global a6=1
global a7=1
global a8=1
global a9=1
global a10=1
global a11=1
global a12=1
global b2=.1
global b3=.1
global b4=.1
global b5=.1
global b6=.1
global b7=.1
global b8=.1
global b9=.1
global b10=.1
global b11=.1
global b12=.1
global c1=.1
global c2=.1
global c3=.1
global c4=.1
global c5=.1
global c6=.1
global c7=.1
global c8=.1
global d1=.1
global d2=.1
global d3=.1
global d4=.1
global d5=.1
global d6=.1
global d7=.1
global d8=.1
global e2=.1
global e3=.1
global e4=.1
global e5=.1
global e6=.1
global e7=.1
global e8=.1
global e9=.1
global e10=.1
global e11=.1
global e12=.1
exit
}

replace `1'=winv*($a3*cyd3+$a4*cyd4+$a5*cyd5+$a6*cyd6+$a7*cyd7/*
*/+$a8*cyd8+$a9*cyd9+$a10*cyd10+$a11*cyd11+$a12*cyd12)/*
*/+winv*exp($b2*cyd2+$b3*cyd3+$b4*cyd4+$b5*cyd5+$b6*cyd6+$b7*cyd7/*
*/+$b8*cyd8+$b9*cyd9+$b10*cyd10+$b11*cyd11+$b12*cyd12/*
*/+$c1*wght_c+$c2*wdth_c+$c3*hght_c+$c4*hp_c+$c5*tran_c+$c6*ps_c+$c7*ac_c/*
*/+$c8)+winv*exp($e2*tyd2+$e3*tyd3+$e4*tyd4+$e5*tyd5+$e6*tyd6+$e7*tyd7/*
*/+$e8*tyd8+$e9*tyd9+$e10*tyd10+$e11*tyd11+$e12*tyd12/*
*/+$d1*wght_t+$d2*wdth_t+$d3*hght_t+$d4*hp_t+$d5*tran_t+$d6*ps_t+$d7*four_t+$d8)

end

nl ct_2 nprice

program drop _all
log close
exit
```

Output:

```stata
. capture log close

. log using Z:\home\pacha\github\advanced-international-trade\first-edition\Chapte
> r-8\system_nocon.log,replace
----------------------------------------------------------------------------------
      name:  <unnamed>
       log:  Z:\home\pacha\github\advanced-international-trade\first-edition\Chapt
> er-8\system_nocon.log
  log type:  text
 opened on:  20 Jun 2024, 12:49:20

. 
. set matsize 400

Current memory allocation

                    current                                 memory usage
    settable          value     description                 (1M = 1024k)
    --------------------------------------------------------------------
    set maxvar         5000     max. variables allowed           1.909M
    set memory           50M    max. data space                 50.000M
    set matsize         400     max. RHS vars in models          1.254M
                                                            -----------
                                                                53.163M

. 
. use Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\tr
> uck_7990,clear

. gen ve=2

. rename wdth wdth_t

. rename hght hght_t

. rename weight wght_t

. rename hp hp_t

. rename four four_t

. rename tran tran_t

. rename ps ps_t

. rename ac ac_t

. 
. save Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\t
> ruck_temp,replace
file Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\tru
> ck_temp.dta saved

. 
. use Z:\home\pacha\github\advanced-international-trade\first-edition\Chapter-8\ca
> r_7990,clear

. gen ve=1

. rename wdth wdth_c

. rename hght hght_c

. rename wght wght_c

. rename hp hp_c

. rename four four_c

. rename tran tran_c

. rename ps ps_c

. rename ac ac_c

. 
. append using Z:\home\pacha\github\advanced-international-trade\first-edition\Cha
> pter-8\truck_temp

. 
. replace wdth_c=0 if wdth_c==.
(120 real changes made)

. replace hght_c=0 if hght_c==.
(120 real changes made)

. replace wght_c=0 if wght_c==.
(120 real changes made)

. replace hp_c=0 if hp_c==.
(120 real changes made)

. replace four_c=0 if four_c==.
(120 real changes made)

. replace tran_c=0 if tran_c==.
(120 real changes made)

. replace ps_c=0 if ps_c==.
(120 real changes made)

. replace ac_c=0 if ac_c==.
(120 real changes made)

. replace wdth_t=0 if wdth_t==.
(284 real changes made)

. replace hght_t=0 if hght_t==.
(284 real changes made)

. replace wght_t=0 if wght_t==.
(284 real changes made)

. replace hp_t=0 if hp_t==.
(284 real changes made)

. replace four_t=0 if four_t==.
(284 real changes made)

. replace tran_t=0 if tran_t==.
(284 real changes made)

. replace ps_t=0 if ps_t==.
(284 real changes made)

. replace ac_t=0 if ac_t==.
(284 real changes made)

. 
. tab year, gen(yd)

       year |      Freq.     Percent        Cum.
------------+-----------------------------------
         79 |         31        7.67        7.67
         80 |         34        8.42       16.09
         81 |         35        8.66       24.75
         82 |         35        8.66       33.42
         83 |         36        8.91       42.33
         84 |         40        9.90       52.23
         85 |         43       10.64       62.87
         86 |         33        8.17       71.04
         87 |         35        8.66       79.70
         88 |         30        7.43       87.13
         89 |         26        6.44       93.56
         90 |         26        6.44      100.00
------------+-----------------------------------
      Total |        404      100.00

. 
. gen cyd2=yd2

. gen tyd2=yd2

. replace cyd2=0 if type=="JT"
(8 real changes made)

. replace tyd2=0 if type~="JT"
(26 real changes made)

. 
. gen cyd3=yd3

. gen tyd3=yd3

. replace cyd3=0 if type=="JT"
(9 real changes made)

. replace tyd3=0 if type~="JT"
(26 real changes made)

. 
. gen cyd4=yd4

. gen tyd4=yd4

. replace cyd4=0 if type=="JT"
(9 real changes made)

. replace tyd4=0 if type~="JT"
(26 real changes made)

. 
. gen cyd5=yd5

. gen tyd5=yd5

. replace cyd5=0 if type=="JT"
(7 real changes made)

. replace tyd5=0 if type~="JT"
(29 real changes made)

. 
. gen cyd6=yd6

. gen tyd6=yd6

. replace cyd6=0 if type=="JT"
(7 real changes made)

. replace tyd6=0 if type~="JT"
(33 real changes made)

. 
. gen cyd7=yd7

. gen tyd7=yd7

. replace cyd7=0 if type=="JT"
(7 real changes made)

. replace tyd7=0 if type~="JT"
(36 real changes made)

. 
. gen cyd8=yd8

. gen tyd8=yd8

. replace cyd8=0 if type=="JT"
(7 real changes made)

. replace tyd8=0 if type~="JT"
(26 real changes made)

. 
. gen cyd9=yd9

. gen tyd9=yd9

. replace cyd9=0 if type=="JT"
(6 real changes made)

. replace tyd9=0 if type~="JT"
(29 real changes made)

. 
. gen cyd10=yd10

. gen tyd10=yd10

. replace cyd10=10 if type=="JT"
(84 real changes made)

. replace tyd10=10 if type~="JT"
(320 real changes made)

. 
. gen cyd11=yd11

. gen tyd11=yd11

. replace cyd11=11 if type=="JT"
(84 real changes made)

. replace tyd11=11 if type~="JT"
(320 real changes made)

. 
. gen cyd12=yd12

. gen tyd12=yd12

. replace cyd12=12 if type=="JT"
(84 real changes made)

. replace tyd12=12 if type~="JT"
(320 real changes made)

. 
. program define nlct_1
  1. version 7.0
  2. if "`1'"=="?"{
  3. global S_1 "a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 b2 b3 b4 b5 b6 b7 b8 b9 b10 b11 
> b12 c1 c2 c3 c4 c5 c6 c7 c8 d1 d2 d3 d4 d5 d6 d7 d8 e2 e3 e4 e5 e6 e7 e8 e9 e10 
> e11 e12"
  4. global a3=1
  5. global a4=1
  6. global a5=1
  7. global a6=1
  8. global a7=1
  9. global a8=1
 10. global a9=1
 11. global a10=1
 12. global a11=1
 13. global a12=1
 14. global b2=.1
 15. global b3=.1
 16. global b4=.1
 17. global b5=.1
 18. global b6=.1
 19. global b7=.1
 20. global b8=.1
 21. global b9=.1
 22. global b10=.1
 23. global b11=.1
 24. global b12=.1
 25. global c1=.1
 26. global c2=.1
 27. global c3=.1
 28. global c4=.1
 29. global c5=.1
 30. global c6=.1
 31. global c7=.1
 32. global c8=.1
 33. global d1=.1
 34. global d2=.1
 35. global d3=.1
 36. global d4=.1
 37. global d5=.1
 38. global d6=.1
 39. global d7=.1
 40. global d8=.1
 41. global e2=.1
 42. global e3=.1
 43. global e4=.1
 44. global e5=.1
 45. global e6=.1
 46. global e7=.1
 47. global e8=.1
 48. global e9=.1
 49. global e10=.1
 50. global e11=.1
 51. global e12=.1
 52. exit
 53. }
 54. 
. replace `1'=$a3*cyd3+$a4*cyd4+$a5*cyd5+$a6*cyd6+$a7*cyd7/*
> */+$a8*cyd8+$a9*cyd9+$a10*cyd10+$a11*cyd11+$a12*cyd12/*
> */+exp($b2*cyd2+$b3*cyd3+$b4*cyd4+$b5*cyd5+$b6*cyd6+$b7*cyd7/*
> */+$b8*cyd8+$b9*cyd9+$b10*cyd10+$b11*cyd11+$b12*cyd12/*
> */+$c1*wght_c+$c2*wdth_c+$c3*hght_c+$c4*hp_c+$c5*tran_c+$c6*ps_c+$c7*ac_c/*
> */+$c8)+exp($e2*tyd2+$e3*tyd3+$e4*tyd4+$e5*tyd5+$e6*tyd6+$e7*tyd7/*
> */+$e8*tyd8+$e9*tyd9+$e10*tyd10+$e11*tyd11+$e12*tyd12/*
> */+$d1*wght_t+$d2*wdth_t+$d3*hght_t+$d4*hp_t+$d5*tran_t+$d6*ps_t+$d7*four_t+$d8)
 55. 
. end

. 
. nl ct_1 price
(obs = 404)

Iteration 0:   residual SS =  3.65e+10
...
Iteration 403: residual SS =  4.69e+08
Iteration 404: residual SS =  4.69e+08

      Source |       SS       df       MS            Number of obs =       404
-------------+------------------------------         F( 48,   356) =    576.55
       Model |  3.6436e+10    48   759074436         Prob > F      =    0.0000
    Residual |   468703508   356  1316582.89         R-squared     =    0.9873
-------------+------------------------------         Adj R-squared =    0.9856
       Total |  3.6904e+10   404  91347218.9         Root MSE      =  1147.424
                                                     Res. dev.     =  6787.985
(ct_1)
------------------------------------------------------------------------------
       price |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          a3 |   311.3235   688.7506     0.45   0.652    -1043.208    1665.855
          a4 |   124.4009   678.8125     0.18   0.855    -1210.586    1459.387
          a5 |   -32.4732   654.0405    -0.05   0.960    -1318.742    1253.796
          a6 |   365.9132   650.4956     0.56   0.574    -913.3841     1645.21
          a7 |  -182.4107    662.807    -0.28   0.783     -1485.92    1121.099
          a8 |    99.5125   722.6989     0.14   0.891    -1321.783    1520.808
          a9 |   623.5557   740.7578     0.84   0.400    -833.2557    2080.367
         a10 |  -510.0145   850.6701    -0.60   0.549    -2182.985    1162.956
         a11 |  -117.2407   828.7073    -0.14   0.888    -1747.018    1512.536
         a12 |   165.7747   863.5199     0.19   0.848    -1532.467    1864.016
          b2 |  -.2525958   .0539141    -4.69   0.000    -.3586261   -.1465656
          b3 |  -.1623986    .112602    -1.44   0.150    -.3838473      .05905
          b4 |  -.0746543    .102305    -0.73   0.466    -.2758524    .1265438
          b5 |  -.0694248   .0974478    -0.71   0.477    -.2610706     .122221
          b6 |  -.0611509   .0966047    -0.63   0.527    -.2511386    .1288368
          b7 |   .0395587    .089472     0.44   0.659    -.1364014    .2155189
          b8 |  -.0052012   .0952998    -0.05   0.957    -.1926226    .1822202
          b9 |   .0293371   .0951523     0.31   0.758    -.1577941    .2164683
         b10 |   .1441127   .0960075     1.50   0.134    -.0447004    .3329258
         b11 |   .1563463   .0939872     1.66   0.097    -.0284936    .3411862
         b12 |   .0715575   .1017443     0.70   0.482    -.1285379    .2716529
          c1 |   .4753103   .1148428     4.14   0.000     .2494548    .7011659
          c2 |   .8298707   .1219701     6.80   0.000     .5899982    1.069743
          c3 |  -.2927558   .0563593    -5.19   0.000    -.4035949   -.1819167
          c4 |   .2302322    .046208     4.98   0.000     .1393573    .3211071
          c5 |   .0048313   .0243104     0.20   0.843    -.0429787    .0526413
          c6 |    .116925   .0288961     4.05   0.000     .0600965    .1737535
          c7 |   .1611654   .0256511     6.28   0.000     .1107185    .2116122
          c8 |   4.896426   .7054934     6.94   0.000     3.508967    6.283885
          d1 |   .5559378   .1008129     5.51   0.000      .357674    .7542015
          d2 |   .5115204   .2383617     2.15   0.033     .0427463    .9802945
          d3 |  -.2677578   .0799406    -3.35   0.001    -.4249731   -.1105426
          d4 |   .5615629   .1522031     3.69   0.000     .2622327     .860893
          d5 |   .1892271   .0545638     3.47   0.001     .0819193    .2965349
          d6 |   .0781166   .0591314     1.32   0.187    -.0381743    .1944074
          d7 |   .1586298   .1011966     1.57   0.118    -.0403884    .3576481
          d8 |   5.376737    1.26604     4.25   0.000      2.88688    7.866595
          e2 |  -.4027439   .3347902    -1.20   0.230    -1.061159    .2556712
          e3 |   .0890406   .1434657     0.62   0.535    -.1931062    .3711875
          e4 |   .0771731   .1369381     0.56   0.573    -.1921363    .3464824
          e5 |  -.0850111   .1786288    -0.48   0.634    -.4363115    .2662892
          e6 |  -.0639346   .1756482    -0.36   0.716    -.4093731     .281504
          e7 |  -.1390747   .1654681    -0.84   0.401    -.4644925    .1863432
          e8 |  -.0556387    .146723    -0.38   0.705    -.3441915    .2329141
          e9 |  -.1291071   .1527376    -0.85   0.399    -.4294884    .1712743
         e10 |  -.0432892   .1099129    -0.39   0.694    -.2594494     .172871
         e11 |   .0354982   .0951005     0.37   0.709    -.1515313    .2225277
         e12 |   .0692493   .0950716     0.73   0.467    -.1177233    .2562219
------------------------------------------------------------------------------
 (SEs, P values, CIs, and correlations are asymptotic approximations)

. 
. gen winv=1/exp(_b[b2]*cyd2+_b[b3]*cyd3+_b[b4]*cyd4+_b[b5]*cyd5+_b[b6]*cyd6+_b[b7
> ]*cyd7/*
> */+_b[b8]*cyd8+_b[b9]*cyd9+_b[b10]*cyd10+_b[b11]*cyd11+_b[b12]*cyd12/*
> */+_b[c1]*wght_c+_b[c2]*wdth_c+_b[c3]*hght_c+_b[c4]*hp_c+_b[c5]*tran_c+_b[c6]*ps
> _c/*
> */+_b[c7]*ac_c+_b[c8])

. 
. replace winv=1/exp(_b[e2]*tyd2+_b[e3]*tyd3+_b[e4]*tyd4+_b[e5]*tyd5+_b[e6]*tyd6/*
> */+_b[e7]*tyd7+_b[e8]*tyd8+_b[e9]*tyd9+_b[e10]*tyd10+_b[e11]*tyd11+_b[e12]*tyd12
> /*
> */+_b[d1]*wght_t+_b[d2]*wdth_t+_b[d3]*hght_t+_b[d4]*hp_t/*
> */+_b[d5]*tran_t+_b[d6]*ps_t+_b[d7]*four_t+_b[d8]) if ve==2
(120 real changes made)

. 
. gen nprice=price*winv

. 
. 
. program define nlct_2
  1. version 7.0
  2. if "`1'"=="?"{
  3. global S_1 "a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 b2 b3 b4 b5 b6 b7 b8 b9 b10 b11 
> b12 c1 c2 c3 c4 c5 c6 c7 c8 d1 d2 d3 d4 d5 d6 d7 d8 e2 e3 e4 e5 e6 e7 e8 e9 e10 
> e11 e12"
  4. global a3=1
  5. global a4=1
  6. global a5=1
  7. global a6=1
  8. global a7=1
  9. global a8=1
 10. global a9=1
 11. global a10=1
 12. global a11=1
 13. global a12=1
 14. global b2=.1
 15. global b3=.1
 16. global b4=.1
 17. global b5=.1
 18. global b6=.1
 19. global b7=.1
 20. global b8=.1
 21. global b9=.1
 22. global b10=.1
 23. global b11=.1
 24. global b12=.1
 25. global c1=.1
 26. global c2=.1
 27. global c3=.1
 28. global c4=.1
 29. global c5=.1
 30. global c6=.1
 31. global c7=.1
 32. global c8=.1
 33. global d1=.1
 34. global d2=.1
 35. global d3=.1
 36. global d4=.1
 37. global d5=.1
 38. global d6=.1
 39. global d7=.1
 40. global d8=.1
 41. global e2=.1
 42. global e3=.1
 43. global e4=.1
 44. global e5=.1
 45. global e6=.1
 46. global e7=.1
 47. global e8=.1
 48. global e9=.1
 49. global e10=.1
 50. global e11=.1
 51. global e12=.1
 52. exit
 53. }
 54. 
. replace `1'=winv*($a3*cyd3+$a4*cyd4+$a5*cyd5+$a6*cyd6+$a7*cyd7/*
> */+$a8*cyd8+$a9*cyd9+$a10*cyd10+$a11*cyd11+$a12*cyd12)/*
> */+winv*exp($b2*cyd2+$b3*cyd3+$b4*cyd4+$b5*cyd5+$b6*cyd6+$b7*cyd7/*
> */+$b8*cyd8+$b9*cyd9+$b10*cyd10+$b11*cyd11+$b12*cyd12/*
> */+$c1*wght_c+$c2*wdth_c+$c3*hght_c+$c4*hp_c+$c5*tran_c+$c6*ps_c+$c7*ac_c/*
> */+$c8)+winv*exp($e2*tyd2+$e3*tyd3+$e4*tyd4+$e5*tyd5+$e6*tyd6+$e7*tyd7/*
> */+$e8*tyd8+$e9*tyd9+$e10*tyd10+$e11*tyd11+$e12*tyd12/*
> */+$d1*wght_t+$d2*wdth_t+$d3*hght_t+$d4*hp_t+$d5*tran_t+$d6*ps_t+$d7*four_t+$d8)
 55. 
. end

. 
. nl ct_2 nprice
(obs = 404)

Iteration 0:   residual SS =  705.4054
...
Iteration 704: residual SS =  7.966466
Iteration 705: residual SS =  7.966466

      Source |       SS       df       MS            Number of obs =       404
-------------+------------------------------         F( 48,   356) =    660.25
       Model |  709.194518    48  14.7748858         Prob > F      =    0.0000
    Residual |  7.96646553   356  .022377712         R-squared     =    0.9889
-------------+------------------------------         Adj R-squared =    0.9874
       Total |  717.160983   404  1.77515095         Root MSE      =  .1495918
                                                     Res. dev.     = -439.6719
(ct_2)
------------------------------------------------------------------------------
      nprice |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          a3 |   734.9432   503.0787     1.46   0.145    -254.4365    1724.323
          a4 |   811.8784   535.6913     1.52   0.131    -241.6389    1865.396
          a5 |   859.9771   526.5314     1.63   0.103    -175.5258     1895.48
          a6 |    945.024   527.8999     1.79   0.074    -93.17038    1983.218
          a7 |   450.3389    579.345     0.78   0.437    -689.0301    1589.708
          a8 |    725.567   698.5813     1.04   0.300    -648.2979    2099.432
          a9 |   1212.369   671.2086     1.81   0.072    -107.6629    2532.402
         a10 |  -51.05579   931.6632    -0.05   0.956    -1883.311      1781.2
         a11 |  -53.23228    912.887    -0.06   0.954    -1848.562    1742.097
         a12 |  -217.8427   972.9089    -0.22   0.823    -2131.214    1695.529
          b2 |  -.1700182   .0516685    -3.29   0.001     -.271632   -.0684043
          b3 |  -.1672112   .1165432    -1.43   0.152    -.3964109    .0619886
          b4 |  -.1364319   .1189651    -1.15   0.252    -.3703947    .0975309
          b5 |  -.1678046    .116889    -1.44   0.152    -.3976843    .0620751
          b6 |  -.1187765   .1130927    -1.05   0.294    -.3411903    .1036372
          b7 |   .0027724   .1073729     0.03   0.979    -.2083925    .2139373
          b8 |   .0083828   .1202947     0.07   0.944    -.2281947    .2449603
          b9 |   .0722563   .1111482     0.65   0.516    -.1463333    .2908459
         b10 |   .1921118   .1236317     1.55   0.121    -.0510286    .4352521
         b11 |   .1767444   .1254828     1.41   0.160    -.0700362    .4235251
         b12 |    .124542   .1343276     0.93   0.354    -.1396333    .3887174
          c1 |   .2644223   .1493313     1.77   0.077    -.0292602    .5581048
          c2 |   1.028573   .1865784     5.51   0.000     .6616382    1.395507
          c3 |  -.1981295    .074137    -2.67   0.008    -.3439312   -.0523279
          c4 |   .4020387   .0759905     5.29   0.000     .2525919    .5514855
          c5 |   .0675951   .0326762     2.07   0.039     .0033324    .1318578
          c6 |   .1552683   .0366316     4.24   0.000     .0832268    .2273098
          c7 |   .1491266   .0387902     3.84   0.000     .0728399    .2254133
          c8 |   3.307344   1.074511     3.08   0.002     1.194158    5.420531
          d1 |   .7231065    .119554     6.05   0.000     .4879856    .9582274
          d2 |   .3303981   .1291179     2.56   0.011     .0764684    .5843278
          d3 |   -.267597   .0829423    -3.23   0.001    -.4307154   -.1044785
          d4 |   .5081312   .1273821     3.99   0.000     .2576152    .7586472
          d5 |   .1645018   .0368046     4.47   0.000       .09212    .2368836
          d6 |   .0892036   .0628575     1.42   0.157     -.034415    .2128223
          d7 |   .1904291   .1205351     1.58   0.115    -.0466212    .4274794
          d8 |   6.374857   .7038929     9.06   0.000     4.990546    7.759168
          e2 |  -.1798449   .0710735    -2.53   0.012    -.3196216   -.0400681
          e3 |   .1727863   .0528975     3.27   0.001     .0687554    .2768172
          e4 |   .1637826   .0530403     3.09   0.002     .0594709    .2680942
          e5 |   .0199666   .0524922     0.38   0.704    -.0832672    .1232004
          e6 |   .0365099   .0530112     0.69   0.491    -.0677445    .1407643
          e7 |  -.0699329   .0514782    -1.36   0.175    -.1711726    .0313067
          e8 |   .0069641   .0512908     0.14   0.892    -.0939069    .1078352
          e9 |  -.0513169   .0541998    -0.95   0.344    -.1579089     .055275
         e10 |   -.029118   .0467261    -0.62   0.534     -.121012    .0627759
         e11 |   .0074579   .0446832     0.17   0.868    -.0804183    .0953341
         e12 |   .0590645    .044435     1.33   0.185    -.0283236    .1464527
------------------------------------------------------------------------------
 (SEs, P values, CIs, and correlations are asymptotic approximations)

. 
. program drop _all

. log close
      name:  <unnamed>
       log:  Z:\home\pacha\github\advanced-international-trade\first-edition\Chapt
> er-8\system_nocon.log
  log type:  text
 closed on:  20 Jun 2024, 12:51:03
----------------------------------------------------------------------------------

. exit

end of do-file
```

### My code

#### system_nocom.do

```{r ch8_ex5a}
truck_7990 <- feenstra_88$truck_7990 %>%
  mutate(ve = 2) %>%
  rename(
    wdth_t = wdth, hght_t = hght, wght_t = weight, hp_t = hp, four_t = four,
    tran_t = tran, ps_t = ps, ac_t = ac
  )

car_7990 <- feenstra_88$car_7990 %>%
  mutate(ve = 1) %>%
  rename(
    wdth_c = wdth, hght_c = hght, wght_c = wght, hp_c = hp, four_c = four,
    tran_c = tran, ps_c = ps, ac_c = ac
  )

truck_7990 <- truck_7990 %>%
  bind_rows(car_7990) %>%
  mutate(
    wdth_c = ifelse(is.na(wdth_c), 0, wdth_c),
    hght_c = ifelse(is.na(hght_c), 0, hght_c),
    wght_c = ifelse(is.na(wght_c), 0, wght_c),
    hp_c = ifelse(is.na(hp_c), 0, hp_c),
    four_c = ifelse(is.na(four_c), 0, four_c),
    tran_c = ifelse(is.na(tran_c), 0, tran_c),
    ps_c = ifelse(is.na(ps_c), 0, ps_c),
    ac_c = ifelse(is.na(ac_c), 0, ac_c),
    wdth_t = ifelse(is.na(wdth_t), 0, wdth_t),
    hght_t = ifelse(is.na(hght_t), 0, hght_t),
    wght_t = ifelse(is.na(wght_t), 0, wght_t),
    hp_t = ifelse(is.na(hp_t), 0, hp_t),
    four_t = ifelse(is.na(four_t), 0, four_t),
    tran_t = ifelse(is.na(tran_t), 0, tran_t),
    ps_t = ifelse(is.na(ps_t), 0, ps_t),
    ac_t = ifelse(is.na(ac_t), 0, ac_t)
  )

truck_7990 %>%
  group_by(year) %>%
  summarise(freq = n()) %>%
  ungroup() %>%
  mutate(
    percent = freq / sum(freq) * 100,
    cum = cumsum(percent)
  )

truck_7990 <- truck_7990 %>%
  mutate(yd = as.factor(year - min(year) + 1))

truck_7990_dummy <- model.matrix(~ yd - 1, data = truck_7990)

truck_7990 <- truck_7990 %>%
  bind_cols(as.data.frame(truck_7990_dummy))

truck_7990 <- truck_7990 %>%
  mutate(
    cyd2 = case_when(
      type == "JT" ~ 0,
      TRUE ~ yd2
    ),
    tyd2 = case_when(
      type != "JT" ~ 0,
      TRUE ~ yd2
    ),
    cyd3 = case_when(
      type == "JT" ~ 0,
      TRUE ~ yd3
    ),
    tyd3 = case_when(
      type != "JT" ~ 0,
      TRUE ~ yd3
    ),
    cyd4 = case_when(
      type == "JT" ~ 0,
      TRUE ~ yd4
    ),
    tyd4 = case_when(
      type != "JT" ~ 0,
      TRUE ~ yd4
    ),
    cyd5 = case_when(
      type == "JT" ~ 0,
      TRUE ~ yd5
    ),
    tyd5 = case_when(
      type != "JT" ~ 0,
      TRUE ~ yd5
    ),
    cyd6 = case_when(
      type == "JT" ~ 0,
      TRUE ~ yd6
    ),
    tyd6 = case_when(
      type != "JT" ~ 0,
      TRUE ~ yd6
    ),
    cyd7 = case_when(
      type == "JT" ~ 0,
      TRUE ~ yd7
    ),
    tyd7 = case_when(
      type != "JT" ~ 0,
      TRUE ~ yd7
    ),
    cyd8 = case_when(
      type == "JT" ~ 0,
      TRUE ~ yd8
    ),
    tyd8 = case_when(
      type != "JT" ~ 0,
      TRUE ~ yd8
    ),
    cyd9 = case_when(
      type == "JT" ~ 0,
      TRUE ~ yd9
    ),
    tyd9 = case_when(
      type != "JT" ~ 0,
      TRUE ~ yd9
    ),
    cyd10 = case_when(
      type == "JT" ~ 10,
      TRUE ~ yd10
    ),
    tyd10 = case_when(
      type != "JT" ~ 10,
      TRUE ~ yd10
    ),
    cyd11 = case_when(
      type == "JT" ~ 11,
      TRUE ~ yd11
    ),
    tyd11 = case_when(
      type != "JT" ~ 11,
      TRUE ~ yd11
    ),
    cyd12 = case_when(
      type == "JT" ~ 12,
      TRUE ~ yd12
    ),
    tyd12 = case_when(
      type != "JT" ~ 12,
      TRUE ~ yd12
    )
  )

initial_values <- list(
  a3 = 1, a4 = 1, a5 = 1, a6 = 1, a7 = 1, a8 = 1, a9 = 1, a10 = 1, a11 = 1,
  a12 = 1,
  b2 = 0.1, b3 = 0.1, b4 = 0.1, b5 = 0.1, b6 = 0.1, b7 = 0.1, b8 = 0.1,
  b9 = 0.1, b10 = 0.1, b11 = 0.1, b12 = 0.1,
  c1 = 0.1, c2 = 0.1, c3 = 0.1, c4 = 0.1, c5 = 0.1, c6 = 0.1, c7 = 0.1,
  c8 = 0.1,
  d1 = 0.1, d2 = 0.1, d3 = 0.1, d4 = 0.1, d5 = 0.1, d6 = 0.1, d7 = 0.1,
  d8 = 0.1,
  e2 = 0.1, e3 = 0.1, e4 = 0.1, e5 = 0.1, e6 = 0.1, e7 = 0.1, e8 = 0.1,
  e9 = 0.1, e10 = 0.1, e11 = 0.1, e12 = 0.1
)

fit <- nlsLM(
  price ~ a3 * cyd3 + a4 * cyd4 + a5 * cyd5 + a6 * cyd6 + a7 * cyd7 +
    a8 * cyd8 + a9 * cyd9 + a10 * cyd10 + a11 * cyd11 + a12 * cyd12 +
    exp(b2 * cyd2 + b3 * cyd3 + b4 * cyd4 + b5 * cyd5 + b6 * cyd6 + b7 * cyd7 +
      b8 * cyd8 + b9 * cyd9 + b10 * cyd10 + b11 * cyd11 + b12 * cyd12 +
      c1 * wght_c + c2 * wdth_c + c3 * hght_c + c4 * hp_c + c5 * tran_c +
      c6 * ps_c + c7 * ac_c + c8) +
    exp(e2 * tyd2 + e3 * tyd3 + e4 * tyd4 + e5 * tyd5 + e6 * tyd6 + e7 * tyd7 +
      e8 * tyd8 + e9 * tyd9 + e10 * tyd10 + e11 * tyd11 + e12 * tyd12 +
      d1 * wght_t + d2 * wdth_t + d3 * hght_t + d4 * hp_t + d5 * tran_t +
      d6 * ps_t + d7 * four_t + d8),
  data = truck_7990,
  start = initial_values,
  # adjust parameters to account to slow convergence
  control = nls.lm.control(maxiter = 1000, maxfev = 10000)
)

summary(fit)

fit_coef <- coef(fit)

truck_7990 <- truck_7990 %>%
  mutate(
    winv = case_when(
      ve == 1 ~ 1 / exp(fit_coef["b2"] * cyd2 + fit_coef["b3"] * cyd3 +
        fit_coef["b4"] * cyd4 + fit_coef["b5"] * cyd5 + fit_coef["b6"] * cyd6 +
        fit_coef["b7"] * cyd7 + fit_coef["b8"] * cyd8 + fit_coef["b9"] * cyd9 +
        fit_coef["b10"] * cyd10 + fit_coef["b11"] * cyd11 +
        fit_coef["b12"] * cyd12 + fit_coef["c1"] * wght_c +
        fit_coef["c2"] * wdth_c + fit_coef["c3"] * hght_c +
        fit_coef["c4"] * hp_c + fit_coef["c5"] * tran_c +
        fit_coef["c6"] * ps_c + fit_coef["c7"] * ac_c + fit_coef["c8"]),
      ve == 2 ~ 1 / exp(fit_coef["e2"] * tyd2 + fit_coef["e3"] * tyd3 +
        fit_coef["e4"] * tyd4 + fit_coef["e5"] * tyd5 + fit_coef["e6"] * tyd6 +
        fit_coef["e7"] * tyd7 + fit_coef["e8"] * tyd8 + fit_coef["e9"] * tyd9 +
        fit_coef["e10"] * tyd10 + fit_coef["e11"] * tyd11 +
        fit_coef["e12"] * tyd12 + fit_coef["d1"] * wght_t +
        fit_coef["d2"] * wdth_t + fit_coef["d3"] * hght_t +
        fit_coef["d4"] * hp_t + fit_coef["d5"] * tran_t +
        fit_coef["d6"] * ps_t + fit_coef["d7"] * four_t + fit_coef["d8"]),
    ),
    nprice = price * winv
  )

fit2 <- nlsLM(
  nprice ~winv * (a3 * cyd3 + a4 * cyd4 + a5 * cyd5 + a6 * cyd6 + a7 * cyd7 +
    a8 * cyd8 + a9 * cyd9 + a10 * cyd10 + a11 * cyd11 + a12 * cyd12) +
    winv * exp(b2 * cyd2 + b3 * cyd3 + b4 * cyd4 + b5 * cyd5 + b6 * cyd6 +
      b7 * cyd7 + b8 * cyd8 + b9 * cyd9 + b10 * cyd10 + b11 * cyd11 +
      b12 * cyd12 + c1 * wght_c + c2 * wdth_c + c3 * hght_c + c4 * hp_c +
      c5 * tran_c + c6 * ps_c + c7 * ac_c + c8) +
    winv * exp(e2 * tyd2 + e3 * tyd3 + e4 * tyd4 + e5 * tyd5 + e6 * tyd6 +
      e7 * tyd7 + e8 * tyd8 + e9 * tyd9 + e10 * tyd10 + e11 * tyd11 +
      e12 * tyd12 + d1 * wght_t + d2 * wdth_t + d3 * hght_t + d4 * hp_t +
      d5 * tran_t + d6 * ps_t + d7 * four_t + d8),
  data = truck_7990,
  start = initial_values,
  control = nls.lm.control(maxiter = 1000, maxfev = 10000)
)

summary(fit2)
```
